{"version":3,"file":"lib/program.js","mappings":"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","sources":["webpack://@jsii/runtime/../../../node_modules/at-least-node/index.js","webpack://@jsii/runtime/../../../node_modules/chownr/chownr.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/copy-sync/copy-sync.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/copy-sync/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/copy/copy.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/copy/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/empty/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/file.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/link.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/symlink-paths.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/symlink-type.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/ensure/symlink.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/fs/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/json/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/json/jsonfile.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/json/output-json-sync.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/json/output-json.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/mkdirs/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/mkdirs/make-dir.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/move-sync/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/move-sync/move-sync.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/move/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/move/move.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/output/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/path-exists/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/remove/index.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/remove/rimraf.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/util/stat.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/lib/util/utimes.js","webpack://@jsii/runtime/../../../node_modules/fs-extra/node_modules/universalify/index.js","webpack://@jsii/runtime/../../../node_modules/fs-minipass/index.js","webpack://@jsii/runtime/../../../node_modules/graceful-fs/clone.js","webpack://@jsii/runtime/../../../node_modules/graceful-fs/graceful-fs.js","webpack://@jsii/runtime/../../../node_modules/graceful-fs/legacy-streams.js","webpack://@jsii/runtime/../../../node_modules/graceful-fs/polyfills.js","webpack://@jsii/runtime/../../../node_modules/jsonfile/index.js","webpack://@jsii/runtime/../../../node_modules/jsonfile/node_modules/universalify/index.js","webpack://@jsii/runtime/../../../node_modules/jsonfile/utils.js","webpack://@jsii/runtime/../../../node_modules/jsonschema/lib/attribute.js","webpack://@jsii/runtime/../../../node_modules/jsonschema/lib/helpers.js","webpack://@jsii/runtime/../../../node_modules/jsonschema/lib/index.js","webpack://@jsii/runtime/../../../node_modules/jsonschema/lib/scan.js","webpack://@jsii/runtime/../../../node_modules/jsonschema/lib/validator.js","webpack://@jsii/runtime/../../../node_modules/minipass/index.js","webpack://@jsii/runtime/../../../node_modules/minizlib/constants.js","webpack://@jsii/runtime/../../../node_modules/minizlib/index.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/index.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/find-made.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/mkdirp-manual.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/mkdirp-native.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/opts-arg.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/path-arg.js","webpack://@jsii/runtime/../../../node_modules/mkdirp/lib/use-native.js","webpack://@jsii/runtime/../../../node_modules/tar/index.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/create.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/extract.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/get-write-flag.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/header.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/high-level-opt.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/large-numbers.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/list.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/mkdir.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/mode-fix.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/normalize-windows-path.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/pack.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/parse.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/path-reservations.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/pax.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/read-entry.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/replace.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/strip-absolute-path.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/strip-trailing-slashes.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/types.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/unpack.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/update.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/warn-mixin.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/winchars.js","webpack://@jsii/runtime/../../../node_modules/tar/lib/write-entry.js","webpack://@jsii/runtime/../../../node_modules/yallist/iterator.js","webpack://@jsii/runtime/../../../node_modules/yallist/yallist.js","webpack://@jsii/runtime/../kernel/lib/api.ts","webpack://@jsii/runtime/../kernel/lib/index.ts","webpack://@jsii/runtime/../kernel/lib/kernel.ts","webpack://@jsii/runtime/../kernel/lib/objects.ts","webpack://@jsii/runtime/../kernel/lib/on-exit.ts","webpack://@jsii/runtime/../kernel/lib/serialization.ts","webpack://@jsii/runtime/./lib/host.ts","webpack://@jsii/runtime/./lib/in-out.ts","webpack://@jsii/runtime/./lib/sync-stdio.ts","webpack://@jsii/runtime/../spec/lib/assembly.ts","webpack://@jsii/runtime/../spec/lib/index.ts","webpack://@jsii/runtime/../spec/lib/name-tree.ts","webpack://@jsii/runtime/../spec/lib/validate-assembly.ts","webpack://@jsii/runtime/external \"assert\"","webpack://@jsii/runtime/external \"buffer\"","webpack://@jsii/runtime/external \"child_process\"","webpack://@jsii/runtime/external \"constants\"","webpack://@jsii/runtime/external \"crypto\"","webpack://@jsii/runtime/external \"events\"","webpack://@jsii/runtime/external \"fs\"","webpack://@jsii/runtime/external \"module\"","webpack://@jsii/runtime/external \"os\"","webpack://@jsii/runtime/external \"path\"","webpack://@jsii/runtime/external \"process\"","webpack://@jsii/runtime/external \"stream\"","webpack://@jsii/runtime/external \"string_decoder\"","webpack://@jsii/runtime/external \"url\"","webpack://@jsii/runtime/external \"util\"","webpack://@jsii/runtime/external \"vm\"","webpack://@jsii/runtime/external \"zlib\"","webpack://@jsii/runtime/webpack/bootstrap","webpack://@jsii/runtime/webpack/runtime/node module decorator","webpack://@jsii/runtime/./lib/program.ts"],"sourcesContent":["module.exports = r => {\n  const n = process.versions.node.split('.').map(x => parseInt(x, 10))\n  r = r.split('.').map(x => parseInt(x, 10))\n  return n[0] > r[0] || (n[0] === r[0] && (n[1] > r[1] || (n[1] === r[1] && n[2] >= r[2])))\n}\n","'use strict'\nconst fs = require('fs')\nconst path = require('path')\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown'\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'\n\n/* istanbul ignore next */\nconst needEISDIRHandled = fs.lchown &&\n  !process.version.match(/v1[1-9]+\\./) &&\n  !process.version.match(/v10\\.[6-9]/)\n\nconst lchownSync = (path, uid, gid) => {\n  try {\n    return fs[LCHOWNSYNC](path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst chownSync = (path, uid, gid) => {\n  try {\n    return fs.chownSync(path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst handleEISDIR =\n  needEISDIRHandled ? (path, uid, gid, cb) => er => {\n    // Node prior to v10 had a very questionable implementation of\n    // fs.lchown, which would always try to call fs.open on a directory\n    // Fall back to fs.chown in those cases.\n    if (!er || er.code !== 'EISDIR')\n      cb(er)\n    else\n      fs.chown(path, uid, gid, cb)\n  }\n  : (_, __, ___, cb) => cb\n\n/* istanbul ignore next */\nconst handleEISDirSync =\n  needEISDIRHandled ? (path, uid, gid) => {\n    try {\n      return lchownSync(path, uid, gid)\n    } catch (er) {\n      if (er.code !== 'EISDIR')\n        throw er\n      chownSync(path, uid, gid)\n    }\n  }\n  : (path, uid, gid) => lchownSync(path, uid, gid)\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb)\nlet readdirSync = (path, options) => fs.readdirSync(path, options)\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion))\n  readdir = (path, options, cb) => fs.readdir(path, cb)\n\nconst chown = (cpath, uid, gid, cb) => {\n  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {\n    // Skip ENOENT error\n    cb(er && er.code !== 'ENOENT' ? er : null)\n  }))\n}\n\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string')\n    return fs.lstat(path.resolve(p, child), (er, stats) => {\n      // Skip ENOENT error\n      if (er)\n        return cb(er.code !== 'ENOENT' ? er : null)\n      stats.name = child\n      chownrKid(p, stats, uid, gid, cb)\n    })\n\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er)\n        return cb(er)\n      const cpath = path.resolve(p, child.name)\n      chown(cpath, uid, gid, cb)\n    })\n  } else {\n    const cpath = path.resolve(p, child.name)\n    chown(cpath, uid, gid, cb)\n  }\n}\n\n\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, { withFileTypes: true }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er) {\n      if (er.code === 'ENOENT')\n        return cb()\n      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')\n        return cb(er)\n    }\n    if (er || !children.length)\n      return chown(p, uid, gid, cb)\n\n    let len = children.length\n    let errState = null\n    const then = er => {\n      if (errState)\n        return\n      if (er)\n        return cb(errState = er)\n      if (-- len === 0)\n        return chown(p, uid, gid, cb)\n    }\n\n    children.forEach(child => chownrKid(p, child, uid, gid, then))\n  })\n}\n\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    try {\n      const stats = fs.lstatSync(path.resolve(p, child))\n      stats.name = child\n      child = stats\n    } catch (er) {\n      if (er.code === 'ENOENT')\n        return\n      else\n        throw er\n    }\n  }\n\n  if (child.isDirectory())\n    chownrSync(path.resolve(p, child.name), uid, gid)\n\n  handleEISDirSync(path.resolve(p, child.name), uid, gid)\n}\n\nconst chownrSync = (p, uid, gid) => {\n  let children\n  try {\n    children = readdirSync(p, { withFileTypes: true })\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return\n    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')\n      return handleEISDirSync(p, uid, gid)\n    else\n      throw er\n  }\n\n  if (children && children.length)\n    children.forEach(child => chownrKidSync(p, child, uid, gid))\n\n  return handleEISDirSync(p, uid, gid)\n}\n\nmodule.exports = chownr\nchownr.sync = chownrSync\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n","'use strict'\n\nmodule.exports = {\n  copySync: require('./copy-sync')\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirs = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimesMillis = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n      return checkParentDir(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb)\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { destStat } = stats\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  copy: u(require('./copy'))\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n","'use strict'\n\nconst file = require('./file')\nconst link = require('./link')\nconst symlink = require('./symlink')\n\nmodule.exports = {\n  // file\n  createFile: file.createFile,\n  createFileSync: file.createFileSync,\n  ensureFile: file.createFile,\n  ensureFileSync: file.createFileSync,\n  // link\n  createLink: link.createLink,\n  createLinkSync: link.createLinkSync,\n  ensureLink: link.createLink,\n  ensureLinkSync: link.createLinkSync,\n  // symlink\n  createSymlink: symlink.createSymlink,\n  createSymlinkSync: symlink.createSymlinkSync,\n  ensureSymlink: symlink.createSymlink,\n  ensureSymlinkSync: symlink.createSymlinkSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n","'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst pathExists = require('../path-exists').pathExists\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nfunction symlinkPaths (srcpath, dstpath, callback) {\n  if (path.isAbsolute(srcpath)) {\n    return fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureSymlink')\n        return callback(err)\n      }\n      return callback(null, {\n        toCwd: srcpath,\n        toDst: srcpath\n      })\n    })\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    return pathExists(relativeToDst, (err, exists) => {\n      if (err) return callback(err)\n      if (exists) {\n        return callback(null, {\n          toCwd: relativeToDst,\n          toDst: srcpath\n        })\n      } else {\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            toCwd: srcpath,\n            toDst: path.relative(dstdir, srcpath)\n          })\n        })\n      }\n    })\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  let exists\n  if (path.isAbsolute(srcpath)) {\n    exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    exists = fs.existsSync(relativeToDst)\n    if (exists) {\n      return {\n        toCwd: relativeToDst,\n        toDst: srcpath\n      }\n    } else {\n      exists = fs.existsSync(srcpath)\n      if (!exists) throw new Error('relative srcpath does not exist')\n      return {\n        toCwd: srcpath,\n        toDst: path.relative(dstdir, srcpath)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  symlinkPaths,\n  symlinkPathsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n","'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchmod',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rm',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.opendir was added in Node.js v12.12.0\n  // fs.rm was added in Node.js v14.14.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read(), fs.write(), & fs.writev() need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// fs.writev only available in Node v12.9.0+\nif (typeof fs.writev === 'function') {\n  // Function signature is\n  // s.writev(fd, buffers[, position], callback)\n  // We need to handle the optional arg, so we use ...args\n  exports.writev = function (fd, buffers, ...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      return fs.writev(fd, buffers, ...args)\n    }\n\n    return new Promise((resolve, reject) => {\n      fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {\n        if (err) return reject(err)\n        resolve({ bytesWritten, buffers })\n      })\n    })\n  }\n}\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n}\n","'use strict'\n\nmodule.exports = {\n  // Export promiseified graceful-fs:\n  ...require('./fs'),\n  // Export extra methods:\n  ...require('./copy-sync'),\n  ...require('./copy'),\n  ...require('./empty'),\n  ...require('./ensure'),\n  ...require('./json'),\n  ...require('./mkdirs'),\n  ...require('./move-sync'),\n  ...require('./move'),\n  ...require('./output'),\n  ...require('./path-exists'),\n  ...require('./remove')\n}\n\n// Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\nconst fs = require('fs')\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, 'promises', {\n    get () { return fs.promises }\n  })\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst jsonFile = require('./jsonfile')\n\njsonFile.outputJson = u(require('./output-json'))\njsonFile.outputJsonSync = require('./output-json-sync')\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n","'use strict'\n\nconst jsonFile = require('jsonfile')\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: jsonFile.readFile,\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: jsonFile.writeFile,\n  writeJsonSync: jsonFile.writeFileSync\n}\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFileSync } = require('../output')\n\nfunction outputJsonSync (file, data, options) {\n  const str = stringify(data, options)\n\n  outputFileSync(file, str, options)\n}\n\nmodule.exports = outputJsonSync\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFile } = require('../output')\n\nasync function outputJson (file, data, options = {}) {\n  const str = stringify(data, options)\n\n  await outputFile(file, str, options)\n}\n\nmodule.exports = outputJson\n","'use strict'\nconst u = require('universalify').fromPromise\nconst { makeDir: _makeDir, makeDirSync } = require('./make-dir')\nconst makeDir = u(_makeDir)\n\nmodule.exports = {\n  mkdirs: makeDir,\n  mkdirsSync: makeDirSync,\n  // alias\n  mkdirp: makeDir,\n  mkdirpSync: makeDirSync,\n  ensureDir: makeDir,\n  ensureDirSync: makeDirSync\n}\n","// Adapted from https://github.com/sindresorhus/make-dir\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'\nconst fs = require('../fs')\nconst path = require('path')\nconst atLeastNode = require('at-least-node')\n\nconst useNativeRecursiveOption = atLeastNode('10.12.0')\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''))\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`)\n      error.code = 'EINVAL'\n      throw error\n    }\n  }\n}\n\nconst processOptions = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') options = { mode: options }\n  return { ...defaults, ...options }\n}\n\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`)\n  error.code = 'EPERM'\n  error.errno = -4048\n  error.path = pth\n  error.syscall = 'mkdir'\n  return error\n}\n\nmodule.exports.makeDir = async (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdir(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = async pth => {\n    try {\n      await fs.mkdir(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        await make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        const stats = await fs.stat(pth)\n        if (!stats.isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n\nmodule.exports.makeDirSync = (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = pth => {\n    try {\n      fs.mkdirSync(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        if (!fs.statSync(pth).isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n","'use strict'\n\nmodule.exports = {\n  moveSync: require('./move-sync')\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy-sync').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat } = stat.checkPathsSync(src, dest, 'move')\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite)\n}\n\nfunction doRename (src, dest, overwrite) {\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  move: u(require('./move'))\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copy = require('../copy').copy\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirp\nconst pathExists = require('../path-exists').pathExists\nconst stat = require('../util/stat')\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  stat.checkPaths(src, dest, 'move', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'move', err => {\n      if (err) return cb(err)\n      mkdirp(path.dirname(dest), err => {\n        if (err) return cb(err)\n        return doRename(src, dest, overwrite, cb)\n      })\n    })\n  })\n}\n\nfunction doRename (src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nmodule.exports = move\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst rimraf = require('./rimraf')\n\nmodule.exports = {\n  remove: u(rimraf),\n  removeSync: rimraf.sync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst assert = require('assert')\n\nconst isWindows = (process.platform === 'win32')\n\nfunction defaults (options) {\n  const methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(m => {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n}\n\nfunction rimraf (p, options, cb) {\n  let busyTries = 0\n\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&\n          busyTries < options.maxBusyTries) {\n        busyTries++\n        const time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(() => rimraf_(p, options, CB), time)\n      }\n\n      // already gone\n      if (er.code === 'ENOENT') er = null\n    }\n\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, (er, st) => {\n    if (er && er.code === 'ENOENT') {\n      return cb(null)\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === 'EPERM' && isWindows) {\n      return fixWinEPERM(p, options, er, cb)\n    }\n\n    if (st && st.isDirectory()) {\n      return rmdir(p, options, er, cb)\n    }\n\n    options.unlink(p, er => {\n      if (er) {\n        if (er.code === 'ENOENT') {\n          return cb(null)\n        }\n        if (er.code === 'EPERM') {\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        }\n        if (er.code === 'EISDIR') {\n          return rmdir(p, options, er, cb)\n        }\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.chmod(p, 0o666, er2 => {\n    if (er2) {\n      cb(er2.code === 'ENOENT' ? null : er)\n    } else {\n      options.stat(p, (er3, stats) => {\n        if (er3) {\n          cb(er3.code === 'ENOENT' ? null : er)\n        } else if (stats.isDirectory()) {\n          rmdir(p, options, er, cb)\n        } else {\n          options.unlink(p, cb)\n        }\n      })\n    }\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  let stats\n\n  assert(p)\n  assert(options)\n\n  try {\n    options.chmodSync(p, 0o666)\n  } catch (er2) {\n    if (er2.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  try {\n    stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  if (stats.isDirectory()) {\n    rmdirSync(p, options, er)\n  } else {\n    options.unlinkSync(p)\n  }\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, er => {\n    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {\n      rmkids(p, options, cb)\n    } else if (er && er.code === 'ENOTDIR') {\n      cb(originalEr)\n    } else {\n      cb(er)\n    }\n  })\n}\n\nfunction rmkids (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, (er, files) => {\n    if (er) return cb(er)\n\n    let n = files.length\n    let errState\n\n    if (n === 0) return options.rmdir(p, cb)\n\n    files.forEach(f => {\n      rimraf(path.join(p, f), options, er => {\n        if (errState) {\n          return\n        }\n        if (er) return cb(errState = er)\n        if (--n === 0) {\n          options.rmdir(p, cb)\n        }\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  let st\n\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  try {\n    st = options.lstatSync(p)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er.code === 'EPERM' && isWindows) {\n      fixWinEPERMSync(p, options, er)\n    }\n  }\n\n  try {\n    // sunos lets the root user unlink directories, which is... weird.\n    if (st && st.isDirectory()) {\n      rmdirSync(p, options, null)\n    } else {\n      options.unlinkSync(p)\n    }\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    } else if (er.code === 'EPERM') {\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    } else if (er.code !== 'EISDIR') {\n      throw er\n    }\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === 'ENOTDIR') {\n      throw originalEr\n    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {\n      rmkidsSync(p, options)\n    } else if (er.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))\n\n  if (isWindows) {\n    // We only end up here once we got ENOTEMPTY at least once, and\n    // at this point, we are guaranteed to have removed all the kids.\n    // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n    // try really hard to delete stuff on windows, because it has a\n    // PROFOUNDLY annoying habit of not closing handles promptly when\n    // files are deleted, resulting in spurious ENOTEMPTY errors.\n    const startTime = Date.now()\n    do {\n      try {\n        const ret = options.rmdirSync(p, options)\n        return ret\n      } catch {}\n    } while (Date.now() - startTime < 500) // give up after 500ms\n  } else {\n    const ret = options.rmdirSync(p, options)\n    return ret\n  }\n}\n\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\nconst atLeastNode = require('at-least-node')\n\nconst nodeSupportsBigInt = atLeastNode('10.5.0')\nconst stat = (file) => nodeSupportsBigInt ? fs.stat(file, { bigint: true }) : fs.stat(file)\nconst statSync = (file) => nodeSupportsBigInt ? fs.statSync(file, { bigint: true }) : fs.statSync(file)\n\nfunction getStats (src, dest) {\n  return Promise.all([\n    stat(src),\n    stat(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest) {\n  let destStat\n  const srcStat = statSync(src)\n  try {\n    destStat = statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  const callback = (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  }\n  if (nodeSupportsBigInt) fs.stat(destParent, { bigint: true }, callback)\n  else fs.stat(destParent, callback)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = statSync(destParent)\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true\n    }\n    // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n    if (destStat.size === srcStat.size &&\n        destStat.mode === srcStat.mode &&\n        destStat.nlink === srcStat.nlink &&\n        destStat.atimeMs === srcStat.atimeMs &&\n        destStat.mtimeMs === srcStat.mtimeMs &&\n        destStat.ctimeMs === srcStat.ctimeMs &&\n        destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true\n    }\n  }\n  return false\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction utimesMillis (path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err)\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr)\n      })\n    })\n  })\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  utimesMillis,\n  utimesMillisSync\n}\n","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        fn.call(\n          this,\n          ...args,\n          (err, res) => (err != null) ? reject(err) : resolve(res)\n        )\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n","'use strict'\nconst MiniPass = require('minipass')\nconst EE = require('events').EventEmitter\nconst fs = require('fs')\n\nlet writev = fs.writev\n/* istanbul ignore next */\nif (!writev) {\n  // This entire block can be removed if support for earlier than Node.js\n  // 12.9.0 is not needed.\n  const binding = process.binding('fs')\n  const FSReqWrap = binding.FSReqWrap || binding.FSReqCallback\n\n  writev = (fd, iovec, pos, cb) => {\n    const done = (er, bw) => cb(er, bw, iovec)\n    const req = new FSReqWrap()\n    req.oncomplete = done\n    binding.writeBuffers(fd, iovec, pos, req)\n  }\n}\n\nconst _autoClose = Symbol('_autoClose')\nconst _close = Symbol('_close')\nconst _ended = Symbol('_ended')\nconst _fd = Symbol('_fd')\nconst _finished = Symbol('_finished')\nconst _flags = Symbol('_flags')\nconst _flush = Symbol('_flush')\nconst _handleChunk = Symbol('_handleChunk')\nconst _makeBuf = Symbol('_makeBuf')\nconst _mode = Symbol('_mode')\nconst _needDrain = Symbol('_needDrain')\nconst _onerror = Symbol('_onerror')\nconst _onopen = Symbol('_onopen')\nconst _onread = Symbol('_onread')\nconst _onwrite = Symbol('_onwrite')\nconst _open = Symbol('_open')\nconst _path = Symbol('_path')\nconst _pos = Symbol('_pos')\nconst _queue = Symbol('_queue')\nconst _read = Symbol('_read')\nconst _readSize = Symbol('_readSize')\nconst _reading = Symbol('_reading')\nconst _remain = Symbol('_remain')\nconst _size = Symbol('_size')\nconst _write = Symbol('_write')\nconst _writing = Symbol('_writing')\nconst _defaultFlag = Symbol('_defaultFlag')\nconst _errored = Symbol('_errored')\n\nclass ReadStream extends MiniPass {\n  constructor (path, opt) {\n    opt = opt || {}\n    super(opt)\n\n    this.readable = true\n    this.writable = false\n\n    if (typeof path !== 'string')\n      throw new TypeError('path must be a string')\n\n    this[_errored] = false\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null\n    this[_path] = path\n    this[_readSize] = opt.readSize || 16*1024*1024\n    this[_reading] = false\n    this[_size] = typeof opt.size === 'number' ? opt.size : Infinity\n    this[_remain] = this[_size]\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ?\n      opt.autoClose : true\n\n    if (typeof this[_fd] === 'number')\n      this[_read]()\n    else\n      this[_open]()\n  }\n\n  get fd () { return this[_fd] }\n  get path () { return this[_path] }\n\n  write () {\n    throw new TypeError('this is a readable stream')\n  }\n\n  end () {\n    throw new TypeError('this is a readable stream')\n  }\n\n  [_open] () {\n    fs.open(this[_path], 'r', (er, fd) => this[_onopen](er, fd))\n  }\n\n  [_onopen] (er, fd) {\n    if (er)\n      this[_onerror](er)\n    else {\n      this[_fd] = fd\n      this.emit('open', fd)\n      this[_read]()\n    }\n  }\n\n  [_makeBuf] () {\n    return Buffer.allocUnsafe(Math.min(this[_readSize], this[_remain]))\n  }\n\n  [_read] () {\n    if (!this[_reading]) {\n      this[_reading] = true\n      const buf = this[_makeBuf]()\n      /* istanbul ignore if */\n      if (buf.length === 0)\n        return process.nextTick(() => this[_onread](null, 0, buf))\n      fs.read(this[_fd], buf, 0, buf.length, null, (er, br, buf) =>\n        this[_onread](er, br, buf))\n    }\n  }\n\n  [_onread] (er, br, buf) {\n    this[_reading] = false\n    if (er)\n      this[_onerror](er)\n    else if (this[_handleChunk](br, buf))\n      this[_read]()\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))\n    }\n  }\n\n  [_onerror] (er) {\n    this[_reading] = true\n    this[_close]()\n    this.emit('error', er)\n  }\n\n  [_handleChunk] (br, buf) {\n    let ret = false\n    // no effect if infinite\n    this[_remain] -= br\n    if (br > 0)\n      ret = super.write(br < buf.length ? buf.slice(0, br) : buf)\n\n    if (br === 0 || this[_remain] <= 0) {\n      ret = false\n      this[_close]()\n      super.end()\n    }\n\n    return ret\n  }\n\n  emit (ev, data) {\n    switch (ev) {\n      case 'prefinish':\n      case 'finish':\n        break\n\n      case 'drain':\n        if (typeof this[_fd] === 'number')\n          this[_read]()\n        break\n\n      case 'error':\n        if (this[_errored])\n          return\n        this[_errored] = true\n        return super.emit(ev, data)\n\n      default:\n        return super.emit(ev, data)\n    }\n  }\n}\n\nclass ReadStreamSync extends ReadStream {\n  [_open] () {\n    let threw = true\n    try {\n      this[_onopen](null, fs.openSync(this[_path], 'r'))\n      threw = false\n    } finally {\n      if (threw)\n        this[_close]()\n    }\n  }\n\n  [_read] () {\n    let threw = true\n    try {\n      if (!this[_reading]) {\n        this[_reading] = true\n        do {\n          const buf = this[_makeBuf]()\n          /* istanbul ignore next */\n          const br = buf.length === 0 ? 0\n            : fs.readSync(this[_fd], buf, 0, buf.length, null)\n          if (!this[_handleChunk](br, buf))\n            break\n        } while (true)\n        this[_reading] = false\n      }\n      threw = false\n    } finally {\n      if (threw)\n        this[_close]()\n    }\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.closeSync(fd)\n      this.emit('close')\n    }\n  }\n}\n\nclass WriteStream extends EE {\n  constructor (path, opt) {\n    opt = opt || {}\n    super(opt)\n    this.readable = false\n    this.writable = true\n    this[_errored] = false\n    this[_writing] = false\n    this[_ended] = false\n    this[_needDrain] = false\n    this[_queue] = []\n    this[_path] = path\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null\n    this[_mode] = opt.mode === undefined ? 0o666 : opt.mode\n    this[_pos] = typeof opt.start === 'number' ? opt.start : null\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ?\n      opt.autoClose : true\n\n    // truncating makes no sense when writing into the middle\n    const defaultFlag = this[_pos] !== null ? 'r+' : 'w'\n    this[_defaultFlag] = opt.flags === undefined\n    this[_flags] = this[_defaultFlag] ? defaultFlag : opt.flags\n\n    if (this[_fd] === null)\n      this[_open]()\n  }\n\n  emit (ev, data) {\n    if (ev === 'error') {\n      if (this[_errored])\n        return\n      this[_errored] = true\n    }\n    return super.emit(ev, data)\n  }\n\n\n  get fd () { return this[_fd] }\n  get path () { return this[_path] }\n\n  [_onerror] (er) {\n    this[_close]()\n    this[_writing] = true\n    this.emit('error', er)\n  }\n\n  [_open] () {\n    fs.open(this[_path], this[_flags], this[_mode],\n      (er, fd) => this[_onopen](er, fd))\n  }\n\n  [_onopen] (er, fd) {\n    if (this[_defaultFlag] &&\n        this[_flags] === 'r+' &&\n        er && er.code === 'ENOENT') {\n      this[_flags] = 'w'\n      this[_open]()\n    } else if (er)\n      this[_onerror](er)\n    else {\n      this[_fd] = fd\n      this.emit('open', fd)\n      this[_flush]()\n    }\n  }\n\n  end (buf, enc) {\n    if (buf)\n      this.write(buf, enc)\n\n    this[_ended] = true\n\n    // synthetic after-write logic, where drain/finish live\n    if (!this[_writing] && !this[_queue].length &&\n        typeof this[_fd] === 'number')\n      this[_onwrite](null, 0)\n    return this\n  }\n\n  write (buf, enc) {\n    if (typeof buf === 'string')\n      buf = Buffer.from(buf, enc)\n\n    if (this[_ended]) {\n      this.emit('error', new Error('write() after end()'))\n      return false\n    }\n\n    if (this[_fd] === null || this[_writing] || this[_queue].length) {\n      this[_queue].push(buf)\n      this[_needDrain] = true\n      return false\n    }\n\n    this[_writing] = true\n    this[_write](buf)\n    return true\n  }\n\n  [_write] (buf) {\n    fs.write(this[_fd], buf, 0, buf.length, this[_pos], (er, bw) =>\n      this[_onwrite](er, bw))\n  }\n\n  [_onwrite] (er, bw) {\n    if (er)\n      this[_onerror](er)\n    else {\n      if (this[_pos] !== null)\n        this[_pos] += bw\n      if (this[_queue].length)\n        this[_flush]()\n      else {\n        this[_writing] = false\n\n        if (this[_ended] && !this[_finished]) {\n          this[_finished] = true\n          this[_close]()\n          this.emit('finish')\n        } else if (this[_needDrain]) {\n          this[_needDrain] = false\n          this.emit('drain')\n        }\n      }\n    }\n  }\n\n  [_flush] () {\n    if (this[_queue].length === 0) {\n      if (this[_ended])\n        this[_onwrite](null, 0)\n    } else if (this[_queue].length === 1)\n      this[_write](this[_queue].pop())\n    else {\n      const iovec = this[_queue]\n      this[_queue] = []\n      writev(this[_fd], iovec, this[_pos],\n        (er, bw) => this[_onwrite](er, bw))\n    }\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))\n    }\n  }\n}\n\nclass WriteStreamSync extends WriteStream {\n  [_open] () {\n    let fd\n    // only wrap in a try{} block if we know we'll retry, to avoid\n    // the rethrow obscuring the error's source frame in most cases.\n    if (this[_defaultFlag] && this[_flags] === 'r+') {\n      try {\n        fd = fs.openSync(this[_path], this[_flags], this[_mode])\n      } catch (er) {\n        if (er.code === 'ENOENT') {\n          this[_flags] = 'w'\n          return this[_open]()\n        } else\n          throw er\n      }\n    } else\n      fd = fs.openSync(this[_path], this[_flags], this[_mode])\n\n    this[_onopen](null, fd)\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.closeSync(fd)\n      this.emit('close')\n    }\n  }\n\n  [_write] (buf) {\n    // throw the original, but try to close if it fails\n    let threw = true\n    try {\n      this[_onwrite](null,\n        fs.writeSync(this[_fd], buf, 0, buf.length, this[_pos]))\n      threw = false\n    } finally {\n      if (threw)\n        try { this[_close]() } catch (_) {}\n    }\n  }\n}\n\nexports.ReadStream = ReadStream\nexports.ReadStreamSync = ReadStreamSync\n\nexports.WriteStream = WriteStream\nexports.WriteStreamSync = WriteStreamSync\n","'use strict'\n\nmodule.exports = clone\n\nvar getPrototypeOf = Object.getPrototypeOf || function (obj) {\n  return obj.__proto__\n}\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: getPrototypeOf(obj) }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      resetQueue()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return go$copyFile(src, dest, flags, cb)\n\n    function go$copyFile (src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readdir(path, options, cb)\n\n    function go$readdir (path, options, cb, startTime) {\n      return fs$readdir(path, options, function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readdir, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (files && files.sort)\n            files.sort()\n\n          if (typeof cb === 'function')\n            cb.call(this, err, files)\n        }\n      })\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n  retry()\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue () {\n  var now = Date.now()\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now // startTime\n      fs[gracefulQueue][i][4] = now // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry()\n}\n\nfunction retry () {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer)\n  retryTimer = undefined\n\n  if (fs[gracefulQueue].length === 0)\n    return\n\n  var elem = fs[gracefulQueue].shift()\n  var fn = elem[0]\n  var args = elem[1]\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2]\n  var startTime = elem[3]\n  var lastTime = elem[4]\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args)\n    fn.apply(null, args)\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args)\n    var cb = args.pop()\n    if (typeof cb === 'function')\n      cb.call(null, err)\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1)\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100)\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args)\n      fn.apply(null, args.concat([startTime]))\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem)\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0)\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\n// This check is needed until node.js 12 is required\nif (typeof process.chdir === 'function') {\n  var chdir = process.chdir\n  process.chdir = function (d) {\n    cwd = null\n    chdir.call(process, d)\n  }\n  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        fn.call(\n          this,\n          ...args,\n          (err, res) => (err != null) ? reject(err) : resolve(res)\n        )\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n","function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (!schema.items) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict'\nconst EE = require('events')\nconst Stream = require('stream')\nconst Yallist = require('yallist')\nconst SD = require('string_decoder').StringDecoder\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\nconst DESTROYED = Symbol('destroyed')\n\n// TODO remove when Node v8 support drops\nconst doIter = global._MP_NO_ITERATOR_SYMBOLS_  !== '1'\nconst ASYNCITERATOR = doIter && Symbol.asyncIterator\n  || Symbol('asyncIterator not implemented')\nconst ITERATOR = doIter && Symbol.iterator\n  || Symbol('iterator not implemented')\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\nconst isEndish = ev =>\n  ev === 'end' ||\n  ev === 'finish' ||\n  ev === 'prefinish'\n\nconst isArrayBuffer = b => b instanceof ArrayBuffer ||\n  typeof b === 'object' &&\n  b.constructor &&\n  b.constructor.name === 'ArrayBuffer' &&\n  b.byteLength >= 0\n\nconst isArrayBufferView = b => !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\nmodule.exports = class Minipass extends Stream {\n  constructor (options) {\n    super()\n    this[FLOWING] = false\n    // whether we're explicitly paused\n    this[PAUSED] = false\n    this.pipes = new Yallist()\n    this.buffer = new Yallist()\n    this[OBJECTMODE] = options && options.objectMode || false\n    if (this[OBJECTMODE])\n      this[ENCODING] = null\n    else\n      this[ENCODING] = options && options.encoding || null\n    if (this[ENCODING] === 'buffer')\n      this[ENCODING] = null\n    this[DECODER] = this[ENCODING] ? new SD(this[ENCODING]) : null\n    this[EOF] = false\n    this[EMITTED_END] = false\n    this[EMITTING_END] = false\n    this[CLOSED] = false\n    this.writable = true\n    this.readable = true\n    this[BUFFERLENGTH] = 0\n    this[DESTROYED] = false\n  }\n\n  get bufferLength () { return this[BUFFERLENGTH] }\n\n  get encoding () { return this[ENCODING] }\n  set encoding (enc) {\n    if (this[OBJECTMODE])\n      throw new Error('cannot set encoding in objectMode')\n\n    if (this[ENCODING] && enc !== this[ENCODING] &&\n        (this[DECODER] && this[DECODER].lastNeed || this[BUFFERLENGTH]))\n      throw new Error('cannot change encoding')\n\n    if (this[ENCODING] !== enc) {\n      this[DECODER] = enc ? new SD(enc) : null\n      if (this.buffer.length)\n        this.buffer = this.buffer.map(chunk => this[DECODER].write(chunk))\n    }\n\n    this[ENCODING] = enc\n  }\n\n  setEncoding (enc) {\n    this.encoding = enc\n  }\n\n  get objectMode () { return this[OBJECTMODE] }\n  set objectMode (om) { this[OBJECTMODE] = this[OBJECTMODE] || !!om }\n\n  write (chunk, encoding, cb) {\n    if (this[EOF])\n      throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit('error', Object.assign(\n        new Error('Cannot call write after a stream was destroyed'),\n        { code: 'ERR_STREAM_DESTROYED' }\n      ))\n      return true\n    }\n\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n\n    if (!encoding)\n      encoding = 'utf8'\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything else switches us into object mode\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk))\n        chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n      else if (isArrayBuffer(chunk))\n        chunk = Buffer.from(chunk)\n      else if (typeof chunk !== 'string')\n        // use the setter so we throw if we have encoding set\n        this.objectMode = true\n    }\n\n    // this ensures at this point that the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!this.objectMode && !chunk.length) {\n      if (this[BUFFERLENGTH] !== 0)\n        this.emit('readable')\n      if (cb)\n        cb()\n      return this.flowing\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (typeof chunk === 'string' && !this[OBJECTMODE] &&\n        // unless it is a string already ready for us to use\n        !(encoding === this[ENCODING] && !this[DECODER].lastNeed)) {\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING])\n      chunk = this[DECODER].write(chunk)\n\n    if (this.flowing) {\n      // if we somehow have something in the buffer, but we think we're\n      // flowing, then we need to flush all that out first, or we get\n      // chunks coming in out of order.  Can't emit 'drain' here though,\n      // because we're mid-write, so that'd be bad.\n      if (this[BUFFERLENGTH] !== 0)\n        this[FLUSH](true)\n      this.emit('data', chunk)\n    } else\n      this[BUFFERPUSH](chunk)\n\n    if (this[BUFFERLENGTH] !== 0)\n      this.emit('readable')\n\n    if (cb)\n      cb()\n\n    return this.flowing\n  }\n\n  read (n) {\n    if (this[DESTROYED])\n      return null\n\n    try {\n      if (this[BUFFERLENGTH] === 0 || n === 0 || n > this[BUFFERLENGTH])\n        return null\n\n      if (this[OBJECTMODE])\n        n = null\n\n      if (this.buffer.length > 1 && !this[OBJECTMODE]) {\n        if (this.encoding)\n          this.buffer = new Yallist([\n            Array.from(this.buffer).join('')\n          ])\n        else\n          this.buffer = new Yallist([\n            Buffer.concat(Array.from(this.buffer), this[BUFFERLENGTH])\n          ])\n      }\n\n      return this[READ](n || null, this.buffer.head.value)\n    } finally {\n      this[MAYBE_EMIT_END]()\n    }\n  }\n\n  [READ] (n, chunk) {\n    if (n === chunk.length || n === null)\n      this[BUFFERSHIFT]()\n    else {\n      this.buffer.head.value = chunk.slice(n)\n      chunk = chunk.slice(0, n)\n      this[BUFFERLENGTH] -= n\n    }\n\n    this.emit('data', chunk)\n\n    if (!this.buffer.length && !this[EOF])\n      this.emit('drain')\n\n    return chunk\n  }\n\n  end (chunk, encoding, cb) {\n    if (typeof chunk === 'function')\n      cb = chunk, chunk = null\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n    if (chunk)\n      this.write(chunk, encoding)\n    if (cb)\n      this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this.flowing || !this[PAUSED])\n      this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME] () {\n    if (this[DESTROYED])\n      return\n\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this.buffer.length)\n      this[FLUSH]()\n    else if (this[EOF])\n      this[MAYBE_EMIT_END]()\n    else\n      this.emit('drain')\n  }\n\n  resume () {\n    return this[RESUME]()\n  }\n\n  pause () {\n    this[FLOWING] = false\n    this[PAUSED] = true\n  }\n\n  get destroyed () {\n    return this[DESTROYED]\n  }\n\n  get flowing () {\n    return this[FLOWING]\n  }\n\n  get paused () {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH] (chunk) {\n    if (this[OBJECTMODE])\n      this[BUFFERLENGTH] += 1\n    else\n      this[BUFFERLENGTH] += chunk.length\n    return this.buffer.push(chunk)\n  }\n\n  [BUFFERSHIFT] () {\n    if (this.buffer.length) {\n      if (this[OBJECTMODE])\n        this[BUFFERLENGTH] -= 1\n      else\n        this[BUFFERLENGTH] -= this.buffer.head.value.length\n    }\n    return this.buffer.shift()\n  }\n\n  [FLUSH] (noDrain) {\n    do {} while (this[FLUSHCHUNK](this[BUFFERSHIFT]()))\n\n    if (!noDrain && !this.buffer.length && !this[EOF])\n      this.emit('drain')\n  }\n\n  [FLUSHCHUNK] (chunk) {\n    return chunk ? (this.emit('data', chunk), this.flowing) : false\n  }\n\n  pipe (dest, opts) {\n    if (this[DESTROYED])\n      return\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === process.stdout || dest === process.stderr)\n      opts.end = false\n    else\n      opts.end = opts.end !== false\n\n    const p = { dest: dest, opts: opts, ondrain: _ => this[RESUME]() }\n    this.pipes.push(p)\n\n    dest.on('drain', p.ondrain)\n    this[RESUME]()\n    // piping an ended stream ends immediately\n    if (ended && p.opts.end)\n      p.dest.end()\n    return dest\n  }\n\n  addListener (ev, fn) {\n    return this.on(ev, fn)\n  }\n\n  on (ev, fn) {\n    try {\n      return super.on(ev, fn)\n    } finally {\n      if (ev === 'data' && !this.pipes.length && !this.flowing)\n        this[RESUME]()\n      else if (isEndish(ev) && this[EMITTED_END]) {\n        super.emit(ev)\n        this.removeAllListeners(ev)\n      }\n    }\n  }\n\n  get emittedEnd () {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END] () {\n    if (!this[EMITTING_END] &&\n        !this[EMITTED_END] &&\n        !this[DESTROYED] &&\n        this.buffer.length === 0 &&\n        this[EOF]) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED])\n        this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  emit (ev, data) {\n    // error and close are only events allowed after calling destroy()\n    if (ev !== 'error' && ev !== 'close' && ev !== DESTROYED && this[DESTROYED])\n      return\n    else if (ev === 'data') {\n      if (!data)\n        return\n\n      if (this.pipes.length)\n        this.pipes.forEach(p =>\n          p.dest.write(data) === false && this.pause())\n    } else if (ev === 'end') {\n      // only actual end gets this treatment\n      if (this[EMITTED_END] === true)\n        return\n\n      this[EMITTED_END] = true\n      this.readable = false\n\n      if (this[DECODER]) {\n        data = this[DECODER].end()\n        if (data) {\n          this.pipes.forEach(p => p.dest.write(data))\n          super.emit('data', data)\n        }\n      }\n\n      this.pipes.forEach(p => {\n        p.dest.removeListener('drain', p.ondrain)\n        if (p.opts.end)\n          p.dest.end()\n      })\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED])\n        return\n    }\n\n    // TODO: replace with a spread operator when Node v4 support drops\n    const args = new Array(arguments.length)\n    args[0] = ev\n    args[1] = data\n    if (arguments.length > 2) {\n      for (let i = 2; i < arguments.length; i++) {\n        args[i] = arguments[i]\n      }\n    }\n\n    try {\n      return super.emit.apply(this, args)\n    } finally {\n      if (!isEndish(ev))\n        this[MAYBE_EMIT_END]()\n      else\n        this.removeAllListeners(ev)\n    }\n  }\n\n  // const all = await stream.collect()\n  collect () {\n    const buf = []\n    if (!this[OBJECTMODE])\n      buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += c.length\n    })\n    return p.then(() => buf)\n  }\n\n  // const data = await stream.concat()\n  concat () {\n    return this[OBJECTMODE]\n      ? Promise.reject(new Error('cannot concat in objectMode'))\n      : this.collect().then(buf =>\n          this[OBJECTMODE]\n            ? Promise.reject(new Error('cannot concat in objectMode'))\n            : this[ENCODING] ? buf.join('') : Buffer.concat(buf, buf.dataLength))\n  }\n\n  // stream.promise().then(() => done, er => emitted error)\n  promise () {\n    return new Promise((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('end', () => resolve())\n      this.on('error', er => reject(er))\n    })\n  }\n\n  // for await (let chunk of stream)\n  [ASYNCITERATOR] () {\n    const next = () => {\n      const res = this.read()\n      if (res !== null)\n        return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF])\n        return Promise.resolve({ done: true })\n\n      let resolve = null\n      let reject = null\n      const onerr = er => {\n        this.removeListener('data', ondata)\n        this.removeListener('end', onend)\n        reject(er)\n      }\n      const ondata = value => {\n        this.removeListener('error', onerr)\n        this.removeListener('end', onend)\n        this.pause()\n        resolve({ value: value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.removeListener('error', onerr)\n        this.removeListener('data', ondata)\n        resolve({ done: true })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return { next }\n  }\n\n  // for (let chunk of stream)\n  [ITERATOR] () {\n    const next = () => {\n      const value = this.read()\n      const done = value === null\n      return { value, done }\n    }\n    return { next }\n  }\n\n  destroy (er) {\n    if (this[DESTROYED]) {\n      if (er)\n        this.emit('error', er)\n      else\n        this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n\n    // throw away all buffered data, it's never coming out\n    this.buffer = new Yallist()\n    this[BUFFERLENGTH] = 0\n\n    if (typeof this.close === 'function' && !this[CLOSED])\n      this.close()\n\n    if (er)\n      this.emit('error', er)\n    else // if no error to emit, still reject pending promises\n      this.emit(DESTROYED)\n\n    return this\n  }\n\n  static isStream (s) {\n    return !!s && (s instanceof Minipass || s instanceof Stream ||\n      s instanceof EE && (\n        typeof s.pipe === 'function' || // readable\n        (typeof s.write === 'function' && typeof s.end === 'function') // writable\n      ))\n  }\n}\n","// Update with any zlib constants that are added or changed in the future.\n// Node v6 didn't export this, so we just hard code the version and rely\n// on all the other hard-coded values from zlib v4736.  When node v6\n// support drops, we can just export the realZlibConstants object.\nconst realZlibConstants = require('zlib').constants ||\n  /* istanbul ignore next */ { ZLIB_VERNUM: 4736 }\n\nmodule.exports = Object.freeze(Object.assign(Object.create(null), {\n  Z_NO_FLUSH: 0,\n  Z_PARTIAL_FLUSH: 1,\n  Z_SYNC_FLUSH: 2,\n  Z_FULL_FLUSH: 3,\n  Z_FINISH: 4,\n  Z_BLOCK: 5,\n  Z_OK: 0,\n  Z_STREAM_END: 1,\n  Z_NEED_DICT: 2,\n  Z_ERRNO: -1,\n  Z_STREAM_ERROR: -2,\n  Z_DATA_ERROR: -3,\n  Z_MEM_ERROR: -4,\n  Z_BUF_ERROR: -5,\n  Z_VERSION_ERROR: -6,\n  Z_NO_COMPRESSION: 0,\n  Z_BEST_SPEED: 1,\n  Z_BEST_COMPRESSION: 9,\n  Z_DEFAULT_COMPRESSION: -1,\n  Z_FILTERED: 1,\n  Z_HUFFMAN_ONLY: 2,\n  Z_RLE: 3,\n  Z_FIXED: 4,\n  Z_DEFAULT_STRATEGY: 0,\n  DEFLATE: 1,\n  INFLATE: 2,\n  GZIP: 3,\n  GUNZIP: 4,\n  DEFLATERAW: 5,\n  INFLATERAW: 6,\n  UNZIP: 7,\n  BROTLI_DECODE: 8,\n  BROTLI_ENCODE: 9,\n  Z_MIN_WINDOWBITS: 8,\n  Z_MAX_WINDOWBITS: 15,\n  Z_DEFAULT_WINDOWBITS: 15,\n  Z_MIN_CHUNK: 64,\n  Z_MAX_CHUNK: Infinity,\n  Z_DEFAULT_CHUNK: 16384,\n  Z_MIN_MEMLEVEL: 1,\n  Z_MAX_MEMLEVEL: 9,\n  Z_DEFAULT_MEMLEVEL: 8,\n  Z_MIN_LEVEL: -1,\n  Z_MAX_LEVEL: 9,\n  Z_DEFAULT_LEVEL: -1,\n  BROTLI_OPERATION_PROCESS: 0,\n  BROTLI_OPERATION_FLUSH: 1,\n  BROTLI_OPERATION_FINISH: 2,\n  BROTLI_OPERATION_EMIT_METADATA: 3,\n  BROTLI_MODE_GENERIC: 0,\n  BROTLI_MODE_TEXT: 1,\n  BROTLI_MODE_FONT: 2,\n  BROTLI_DEFAULT_MODE: 0,\n  BROTLI_MIN_QUALITY: 0,\n  BROTLI_MAX_QUALITY: 11,\n  BROTLI_DEFAULT_QUALITY: 11,\n  BROTLI_MIN_WINDOW_BITS: 10,\n  BROTLI_MAX_WINDOW_BITS: 24,\n  BROTLI_LARGE_MAX_WINDOW_BITS: 30,\n  BROTLI_DEFAULT_WINDOW: 22,\n  BROTLI_MIN_INPUT_BLOCK_BITS: 16,\n  BROTLI_MAX_INPUT_BLOCK_BITS: 24,\n  BROTLI_PARAM_MODE: 0,\n  BROTLI_PARAM_QUALITY: 1,\n  BROTLI_PARAM_LGWIN: 2,\n  BROTLI_PARAM_LGBLOCK: 3,\n  BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING: 4,\n  BROTLI_PARAM_SIZE_HINT: 5,\n  BROTLI_PARAM_LARGE_WINDOW: 6,\n  BROTLI_PARAM_NPOSTFIX: 7,\n  BROTLI_PARAM_NDIRECT: 8,\n  BROTLI_DECODER_RESULT_ERROR: 0,\n  BROTLI_DECODER_RESULT_SUCCESS: 1,\n  BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT: 2,\n  BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT: 3,\n  BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION: 0,\n  BROTLI_DECODER_PARAM_LARGE_WINDOW: 1,\n  BROTLI_DECODER_NO_ERROR: 0,\n  BROTLI_DECODER_SUCCESS: 1,\n  BROTLI_DECODER_NEEDS_MORE_INPUT: 2,\n  BROTLI_DECODER_NEEDS_MORE_OUTPUT: 3,\n  BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE: -1,\n  BROTLI_DECODER_ERROR_FORMAT_RESERVED: -2,\n  BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE: -3,\n  BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET: -4,\n  BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME: -5,\n  BROTLI_DECODER_ERROR_FORMAT_CL_SPACE: -6,\n  BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE: -7,\n  BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT: -8,\n  BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1: -9,\n  BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2: -10,\n  BROTLI_DECODER_ERROR_FORMAT_TRANSFORM: -11,\n  BROTLI_DECODER_ERROR_FORMAT_DICTIONARY: -12,\n  BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS: -13,\n  BROTLI_DECODER_ERROR_FORMAT_PADDING_1: -14,\n  BROTLI_DECODER_ERROR_FORMAT_PADDING_2: -15,\n  BROTLI_DECODER_ERROR_FORMAT_DISTANCE: -16,\n  BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET: -19,\n  BROTLI_DECODER_ERROR_INVALID_ARGUMENTS: -20,\n  BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES: -21,\n  BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS: -22,\n  BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP: -25,\n  BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1: -26,\n  BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2: -27,\n  BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES: -30,\n  BROTLI_DECODER_ERROR_UNREACHABLE: -31,\n}, realZlibConstants))\n","'use strict'\n\nconst assert = require('assert')\nconst Buffer = require('buffer').Buffer\nconst realZlib = require('zlib')\n\nconst constants = exports.constants = require('./constants.js')\nconst Minipass = require('minipass')\n\nconst OriginalBufferConcat = Buffer.concat\n\nconst _superWrite = Symbol('_superWrite')\nclass ZlibError extends Error {\n  constructor (err) {\n    super('zlib: ' + err.message)\n    this.code = err.code\n    this.errno = err.errno\n    /* istanbul ignore if */\n    if (!this.code)\n      this.code = 'ZLIB_ERROR'\n\n    this.message = 'zlib: ' + err.message\n    Error.captureStackTrace(this, this.constructor)\n  }\n\n  get name () {\n    return 'ZlibError'\n  }\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\nconst _opts = Symbol('opts')\nconst _flushFlag = Symbol('flushFlag')\nconst _finishFlushFlag = Symbol('finishFlushFlag')\nconst _fullFlushFlag = Symbol('fullFlushFlag')\nconst _handle = Symbol('handle')\nconst _onError = Symbol('onError')\nconst _sawError = Symbol('sawError')\nconst _level = Symbol('level')\nconst _strategy = Symbol('strategy')\nconst _ended = Symbol('ended')\nconst _defaultFullFlush = Symbol('_defaultFullFlush')\n\nclass ZlibBase extends Minipass {\n  constructor (opts, mode) {\n    if (!opts || typeof opts !== 'object')\n      throw new TypeError('invalid options for ZlibBase constructor')\n\n    super(opts)\n    this[_sawError] = false\n    this[_ended] = false\n    this[_opts] = opts\n\n    this[_flushFlag] = opts.flush\n    this[_finishFlushFlag] = opts.finishFlush\n    // this will throw if any options are invalid for the class selected\n    try {\n      this[_handle] = new realZlib[mode](opts)\n    } catch (er) {\n      // make sure that all errors get decorated properly\n      throw new ZlibError(er)\n    }\n\n    this[_onError] = (err) => {\n      // no sense raising multiple errors, since we abort on the first one.\n      if (this[_sawError])\n        return\n\n      this[_sawError] = true\n\n      // there is no way to cleanly recover.\n      // continuing only obscures problems.\n      this.close()\n      this.emit('error', err)\n    }\n\n    this[_handle].on('error', er => this[_onError](new ZlibError(er)))\n    this.once('end', () => this.close)\n  }\n\n  close () {\n    if (this[_handle]) {\n      this[_handle].close()\n      this[_handle] = null\n      this.emit('close')\n    }\n  }\n\n  reset () {\n    if (!this[_sawError]) {\n      assert(this[_handle], 'zlib binding closed')\n      return this[_handle].reset()\n    }\n  }\n\n  flush (flushFlag) {\n    if (this.ended)\n      return\n\n    if (typeof flushFlag !== 'number')\n      flushFlag = this[_fullFlushFlag]\n    this.write(Object.assign(Buffer.alloc(0), { [_flushFlag]: flushFlag }))\n  }\n\n  end (chunk, encoding, cb) {\n    if (chunk)\n      this.write(chunk, encoding)\n    this.flush(this[_finishFlushFlag])\n    this[_ended] = true\n    return super.end(null, null, cb)\n  }\n\n  get ended () {\n    return this[_ended]\n  }\n\n  write (chunk, encoding, cb) {\n    // process the chunk using the sync process\n    // then super.write() all the outputted chunks\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n\n    if (typeof chunk === 'string')\n      chunk = Buffer.from(chunk, encoding)\n\n    if (this[_sawError])\n      return\n    assert(this[_handle], 'zlib binding closed')\n\n    // _processChunk tries to .close() the native handle after it's done, so we\n    // intercept that by temporarily making it a no-op.\n    const nativeHandle = this[_handle]._handle\n    const originalNativeClose = nativeHandle.close\n    nativeHandle.close = () => {}\n    const originalClose = this[_handle].close\n    this[_handle].close = () => {}\n    // It also calls `Buffer.concat()` at the end, which may be convenient\n    // for some, but which we are not interested in as it slows us down.\n    Buffer.concat = (args) => args\n    let result\n    try {\n      const flushFlag = typeof chunk[_flushFlag] === 'number'\n        ? chunk[_flushFlag] : this[_flushFlag]\n      result = this[_handle]._processChunk(chunk, flushFlag)\n      // if we don't throw, reset it back how it was\n      Buffer.concat = OriginalBufferConcat\n    } catch (err) {\n      // or if we do, put Buffer.concat() back before we emit error\n      // Error events call into user code, which may call Buffer.concat()\n      Buffer.concat = OriginalBufferConcat\n      this[_onError](new ZlibError(err))\n    } finally {\n      if (this[_handle]) {\n        // Core zlib resets `_handle` to null after attempting to close the\n        // native handle. Our no-op handler prevented actual closure, but we\n        // need to restore the `._handle` property.\n        this[_handle]._handle = nativeHandle\n        nativeHandle.close = originalNativeClose\n        this[_handle].close = originalClose\n        // `_processChunk()` adds an 'error' listener. If we don't remove it\n        // after each call, these handlers start piling up.\n        this[_handle].removeAllListeners('error')\n        // make sure OUR error listener is still attached tho\n      }\n    }\n\n    if (this[_handle])\n      this[_handle].on('error', er => this[_onError](new ZlibError(er)))\n\n    let writeReturn\n    if (result) {\n      if (Array.isArray(result) && result.length > 0) {\n        // The first buffer is always `handle._outBuffer`, which would be\n        // re-used for later invocations; so, we always have to copy that one.\n        writeReturn = this[_superWrite](Buffer.from(result[0]))\n        for (let i = 1; i < result.length; i++) {\n          writeReturn = this[_superWrite](result[i])\n        }\n      } else {\n        writeReturn = this[_superWrite](Buffer.from(result))\n      }\n    }\n\n    if (cb)\n      cb()\n    return writeReturn\n  }\n\n  [_superWrite] (data) {\n    return super.write(data)\n  }\n}\n\nclass Zlib extends ZlibBase {\n  constructor (opts, mode) {\n    opts = opts || {}\n\n    opts.flush = opts.flush || constants.Z_NO_FLUSH\n    opts.finishFlush = opts.finishFlush || constants.Z_FINISH\n    super(opts, mode)\n\n    this[_fullFlushFlag] = constants.Z_FULL_FLUSH\n    this[_level] = opts.level\n    this[_strategy] = opts.strategy\n  }\n\n  params (level, strategy) {\n    if (this[_sawError])\n      return\n\n    if (!this[_handle])\n      throw new Error('cannot switch params when binding is closed')\n\n    // no way to test this without also not supporting params at all\n    /* istanbul ignore if */\n    if (!this[_handle].params)\n      throw new Error('not supported in this implementation')\n\n    if (this[_level] !== level || this[_strategy] !== strategy) {\n      this.flush(constants.Z_SYNC_FLUSH)\n      assert(this[_handle], 'zlib binding closed')\n      // .params() calls .flush(), but the latter is always async in the\n      // core zlib. We override .flush() temporarily to intercept that and\n      // flush synchronously.\n      const origFlush = this[_handle].flush\n      this[_handle].flush = (flushFlag, cb) => {\n        this.flush(flushFlag)\n        cb()\n      }\n      try {\n        this[_handle].params(level, strategy)\n      } finally {\n        this[_handle].flush = origFlush\n      }\n      /* istanbul ignore else */\n      if (this[_handle]) {\n        this[_level] = level\n        this[_strategy] = strategy\n      }\n    }\n  }\n}\n\n// minimal 2-byte header\nclass Deflate extends Zlib {\n  constructor (opts) {\n    super(opts, 'Deflate')\n  }\n}\n\nclass Inflate extends Zlib {\n  constructor (opts) {\n    super(opts, 'Inflate')\n  }\n}\n\n// gzip - bigger header, same deflate compression\nconst _portable = Symbol('_portable')\nclass Gzip extends Zlib {\n  constructor (opts) {\n    super(opts, 'Gzip')\n    this[_portable] = opts && !!opts.portable\n  }\n\n  [_superWrite] (data) {\n    if (!this[_portable])\n      return super[_superWrite](data)\n\n    // we'll always get the header emitted in one first chunk\n    // overwrite the OS indicator byte with 0xFF\n    this[_portable] = false\n    data[9] = 255\n    return super[_superWrite](data)\n  }\n}\n\nclass Gunzip extends Zlib {\n  constructor (opts) {\n    super(opts, 'Gunzip')\n  }\n}\n\n// raw - no header\nclass DeflateRaw extends Zlib {\n  constructor (opts) {\n    super(opts, 'DeflateRaw')\n  }\n}\n\nclass InflateRaw extends Zlib {\n  constructor (opts) {\n    super(opts, 'InflateRaw')\n  }\n}\n\n// auto-detect header.\nclass Unzip extends Zlib {\n  constructor (opts) {\n    super(opts, 'Unzip')\n  }\n}\n\nclass Brotli extends ZlibBase {\n  constructor (opts, mode) {\n    opts = opts || {}\n\n    opts.flush = opts.flush || constants.BROTLI_OPERATION_PROCESS\n    opts.finishFlush = opts.finishFlush || constants.BROTLI_OPERATION_FINISH\n\n    super(opts, mode)\n\n    this[_fullFlushFlag] = constants.BROTLI_OPERATION_FLUSH\n  }\n}\n\nclass BrotliCompress extends Brotli {\n  constructor (opts) {\n    super(opts, 'BrotliCompress')\n  }\n}\n\nclass BrotliDecompress extends Brotli {\n  constructor (opts) {\n    super(opts, 'BrotliDecompress')\n  }\n}\n\nexports.Deflate = Deflate\nexports.Inflate = Inflate\nexports.Gzip = Gzip\nexports.Gunzip = Gunzip\nexports.DeflateRaw = DeflateRaw\nexports.InflateRaw = InflateRaw\nexports.Unzip = Unzip\n/* istanbul ignore else */\nif (typeof realZlib.BrotliCompress === 'function') {\n  exports.BrotliCompress = BrotliCompress\n  exports.BrotliDecompress = BrotliDecompress\n} else {\n  exports.BrotliCompress = exports.BrotliDecompress = class {\n    constructor () {\n      throw new Error('Brotli is not supported in this version of Node.js')\n    }\n  }\n}\n","const optsArg = require('./lib/opts-arg.js')\nconst pathArg = require('./lib/path-arg.js')\n\nconst {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')\nconst {useNative, useNativeSync} = require('./lib/use-native.js')\n\n\nconst mkdirp = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNative(opts)\n    ? mkdirpNative(path, opts)\n    : mkdirpManual(path, opts)\n}\n\nconst mkdirpSync = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNativeSync(opts)\n    ? mkdirpNativeSync(path, opts)\n    : mkdirpManualSync(path, opts)\n}\n\nmkdirp.sync = mkdirpSync\nmkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))\nmkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))\nmkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))\nmkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))\n\nmodule.exports = mkdirp\n","const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n","const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n","const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n","const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n","const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n","const fs = require('fs')\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12\n\nconst useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir\nconst useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync\n\nmodule.exports = {useNative, useNativeSync}\n","'use strict'\n\n// high-level commands\nexports.c = exports.create = require('./lib/create.js')\nexports.r = exports.replace = require('./lib/replace.js')\nexports.t = exports.list = require('./lib/list.js')\nexports.u = exports.update = require('./lib/update.js')\nexports.x = exports.extract = require('./lib/extract.js')\n\n// classes\nexports.Pack = require('./lib/pack.js')\nexports.Unpack = require('./lib/unpack.js')\nexports.Parse = require('./lib/parse.js')\nexports.ReadEntry = require('./lib/read-entry.js')\nexports.WriteEntry = require('./lib/write-entry.js')\nexports.Header = require('./lib/header.js')\nexports.Pax = require('./lib/pax.js')\nexports.types = require('./lib/types.js')\n","'use strict'\n\n// tar -c\nconst hlo = require('./high-level-opt.js')\n\nconst Pack = require('./pack.js')\nconst fsm = require('fs-minipass')\nconst t = require('./list.js')\nconst path = require('path')\n\nmodule.exports = (opt_, files, cb) => {\n  if (typeof files === 'function')\n    cb = files\n\n  if (Array.isArray(opt_))\n    files = opt_, opt_ = {}\n\n  if (!files || !Array.isArray(files) || !files.length)\n    throw new TypeError('no files or directories specified')\n\n  files = Array.from(files)\n\n  const opt = hlo(opt_)\n\n  if (opt.sync && typeof cb === 'function')\n    throw new TypeError('callback not supported for sync tar functions')\n\n  if (!opt.file && typeof cb === 'function')\n    throw new TypeError('callback only supported with file option')\n\n  return opt.file && opt.sync ? createFileSync(opt, files)\n    : opt.file ? createFile(opt, files, cb)\n    : opt.sync ? createSync(opt, files)\n    : create(opt, files)\n}\n\nconst createFileSync = (opt, files) => {\n  const p = new Pack.Sync(opt)\n  const stream = new fsm.WriteStreamSync(opt.file, {\n    mode: opt.mode || 0o666,\n  })\n  p.pipe(stream)\n  addFilesSync(p, files)\n}\n\nconst createFile = (opt, files, cb) => {\n  const p = new Pack(opt)\n  const stream = new fsm.WriteStream(opt.file, {\n    mode: opt.mode || 0o666,\n  })\n  p.pipe(stream)\n\n  const promise = new Promise((res, rej) => {\n    stream.on('error', rej)\n    stream.on('close', res)\n    p.on('error', rej)\n  })\n\n  addFilesAsync(p, files)\n\n  return cb ? promise.then(cb, cb) : promise\n}\n\nconst addFilesSync = (p, files) => {\n  files.forEach(file => {\n    if (file.charAt(0) === '@') {\n      t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        sync: true,\n        noResume: true,\n        onentry: entry => p.add(entry),\n      })\n    } else\n      p.add(file)\n  })\n  p.end()\n}\n\nconst addFilesAsync = (p, files) => {\n  while (files.length) {\n    const file = files.shift()\n    if (file.charAt(0) === '@') {\n      return t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        noResume: true,\n        onentry: entry => p.add(entry),\n      }).then(_ => addFilesAsync(p, files))\n    } else\n      p.add(file)\n  }\n  p.end()\n}\n\nconst createSync = (opt, files) => {\n  const p = new Pack.Sync(opt)\n  addFilesSync(p, files)\n  return p\n}\n\nconst create = (opt, files) => {\n  const p = new Pack(opt)\n  addFilesAsync(p, files)\n  return p\n}\n","'use strict'\n\n// tar -x\nconst hlo = require('./high-level-opt.js')\nconst Unpack = require('./unpack.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst path = require('path')\nconst stripSlash = require('./strip-trailing-slashes.js')\n\nmodule.exports = (opt_, files, cb) => {\n  if (typeof opt_ === 'function')\n    cb = opt_, files = null, opt_ = {}\n  else if (Array.isArray(opt_))\n    files = opt_, opt_ = {}\n\n  if (typeof files === 'function')\n    cb = files, files = null\n\n  if (!files)\n    files = []\n  else\n    files = Array.from(files)\n\n  const opt = hlo(opt_)\n\n  if (opt.sync && typeof cb === 'function')\n    throw new TypeError('callback not supported for sync tar functions')\n\n  if (!opt.file && typeof cb === 'function')\n    throw new TypeError('callback only supported with file option')\n\n  if (files.length)\n    filesFilter(opt, files)\n\n  return opt.file && opt.sync ? extractFileSync(opt)\n    : opt.file ? extractFile(opt, cb)\n    : opt.sync ? extractSync(opt)\n    : extract(opt)\n}\n\n// construct a filter that limits the file entries listed\n// include child entries if a dir is included\nconst filesFilter = (opt, files) => {\n  const map = new Map(files.map(f => [stripSlash(f), true]))\n  const filter = opt.filter\n\n  const mapHas = (file, r) => {\n    const root = r || path.parse(file).root || '.'\n    const ret = file === root ? false\n      : map.has(file) ? map.get(file)\n      : mapHas(path.dirname(file), root)\n\n    map.set(file, ret)\n    return ret\n  }\n\n  opt.filter = filter\n    ? (file, entry) => filter(file, entry) && mapHas(stripSlash(file))\n    : file => mapHas(stripSlash(file))\n}\n\nconst extractFileSync = opt => {\n  const u = new Unpack.Sync(opt)\n\n  const file = opt.file\n  const stat = fs.statSync(file)\n  // This trades a zero-byte read() syscall for a stat\n  // However, it will usually result in less memory allocation\n  const readSize = opt.maxReadSize || 16 * 1024 * 1024\n  const stream = new fsm.ReadStreamSync(file, {\n    readSize: readSize,\n    size: stat.size,\n  })\n  stream.pipe(u)\n}\n\nconst extractFile = (opt, cb) => {\n  const u = new Unpack(opt)\n  const readSize = opt.maxReadSize || 16 * 1024 * 1024\n\n  const file = opt.file\n  const p = new Promise((resolve, reject) => {\n    u.on('error', reject)\n    u.on('close', resolve)\n\n    // This trades a zero-byte read() syscall for a stat\n    // However, it will usually result in less memory allocation\n    fs.stat(file, (er, stat) => {\n      if (er)\n        reject(er)\n      else {\n        const stream = new fsm.ReadStream(file, {\n          readSize: readSize,\n          size: stat.size,\n        })\n        stream.on('error', reject)\n        stream.pipe(u)\n      }\n    })\n  })\n  return cb ? p.then(cb, cb) : p\n}\n\nconst extractSync = opt => new Unpack.Sync(opt)\n\nconst extract = opt => new Unpack(opt)\n","// Get the appropriate flag to use for creating files\n// We use fmap on Windows platforms for files less than\n// 512kb.  This is a fairly low limit, but avoids making\n// things slower in some cases.  Since most of what this\n// library is used for is extracting tarballs of many\n// relatively small files in npm packages and the like,\n// it can be a big boost on Windows platforms.\n// Only supported in Node v12.9.0 and above.\nconst platform = process.env.__FAKE_PLATFORM__ || process.platform\nconst isWindows = platform === 'win32'\nconst fs = global.__FAKE_TESTING_FS__ || require('fs')\n\n/* istanbul ignore next */\nconst { O_CREAT, O_TRUNC, O_WRONLY, UV_FS_O_FILEMAP = 0 } = fs.constants\n\nconst fMapEnabled = isWindows && !!UV_FS_O_FILEMAP\nconst fMapLimit = 512 * 1024\nconst fMapFlag = UV_FS_O_FILEMAP | O_TRUNC | O_CREAT | O_WRONLY\nmodule.exports = !fMapEnabled ? () => 'w'\n  : size => size < fMapLimit ? fMapFlag : 'w'\n","'use strict'\n// parse a 512-byte header block to a data object, or vice-versa\n// encode returns `true` if a pax extended header is needed, because\n// the data could not be faithfully encoded in a simple header.\n// (Also, check header.needPax to see if it needs a pax header.)\n\nconst types = require('./types.js')\nconst pathModule = require('path').posix\nconst large = require('./large-numbers.js')\n\nconst SLURP = Symbol('slurp')\nconst TYPE = Symbol('type')\n\nclass Header {\n  constructor (data, off, ex, gex) {\n    this.cksumValid = false\n    this.needPax = false\n    this.nullBlock = false\n\n    this.block = null\n    this.path = null\n    this.mode = null\n    this.uid = null\n    this.gid = null\n    this.size = null\n    this.mtime = null\n    this.cksum = null\n    this[TYPE] = '0'\n    this.linkpath = null\n    this.uname = null\n    this.gname = null\n    this.devmaj = 0\n    this.devmin = 0\n    this.atime = null\n    this.ctime = null\n\n    if (Buffer.isBuffer(data))\n      this.decode(data, off || 0, ex, gex)\n    else if (data)\n      this.set(data)\n  }\n\n  decode (buf, off, ex, gex) {\n    if (!off)\n      off = 0\n\n    if (!buf || !(buf.length >= off + 512))\n      throw new Error('need 512 bytes for header')\n\n    this.path = decString(buf, off, 100)\n    this.mode = decNumber(buf, off + 100, 8)\n    this.uid = decNumber(buf, off + 108, 8)\n    this.gid = decNumber(buf, off + 116, 8)\n    this.size = decNumber(buf, off + 124, 12)\n    this.mtime = decDate(buf, off + 136, 12)\n    this.cksum = decNumber(buf, off + 148, 12)\n\n    // if we have extended or global extended headers, apply them now\n    // See https://github.com/npm/node-tar/pull/187\n    this[SLURP](ex)\n    this[SLURP](gex, true)\n\n    // old tar versions marked dirs as a file with a trailing /\n    this[TYPE] = decString(buf, off + 156, 1)\n    if (this[TYPE] === '')\n      this[TYPE] = '0'\n    if (this[TYPE] === '0' && this.path.substr(-1) === '/')\n      this[TYPE] = '5'\n\n    // tar implementations sometimes incorrectly put the stat(dir).size\n    // as the size in the tarball, even though Directory entries are\n    // not able to have any body at all.  In the very rare chance that\n    // it actually DOES have a body, we weren't going to do anything with\n    // it anyway, and it'll just be a warning about an invalid header.\n    if (this[TYPE] === '5')\n      this.size = 0\n\n    this.linkpath = decString(buf, off + 157, 100)\n    if (buf.slice(off + 257, off + 265).toString() === 'ustar\\u000000') {\n      this.uname = decString(buf, off + 265, 32)\n      this.gname = decString(buf, off + 297, 32)\n      this.devmaj = decNumber(buf, off + 329, 8)\n      this.devmin = decNumber(buf, off + 337, 8)\n      if (buf[off + 475] !== 0) {\n        // definitely a prefix, definitely >130 chars.\n        const prefix = decString(buf, off + 345, 155)\n        this.path = prefix + '/' + this.path\n      } else {\n        const prefix = decString(buf, off + 345, 130)\n        if (prefix)\n          this.path = prefix + '/' + this.path\n        this.atime = decDate(buf, off + 476, 12)\n        this.ctime = decDate(buf, off + 488, 12)\n      }\n    }\n\n    let sum = 8 * 0x20\n    for (let i = off; i < off + 148; i++)\n      sum += buf[i]\n\n    for (let i = off + 156; i < off + 512; i++)\n      sum += buf[i]\n\n    this.cksumValid = sum === this.cksum\n    if (this.cksum === null && sum === 8 * 0x20)\n      this.nullBlock = true\n  }\n\n  [SLURP] (ex, global) {\n    for (const k in ex) {\n      // we slurp in everything except for the path attribute in\n      // a global extended header, because that's weird.\n      if (ex[k] !== null && ex[k] !== undefined &&\n          !(global && k === 'path'))\n        this[k] = ex[k]\n    }\n  }\n\n  encode (buf, off) {\n    if (!buf) {\n      buf = this.block = Buffer.alloc(512)\n      off = 0\n    }\n\n    if (!off)\n      off = 0\n\n    if (!(buf.length >= off + 512))\n      throw new Error('need 512 bytes for header')\n\n    const prefixSize = this.ctime || this.atime ? 130 : 155\n    const split = splitPrefix(this.path || '', prefixSize)\n    const path = split[0]\n    const prefix = split[1]\n    this.needPax = split[2]\n\n    this.needPax = encString(buf, off, 100, path) || this.needPax\n    this.needPax = encNumber(buf, off + 100, 8, this.mode) || this.needPax\n    this.needPax = encNumber(buf, off + 108, 8, this.uid) || this.needPax\n    this.needPax = encNumber(buf, off + 116, 8, this.gid) || this.needPax\n    this.needPax = encNumber(buf, off + 124, 12, this.size) || this.needPax\n    this.needPax = encDate(buf, off + 136, 12, this.mtime) || this.needPax\n    buf[off + 156] = this[TYPE].charCodeAt(0)\n    this.needPax = encString(buf, off + 157, 100, this.linkpath) || this.needPax\n    buf.write('ustar\\u000000', off + 257, 8)\n    this.needPax = encString(buf, off + 265, 32, this.uname) || this.needPax\n    this.needPax = encString(buf, off + 297, 32, this.gname) || this.needPax\n    this.needPax = encNumber(buf, off + 329, 8, this.devmaj) || this.needPax\n    this.needPax = encNumber(buf, off + 337, 8, this.devmin) || this.needPax\n    this.needPax = encString(buf, off + 345, prefixSize, prefix) || this.needPax\n    if (buf[off + 475] !== 0)\n      this.needPax = encString(buf, off + 345, 155, prefix) || this.needPax\n    else {\n      this.needPax = encString(buf, off + 345, 130, prefix) || this.needPax\n      this.needPax = encDate(buf, off + 476, 12, this.atime) || this.needPax\n      this.needPax = encDate(buf, off + 488, 12, this.ctime) || this.needPax\n    }\n\n    let sum = 8 * 0x20\n    for (let i = off; i < off + 148; i++)\n      sum += buf[i]\n\n    for (let i = off + 156; i < off + 512; i++)\n      sum += buf[i]\n\n    this.cksum = sum\n    encNumber(buf, off + 148, 8, this.cksum)\n    this.cksumValid = true\n\n    return this.needPax\n  }\n\n  set (data) {\n    for (const i in data) {\n      if (data[i] !== null && data[i] !== undefined)\n        this[i] = data[i]\n    }\n  }\n\n  get type () {\n    return types.name.get(this[TYPE]) || this[TYPE]\n  }\n\n  get typeKey () {\n    return this[TYPE]\n  }\n\n  set type (type) {\n    if (types.code.has(type))\n      this[TYPE] = types.code.get(type)\n    else\n      this[TYPE] = type\n  }\n}\n\nconst splitPrefix = (p, prefixSize) => {\n  const pathSize = 100\n  let pp = p\n  let prefix = ''\n  let ret\n  const root = pathModule.parse(p).root || '.'\n\n  if (Buffer.byteLength(pp) < pathSize)\n    ret = [pp, prefix, false]\n  else {\n    // first set prefix to the dir, and path to the base\n    prefix = pathModule.dirname(pp)\n    pp = pathModule.basename(pp)\n\n    do {\n      // both fit!\n      if (Buffer.byteLength(pp) <= pathSize &&\n          Buffer.byteLength(prefix) <= prefixSize)\n        ret = [pp, prefix, false]\n\n      // prefix fits in prefix, but path doesn't fit in path\n      else if (Buffer.byteLength(pp) > pathSize &&\n          Buffer.byteLength(prefix) <= prefixSize)\n        ret = [pp.substr(0, pathSize - 1), prefix, true]\n\n      else {\n        // make path take a bit from prefix\n        pp = pathModule.join(pathModule.basename(prefix), pp)\n        prefix = pathModule.dirname(prefix)\n      }\n    } while (prefix !== root && !ret)\n\n    // at this point, found no resolution, just truncate\n    if (!ret)\n      ret = [p.substr(0, pathSize - 1), '', true]\n  }\n  return ret\n}\n\nconst decString = (buf, off, size) =>\n  buf.slice(off, off + size).toString('utf8').replace(/\\0.*/, '')\n\nconst decDate = (buf, off, size) =>\n  numToDate(decNumber(buf, off, size))\n\nconst numToDate = num => num === null ? null : new Date(num * 1000)\n\nconst decNumber = (buf, off, size) =>\n  buf[off] & 0x80 ? large.parse(buf.slice(off, off + size))\n  : decSmallNumber(buf, off, size)\n\nconst nanNull = value => isNaN(value) ? null : value\n\nconst decSmallNumber = (buf, off, size) =>\n  nanNull(parseInt(\n    buf.slice(off, off + size)\n      .toString('utf8').replace(/\\0.*$/, '').trim(), 8))\n\n// the maximum encodable as a null-terminated octal, by field size\nconst MAXNUM = {\n  12: 0o77777777777,\n  8: 0o7777777,\n}\n\nconst encNumber = (buf, off, size, number) =>\n  number === null ? false :\n  number > MAXNUM[size] || number < 0\n    ? (large.encode(number, buf.slice(off, off + size)), true)\n    : (encSmallNumber(buf, off, size, number), false)\n\nconst encSmallNumber = (buf, off, size, number) =>\n  buf.write(octalString(number, size), off, size, 'ascii')\n\nconst octalString = (number, size) =>\n  padOctal(Math.floor(number).toString(8), size)\n\nconst padOctal = (string, size) =>\n  (string.length === size - 1 ? string\n  : new Array(size - string.length - 1).join('0') + string + ' ') + '\\0'\n\nconst encDate = (buf, off, size, date) =>\n  date === null ? false :\n  encNumber(buf, off, size, date.getTime() / 1000)\n\n// enough to fill the longest string we've got\nconst NULLS = new Array(156).join('\\0')\n// pad with nulls, return true if it's longer or non-ascii\nconst encString = (buf, off, size, string) =>\n  string === null ? false :\n  (buf.write(string + NULLS, off, size, 'utf8'),\n  string.length !== Buffer.byteLength(string) || string.length > size)\n\nmodule.exports = Header\n","'use strict'\n\n// turn tar(1) style args like `C` into the more verbose things like `cwd`\n\nconst argmap = new Map([\n  ['C', 'cwd'],\n  ['f', 'file'],\n  ['z', 'gzip'],\n  ['P', 'preservePaths'],\n  ['U', 'unlink'],\n  ['strip-components', 'strip'],\n  ['stripComponents', 'strip'],\n  ['keep-newer', 'newer'],\n  ['keepNewer', 'newer'],\n  ['keep-newer-files', 'newer'],\n  ['keepNewerFiles', 'newer'],\n  ['k', 'keep'],\n  ['keep-existing', 'keep'],\n  ['keepExisting', 'keep'],\n  ['m', 'noMtime'],\n  ['no-mtime', 'noMtime'],\n  ['p', 'preserveOwner'],\n  ['L', 'follow'],\n  ['h', 'follow'],\n])\n\nmodule.exports = opt => opt ? Object.keys(opt).map(k => [\n  argmap.has(k) ? argmap.get(k) : k, opt[k],\n]).reduce((set, kv) => (set[kv[0]] = kv[1], set), Object.create(null)) : {}\n","'use strict'\n// Tar can encode large and negative numbers using a leading byte of\n// 0xff for negative, and 0x80 for positive.\n\nconst encode = (num, buf) => {\n  if (!Number.isSafeInteger(num))\n    // The number is so large that javascript cannot represent it with integer\n    // precision.\n    throw Error('cannot encode number outside of javascript safe integer range')\n  else if (num < 0)\n    encodeNegative(num, buf)\n  else\n    encodePositive(num, buf)\n  return buf\n}\n\nconst encodePositive = (num, buf) => {\n  buf[0] = 0x80\n\n  for (var i = buf.length; i > 1; i--) {\n    buf[i - 1] = num & 0xff\n    num = Math.floor(num / 0x100)\n  }\n}\n\nconst encodeNegative = (num, buf) => {\n  buf[0] = 0xff\n  var flipped = false\n  num = num * -1\n  for (var i = buf.length; i > 1; i--) {\n    var byte = num & 0xff\n    num = Math.floor(num / 0x100)\n    if (flipped)\n      buf[i - 1] = onesComp(byte)\n    else if (byte === 0)\n      buf[i - 1] = 0\n    else {\n      flipped = true\n      buf[i - 1] = twosComp(byte)\n    }\n  }\n}\n\nconst parse = (buf) => {\n  const pre = buf[0]\n  const value = pre === 0x80 ? pos(buf.slice(1, buf.length))\n    : pre === 0xff ? twos(buf)\n    : null\n  if (value === null)\n    throw Error('invalid base256 encoding')\n\n  if (!Number.isSafeInteger(value))\n    // The number is so large that javascript cannot represent it with integer\n    // precision.\n    throw Error('parsed number outside of javascript safe integer range')\n\n  return value\n}\n\nconst twos = (buf) => {\n  var len = buf.length\n  var sum = 0\n  var flipped = false\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i]\n    var f\n    if (flipped)\n      f = onesComp(byte)\n    else if (byte === 0)\n      f = byte\n    else {\n      flipped = true\n      f = twosComp(byte)\n    }\n    if (f !== 0)\n      sum -= f * Math.pow(256, len - i - 1)\n  }\n  return sum\n}\n\nconst pos = (buf) => {\n  var len = buf.length\n  var sum = 0\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i]\n    if (byte !== 0)\n      sum += byte * Math.pow(256, len - i - 1)\n  }\n  return sum\n}\n\nconst onesComp = byte => (0xff ^ byte) & 0xff\n\nconst twosComp = byte => ((0xff ^ byte) + 1) & 0xff\n\nmodule.exports = {\n  encode,\n  parse,\n}\n","'use strict'\n\n// XXX: This shares a lot in common with extract.js\n// maybe some DRY opportunity here?\n\n// tar -t\nconst hlo = require('./high-level-opt.js')\nconst Parser = require('./parse.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst path = require('path')\nconst stripSlash = require('./strip-trailing-slashes.js')\n\nmodule.exports = (opt_, files, cb) => {\n  if (typeof opt_ === 'function')\n    cb = opt_, files = null, opt_ = {}\n  else if (Array.isArray(opt_))\n    files = opt_, opt_ = {}\n\n  if (typeof files === 'function')\n    cb = files, files = null\n\n  if (!files)\n    files = []\n  else\n    files = Array.from(files)\n\n  const opt = hlo(opt_)\n\n  if (opt.sync && typeof cb === 'function')\n    throw new TypeError('callback not supported for sync tar functions')\n\n  if (!opt.file && typeof cb === 'function')\n    throw new TypeError('callback only supported with file option')\n\n  if (files.length)\n    filesFilter(opt, files)\n\n  if (!opt.noResume)\n    onentryFunction(opt)\n\n  return opt.file && opt.sync ? listFileSync(opt)\n    : opt.file ? listFile(opt, cb)\n    : list(opt)\n}\n\nconst onentryFunction = opt => {\n  const onentry = opt.onentry\n  opt.onentry = onentry ? e => {\n    onentry(e)\n    e.resume()\n  } : e => e.resume()\n}\n\n// construct a filter that limits the file entries listed\n// include child entries if a dir is included\nconst filesFilter = (opt, files) => {\n  const map = new Map(files.map(f => [stripSlash(f), true]))\n  const filter = opt.filter\n\n  const mapHas = (file, r) => {\n    const root = r || path.parse(file).root || '.'\n    const ret = file === root ? false\n      : map.has(file) ? map.get(file)\n      : mapHas(path.dirname(file), root)\n\n    map.set(file, ret)\n    return ret\n  }\n\n  opt.filter = filter\n    ? (file, entry) => filter(file, entry) && mapHas(stripSlash(file))\n    : file => mapHas(stripSlash(file))\n}\n\nconst listFileSync = opt => {\n  const p = list(opt)\n  const file = opt.file\n  let threw = true\n  let fd\n  try {\n    const stat = fs.statSync(file)\n    const readSize = opt.maxReadSize || 16 * 1024 * 1024\n    if (stat.size < readSize)\n      p.end(fs.readFileSync(file))\n    else {\n      let pos = 0\n      const buf = Buffer.allocUnsafe(readSize)\n      fd = fs.openSync(file, 'r')\n      while (pos < stat.size) {\n        const bytesRead = fs.readSync(fd, buf, 0, readSize, pos)\n        pos += bytesRead\n        p.write(buf.slice(0, bytesRead))\n      }\n      p.end()\n    }\n    threw = false\n  } finally {\n    if (threw && fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (er) {}\n    }\n  }\n}\n\nconst listFile = (opt, cb) => {\n  const parse = new Parser(opt)\n  const readSize = opt.maxReadSize || 16 * 1024 * 1024\n\n  const file = opt.file\n  const p = new Promise((resolve, reject) => {\n    parse.on('error', reject)\n    parse.on('end', resolve)\n\n    fs.stat(file, (er, stat) => {\n      if (er)\n        reject(er)\n      else {\n        const stream = new fsm.ReadStream(file, {\n          readSize: readSize,\n          size: stat.size,\n        })\n        stream.on('error', reject)\n        stream.pipe(parse)\n      }\n    })\n  })\n  return cb ? p.then(cb, cb) : p\n}\n\nconst list = opt => new Parser(opt)\n","'use strict'\n// wrapper around mkdirp for tar's needs.\n\n// TODO: This should probably be a class, not functionally\n// passing around state in a gazillion args.\n\nconst mkdirp = require('mkdirp')\nconst fs = require('fs')\nconst path = require('path')\nconst chownr = require('chownr')\nconst normPath = require('./normalize-windows-path.js')\n\nclass SymlinkError extends Error {\n  constructor (symlink, path) {\n    super('Cannot extract through symbolic link')\n    this.path = path\n    this.symlink = symlink\n  }\n\n  get name () {\n    return 'SylinkError'\n  }\n}\n\nclass CwdError extends Error {\n  constructor (path, code) {\n    super(code + ': Cannot cd into \\'' + path + '\\'')\n    this.path = path\n    this.code = code\n  }\n\n  get name () {\n    return 'CwdError'\n  }\n}\n\nconst cGet = (cache, key) => cache.get(normPath(key))\nconst cSet = (cache, key, val) => cache.set(normPath(key), val)\n\nconst checkCwd = (dir, cb) => {\n  fs.stat(dir, (er, st) => {\n    if (er || !st.isDirectory())\n      er = new CwdError(dir, er && er.code || 'ENOTDIR')\n    cb(er)\n  })\n}\n\nmodule.exports = (dir, opt, cb) => {\n  dir = normPath(dir)\n\n  // if there's any overlap between mask and mode,\n  // then we'll need an explicit chmod\n  const umask = opt.umask\n  const mode = opt.mode | 0o0700\n  const needChmod = (mode & umask) !== 0\n\n  const uid = opt.uid\n  const gid = opt.gid\n  const doChown = typeof uid === 'number' &&\n    typeof gid === 'number' &&\n    (uid !== opt.processUid || gid !== opt.processGid)\n\n  const preserve = opt.preserve\n  const unlink = opt.unlink\n  const cache = opt.cache\n  const cwd = normPath(opt.cwd)\n\n  const done = (er, created) => {\n    if (er)\n      cb(er)\n    else {\n      cSet(cache, dir, true)\n      if (created && doChown)\n        chownr(created, uid, gid, er => done(er))\n      else if (needChmod)\n        fs.chmod(dir, mode, cb)\n      else\n        cb()\n    }\n  }\n\n  if (cache && cGet(cache, dir) === true)\n    return done()\n\n  if (dir === cwd)\n    return checkCwd(dir, done)\n\n  if (preserve)\n    return mkdirp(dir, {mode}).then(made => done(null, made), done)\n\n  const sub = normPath(path.relative(cwd, dir))\n  const parts = sub.split('/')\n  mkdir_(cwd, parts, mode, cache, unlink, cwd, null, done)\n}\n\nconst mkdir_ = (base, parts, mode, cache, unlink, cwd, created, cb) => {\n  if (!parts.length)\n    return cb(null, created)\n  const p = parts.shift()\n  const part = normPath(path.resolve(base + '/' + p))\n  if (cGet(cache, part))\n    return mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n  fs.mkdir(part, mode, onmkdir(part, parts, mode, cache, unlink, cwd, created, cb))\n}\n\nconst onmkdir = (part, parts, mode, cache, unlink, cwd, created, cb) => er => {\n  if (er) {\n    fs.lstat(part, (statEr, st) => {\n      if (statEr) {\n        statEr.path = statEr.path && normPath(statEr.path)\n        cb(statEr)\n      } else if (st.isDirectory())\n        mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n      else if (unlink) {\n        fs.unlink(part, er => {\n          if (er)\n            return cb(er)\n          fs.mkdir(part, mode, onmkdir(part, parts, mode, cache, unlink, cwd, created, cb))\n        })\n      } else if (st.isSymbolicLink())\n        return cb(new SymlinkError(part, part + '/' + parts.join('/')))\n      else\n        cb(er)\n    })\n  } else {\n    created = created || part\n    mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n  }\n}\n\nconst checkCwdSync = dir => {\n  let ok = false\n  let code = 'ENOTDIR'\n  try {\n    ok = fs.statSync(dir).isDirectory()\n  } catch (er) {\n    code = er.code\n  } finally {\n    if (!ok)\n      throw new CwdError(dir, code)\n  }\n}\n\nmodule.exports.sync = (dir, opt) => {\n  dir = normPath(dir)\n  // if there's any overlap between mask and mode,\n  // then we'll need an explicit chmod\n  const umask = opt.umask\n  const mode = opt.mode | 0o0700\n  const needChmod = (mode & umask) !== 0\n\n  const uid = opt.uid\n  const gid = opt.gid\n  const doChown = typeof uid === 'number' &&\n    typeof gid === 'number' &&\n    (uid !== opt.processUid || gid !== opt.processGid)\n\n  const preserve = opt.preserve\n  const unlink = opt.unlink\n  const cache = opt.cache\n  const cwd = normPath(opt.cwd)\n\n  const done = (created) => {\n    cSet(cache, dir, true)\n    if (created && doChown)\n      chownr.sync(created, uid, gid)\n    if (needChmod)\n      fs.chmodSync(dir, mode)\n  }\n\n  if (cache && cGet(cache, dir) === true)\n    return done()\n\n  if (dir === cwd) {\n    checkCwdSync(cwd)\n    return done()\n  }\n\n  if (preserve)\n    return done(mkdirp.sync(dir, mode))\n\n  const sub = normPath(path.relative(cwd, dir))\n  const parts = sub.split('/')\n  let created = null\n  for (let p = parts.shift(), part = cwd;\n    p && (part += '/' + p);\n    p = parts.shift()) {\n    part = normPath(path.resolve(part))\n    if (cGet(cache, part))\n      continue\n\n    try {\n      fs.mkdirSync(part, mode)\n      created = created || part\n      cSet(cache, part, true)\n    } catch (er) {\n      const st = fs.lstatSync(part)\n      if (st.isDirectory()) {\n        cSet(cache, part, true)\n        continue\n      } else if (unlink) {\n        fs.unlinkSync(part)\n        fs.mkdirSync(part, mode)\n        created = created || part\n        cSet(cache, part, true)\n        continue\n      } else if (st.isSymbolicLink())\n        return new SymlinkError(part, part + '/' + parts.join('/'))\n    }\n  }\n\n  return done(created)\n}\n","'use strict'\nmodule.exports = (mode, isDir, portable) => {\n  mode &= 0o7777\n\n  // in portable mode, use the minimum reasonable umask\n  // if this system creates files with 0o664 by default\n  // (as some linux distros do), then we'll write the\n  // archive with 0o644 instead.  Also, don't ever create\n  // a file that is not readable/writable by the owner.\n  if (portable)\n    mode = (mode | 0o600) & ~0o22\n\n  // if dirs are readable, then they should be listable\n  if (isDir) {\n    if (mode & 0o400)\n      mode |= 0o100\n    if (mode & 0o40)\n      mode |= 0o10\n    if (mode & 0o4)\n      mode |= 0o1\n  }\n  return mode\n}\n","// on windows, either \\ or / are valid directory separators.\n// on unix, \\ is a valid character in filenames.\n// so, on windows, and only on windows, we replace all \\ chars with /,\n// so that we can use / as our one and only directory separator char.\n\nconst platform = process.env.TESTING_TAR_FAKE_PLATFORM || process.platform\nmodule.exports = platform !== 'win32' ? p => p\n  : p => p && p.replace(/\\\\/g, '/')\n","'use strict'\n\n// A readable tar stream creator\n// Technically, this is a transform stream that you write paths into,\n// and tar format comes out of.\n// The `add()` method is like `write()` but returns this,\n// and end() return `this` as well, so you can\n// do `new Pack(opt).add('files').add('dir').end().pipe(output)\n// You could also do something like:\n// streamOfPaths().pipe(new Pack()).pipe(new fs.WriteStream('out.tar'))\n\nclass PackJob {\n  constructor (path, absolute) {\n    this.path = path || './'\n    this.absolute = absolute\n    this.entry = null\n    this.stat = null\n    this.readdir = null\n    this.pending = false\n    this.ignore = false\n    this.piped = false\n  }\n}\n\nconst MiniPass = require('minipass')\nconst zlib = require('minizlib')\nconst ReadEntry = require('./read-entry.js')\nconst WriteEntry = require('./write-entry.js')\nconst WriteEntrySync = WriteEntry.Sync\nconst WriteEntryTar = WriteEntry.Tar\nconst Yallist = require('yallist')\nconst EOF = Buffer.alloc(1024)\nconst ONSTAT = Symbol('onStat')\nconst ENDED = Symbol('ended')\nconst QUEUE = Symbol('queue')\nconst CURRENT = Symbol('current')\nconst PROCESS = Symbol('process')\nconst PROCESSING = Symbol('processing')\nconst PROCESSJOB = Symbol('processJob')\nconst JOBS = Symbol('jobs')\nconst JOBDONE = Symbol('jobDone')\nconst ADDFSENTRY = Symbol('addFSEntry')\nconst ADDTARENTRY = Symbol('addTarEntry')\nconst STAT = Symbol('stat')\nconst READDIR = Symbol('readdir')\nconst ONREADDIR = Symbol('onreaddir')\nconst PIPE = Symbol('pipe')\nconst ENTRY = Symbol('entry')\nconst ENTRYOPT = Symbol('entryOpt')\nconst WRITEENTRYCLASS = Symbol('writeEntryClass')\nconst WRITE = Symbol('write')\nconst ONDRAIN = Symbol('ondrain')\n\nconst fs = require('fs')\nconst path = require('path')\nconst warner = require('./warn-mixin.js')\nconst normPath = require('./normalize-windows-path.js')\n\nconst Pack = warner(class Pack extends MiniPass {\n  constructor (opt) {\n    super(opt)\n    opt = opt || Object.create(null)\n    this.opt = opt\n    this.file = opt.file || ''\n    this.cwd = opt.cwd || process.cwd()\n    this.maxReadSize = opt.maxReadSize\n    this.preservePaths = !!opt.preservePaths\n    this.strict = !!opt.strict\n    this.noPax = !!opt.noPax\n    this.prefix = normPath(opt.prefix || '')\n    this.linkCache = opt.linkCache || new Map()\n    this.statCache = opt.statCache || new Map()\n    this.readdirCache = opt.readdirCache || new Map()\n\n    this[WRITEENTRYCLASS] = WriteEntry\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n\n    this.portable = !!opt.portable\n    this.zip = null\n    if (opt.gzip) {\n      if (typeof opt.gzip !== 'object')\n        opt.gzip = {}\n      if (this.portable)\n        opt.gzip.portable = true\n      this.zip = new zlib.Gzip(opt.gzip)\n      this.zip.on('data', chunk => super.write(chunk))\n      this.zip.on('end', _ => super.end())\n      this.zip.on('drain', _ => this[ONDRAIN]())\n      this.on('resume', _ => this.zip.resume())\n    } else\n      this.on('drain', this[ONDRAIN])\n\n    this.noDirRecurse = !!opt.noDirRecurse\n    this.follow = !!opt.follow\n    this.noMtime = !!opt.noMtime\n    this.mtime = opt.mtime || null\n\n    this.filter = typeof opt.filter === 'function' ? opt.filter : _ => true\n\n    this[QUEUE] = new Yallist()\n    this[JOBS] = 0\n    this.jobs = +opt.jobs || 4\n    this[PROCESSING] = false\n    this[ENDED] = false\n  }\n\n  [WRITE] (chunk) {\n    return super.write(chunk)\n  }\n\n  add (path) {\n    this.write(path)\n    return this\n  }\n\n  end (path) {\n    if (path)\n      this.write(path)\n    this[ENDED] = true\n    this[PROCESS]()\n    return this\n  }\n\n  write (path) {\n    if (this[ENDED])\n      throw new Error('write after end')\n\n    if (path instanceof ReadEntry)\n      this[ADDTARENTRY](path)\n    else\n      this[ADDFSENTRY](path)\n    return this.flowing\n  }\n\n  [ADDTARENTRY] (p) {\n    const absolute = normPath(path.resolve(this.cwd, p.path))\n    // in this case, we don't have to wait for the stat\n    if (!this.filter(p.path, p))\n      p.resume()\n    else {\n      const job = new PackJob(p.path, absolute, false)\n      job.entry = new WriteEntryTar(p, this[ENTRYOPT](job))\n      job.entry.on('end', _ => this[JOBDONE](job))\n      this[JOBS] += 1\n      this[QUEUE].push(job)\n    }\n\n    this[PROCESS]()\n  }\n\n  [ADDFSENTRY] (p) {\n    const absolute = normPath(path.resolve(this.cwd, p))\n    this[QUEUE].push(new PackJob(p, absolute))\n    this[PROCESS]()\n  }\n\n  [STAT] (job) {\n    job.pending = true\n    this[JOBS] += 1\n    const stat = this.follow ? 'stat' : 'lstat'\n    fs[stat](job.absolute, (er, stat) => {\n      job.pending = false\n      this[JOBS] -= 1\n      if (er)\n        this.emit('error', er)\n      else\n        this[ONSTAT](job, stat)\n    })\n  }\n\n  [ONSTAT] (job, stat) {\n    this.statCache.set(job.absolute, stat)\n    job.stat = stat\n\n    // now we have the stat, we can filter it.\n    if (!this.filter(job.path, stat))\n      job.ignore = true\n\n    this[PROCESS]()\n  }\n\n  [READDIR] (job) {\n    job.pending = true\n    this[JOBS] += 1\n    fs.readdir(job.absolute, (er, entries) => {\n      job.pending = false\n      this[JOBS] -= 1\n      if (er)\n        return this.emit('error', er)\n      this[ONREADDIR](job, entries)\n    })\n  }\n\n  [ONREADDIR] (job, entries) {\n    this.readdirCache.set(job.absolute, entries)\n    job.readdir = entries\n    this[PROCESS]()\n  }\n\n  [PROCESS] () {\n    if (this[PROCESSING])\n      return\n\n    this[PROCESSING] = true\n    for (let w = this[QUEUE].head;\n      w !== null && this[JOBS] < this.jobs;\n      w = w.next) {\n      this[PROCESSJOB](w.value)\n      if (w.value.ignore) {\n        const p = w.next\n        this[QUEUE].removeNode(w)\n        w.next = p\n      }\n    }\n\n    this[PROCESSING] = false\n\n    if (this[ENDED] && !this[QUEUE].length && this[JOBS] === 0) {\n      if (this.zip)\n        this.zip.end(EOF)\n      else {\n        super.write(EOF)\n        super.end()\n      }\n    }\n  }\n\n  get [CURRENT] () {\n    return this[QUEUE] && this[QUEUE].head && this[QUEUE].head.value\n  }\n\n  [JOBDONE] (job) {\n    this[QUEUE].shift()\n    this[JOBS] -= 1\n    this[PROCESS]()\n  }\n\n  [PROCESSJOB] (job) {\n    if (job.pending)\n      return\n\n    if (job.entry) {\n      if (job === this[CURRENT] && !job.piped)\n        this[PIPE](job)\n      return\n    }\n\n    if (!job.stat) {\n      if (this.statCache.has(job.absolute))\n        this[ONSTAT](job, this.statCache.get(job.absolute))\n      else\n        this[STAT](job)\n    }\n    if (!job.stat)\n      return\n\n    // filtered out!\n    if (job.ignore)\n      return\n\n    if (!this.noDirRecurse && job.stat.isDirectory() && !job.readdir) {\n      if (this.readdirCache.has(job.absolute))\n        this[ONREADDIR](job, this.readdirCache.get(job.absolute))\n      else\n        this[READDIR](job)\n      if (!job.readdir)\n        return\n    }\n\n    // we know it doesn't have an entry, because that got checked above\n    job.entry = this[ENTRY](job)\n    if (!job.entry) {\n      job.ignore = true\n      return\n    }\n\n    if (job === this[CURRENT] && !job.piped)\n      this[PIPE](job)\n  }\n\n  [ENTRYOPT] (job) {\n    return {\n      onwarn: (code, msg, data) => this.warn(code, msg, data),\n      noPax: this.noPax,\n      cwd: this.cwd,\n      absolute: job.absolute,\n      preservePaths: this.preservePaths,\n      maxReadSize: this.maxReadSize,\n      strict: this.strict,\n      portable: this.portable,\n      linkCache: this.linkCache,\n      statCache: this.statCache,\n      noMtime: this.noMtime,\n      mtime: this.mtime,\n      prefix: this.prefix,\n    }\n  }\n\n  [ENTRY] (job) {\n    this[JOBS] += 1\n    try {\n      return new this[WRITEENTRYCLASS](job.path, this[ENTRYOPT](job))\n        .on('end', () => this[JOBDONE](job))\n        .on('error', er => this.emit('error', er))\n    } catch (er) {\n      this.emit('error', er)\n    }\n  }\n\n  [ONDRAIN] () {\n    if (this[CURRENT] && this[CURRENT].entry)\n      this[CURRENT].entry.resume()\n  }\n\n  // like .pipe() but using super, because our write() is special\n  [PIPE] (job) {\n    job.piped = true\n\n    if (job.readdir) {\n      job.readdir.forEach(entry => {\n        const p = job.path\n        const base = p === './' ? '' : p.replace(/\\/*$/, '/')\n        this[ADDFSENTRY](base + entry)\n      })\n    }\n\n    const source = job.entry\n    const zip = this.zip\n\n    if (zip) {\n      source.on('data', chunk => {\n        if (!zip.write(chunk))\n          source.pause()\n      })\n    } else {\n      source.on('data', chunk => {\n        if (!super.write(chunk))\n          source.pause()\n      })\n    }\n  }\n\n  pause () {\n    if (this.zip)\n      this.zip.pause()\n    return super.pause()\n  }\n})\n\nclass PackSync extends Pack {\n  constructor (opt) {\n    super(opt)\n    this[WRITEENTRYCLASS] = WriteEntrySync\n  }\n\n  // pause/resume are no-ops in sync streams.\n  pause () {}\n  resume () {}\n\n  [STAT] (job) {\n    const stat = this.follow ? 'statSync' : 'lstatSync'\n    this[ONSTAT](job, fs[stat](job.absolute))\n  }\n\n  [READDIR] (job, stat) {\n    this[ONREADDIR](job, fs.readdirSync(job.absolute))\n  }\n\n  // gotta get it all in this tick\n  [PIPE] (job) {\n    const source = job.entry\n    const zip = this.zip\n\n    if (job.readdir) {\n      job.readdir.forEach(entry => {\n        const p = job.path\n        const base = p === './' ? '' : p.replace(/\\/*$/, '/')\n        this[ADDFSENTRY](base + entry)\n      })\n    }\n\n    if (zip) {\n      source.on('data', chunk => {\n        zip.write(chunk)\n      })\n    } else {\n      source.on('data', chunk => {\n        super[WRITE](chunk)\n      })\n    }\n  }\n}\n\nPack.Sync = PackSync\n\nmodule.exports = Pack\n","'use strict'\n\n// this[BUFFER] is the remainder of a chunk if we're waiting for\n// the full 512 bytes of a header to come in.  We will Buffer.concat()\n// it to the next write(), which is a mem copy, but a small one.\n//\n// this[QUEUE] is a Yallist of entries that haven't been emitted\n// yet this can only get filled up if the user keeps write()ing after\n// a write() returns false, or does a write() with more than one entry\n//\n// We don't buffer chunks, we always parse them and either create an\n// entry, or push it into the active entry.  The ReadEntry class knows\n// to throw data away if .ignore=true\n//\n// Shift entry off the buffer when it emits 'end', and emit 'entry' for\n// the next one in the list.\n//\n// At any time, we're pushing body chunks into the entry at WRITEENTRY,\n// and waiting for 'end' on the entry at READENTRY\n//\n// ignored entries get .resume() called on them straight away\n\nconst warner = require('./warn-mixin.js')\nconst Header = require('./header.js')\nconst EE = require('events')\nconst Yallist = require('yallist')\nconst maxMetaEntrySize = 1024 * 1024\nconst Entry = require('./read-entry.js')\nconst Pax = require('./pax.js')\nconst zlib = require('minizlib')\n\nconst gzipHeader = Buffer.from([0x1f, 0x8b])\nconst STATE = Symbol('state')\nconst WRITEENTRY = Symbol('writeEntry')\nconst READENTRY = Symbol('readEntry')\nconst NEXTENTRY = Symbol('nextEntry')\nconst PROCESSENTRY = Symbol('processEntry')\nconst EX = Symbol('extendedHeader')\nconst GEX = Symbol('globalExtendedHeader')\nconst META = Symbol('meta')\nconst EMITMETA = Symbol('emitMeta')\nconst BUFFER = Symbol('buffer')\nconst QUEUE = Symbol('queue')\nconst ENDED = Symbol('ended')\nconst EMITTEDEND = Symbol('emittedEnd')\nconst EMIT = Symbol('emit')\nconst UNZIP = Symbol('unzip')\nconst CONSUMECHUNK = Symbol('consumeChunk')\nconst CONSUMECHUNKSUB = Symbol('consumeChunkSub')\nconst CONSUMEBODY = Symbol('consumeBody')\nconst CONSUMEMETA = Symbol('consumeMeta')\nconst CONSUMEHEADER = Symbol('consumeHeader')\nconst CONSUMING = Symbol('consuming')\nconst BUFFERCONCAT = Symbol('bufferConcat')\nconst MAYBEEND = Symbol('maybeEnd')\nconst WRITING = Symbol('writing')\nconst ABORTED = Symbol('aborted')\nconst DONE = Symbol('onDone')\nconst SAW_VALID_ENTRY = Symbol('sawValidEntry')\nconst SAW_NULL_BLOCK = Symbol('sawNullBlock')\nconst SAW_EOF = Symbol('sawEOF')\n\nconst noop = _ => true\n\nmodule.exports = warner(class Parser extends EE {\n  constructor (opt) {\n    opt = opt || {}\n    super(opt)\n\n    this.file = opt.file || ''\n\n    // set to boolean false when an entry starts.  1024 bytes of \\0\n    // is technically a valid tarball, albeit a boring one.\n    this[SAW_VALID_ENTRY] = null\n\n    // these BADARCHIVE errors can't be detected early. listen on DONE.\n    this.on(DONE, _ => {\n      if (this[STATE] === 'begin' || this[SAW_VALID_ENTRY] === false) {\n        // either less than 1 block of data, or all entries were invalid.\n        // Either way, probably not even a tarball.\n        this.warn('TAR_BAD_ARCHIVE', 'Unrecognized archive format')\n      }\n    })\n\n    if (opt.ondone)\n      this.on(DONE, opt.ondone)\n    else {\n      this.on(DONE, _ => {\n        this.emit('prefinish')\n        this.emit('finish')\n        this.emit('end')\n        this.emit('close')\n      })\n    }\n\n    this.strict = !!opt.strict\n    this.maxMetaEntrySize = opt.maxMetaEntrySize || maxMetaEntrySize\n    this.filter = typeof opt.filter === 'function' ? opt.filter : noop\n\n    // have to set this so that streams are ok piping into it\n    this.writable = true\n    this.readable = false\n\n    this[QUEUE] = new Yallist()\n    this[BUFFER] = null\n    this[READENTRY] = null\n    this[WRITEENTRY] = null\n    this[STATE] = 'begin'\n    this[META] = ''\n    this[EX] = null\n    this[GEX] = null\n    this[ENDED] = false\n    this[UNZIP] = null\n    this[ABORTED] = false\n    this[SAW_NULL_BLOCK] = false\n    this[SAW_EOF] = false\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n    if (typeof opt.onentry === 'function')\n      this.on('entry', opt.onentry)\n  }\n\n  [CONSUMEHEADER] (chunk, position) {\n    if (this[SAW_VALID_ENTRY] === null)\n      this[SAW_VALID_ENTRY] = false\n    let header\n    try {\n      header = new Header(chunk, position, this[EX], this[GEX])\n    } catch (er) {\n      return this.warn('TAR_ENTRY_INVALID', er)\n    }\n\n    if (header.nullBlock) {\n      if (this[SAW_NULL_BLOCK]) {\n        this[SAW_EOF] = true\n        // ending an archive with no entries.  pointless, but legal.\n        if (this[STATE] === 'begin')\n          this[STATE] = 'header'\n        this[EMIT]('eof')\n      } else {\n        this[SAW_NULL_BLOCK] = true\n        this[EMIT]('nullBlock')\n      }\n    } else {\n      this[SAW_NULL_BLOCK] = false\n      if (!header.cksumValid)\n        this.warn('TAR_ENTRY_INVALID', 'checksum failure', {header})\n      else if (!header.path)\n        this.warn('TAR_ENTRY_INVALID', 'path is required', {header})\n      else {\n        const type = header.type\n        if (/^(Symbolic)?Link$/.test(type) && !header.linkpath)\n          this.warn('TAR_ENTRY_INVALID', 'linkpath required', {header})\n        else if (!/^(Symbolic)?Link$/.test(type) && header.linkpath)\n          this.warn('TAR_ENTRY_INVALID', 'linkpath forbidden', {header})\n        else {\n          const entry = this[WRITEENTRY] = new Entry(header, this[EX], this[GEX])\n\n          // we do this for meta & ignored entries as well, because they\n          // are still valid tar, or else we wouldn't know to ignore them\n          if (!this[SAW_VALID_ENTRY]) {\n            if (entry.remain) {\n              // this might be the one!\n              const onend = () => {\n                if (!entry.invalid)\n                  this[SAW_VALID_ENTRY] = true\n              }\n              entry.on('end', onend)\n            } else\n              this[SAW_VALID_ENTRY] = true\n          }\n\n          if (entry.meta) {\n            if (entry.size > this.maxMetaEntrySize) {\n              entry.ignore = true\n              this[EMIT]('ignoredEntry', entry)\n              this[STATE] = 'ignore'\n              entry.resume()\n            } else if (entry.size > 0) {\n              this[META] = ''\n              entry.on('data', c => this[META] += c)\n              this[STATE] = 'meta'\n            }\n          } else {\n            this[EX] = null\n            entry.ignore = entry.ignore || !this.filter(entry.path, entry)\n\n            if (entry.ignore) {\n              // probably valid, just not something we care about\n              this[EMIT]('ignoredEntry', entry)\n              this[STATE] = entry.remain ? 'ignore' : 'header'\n              entry.resume()\n            } else {\n              if (entry.remain)\n                this[STATE] = 'body'\n              else {\n                this[STATE] = 'header'\n                entry.end()\n              }\n\n              if (!this[READENTRY]) {\n                this[QUEUE].push(entry)\n                this[NEXTENTRY]()\n              } else\n                this[QUEUE].push(entry)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  [PROCESSENTRY] (entry) {\n    let go = true\n\n    if (!entry) {\n      this[READENTRY] = null\n      go = false\n    } else if (Array.isArray(entry))\n      this.emit.apply(this, entry)\n    else {\n      this[READENTRY] = entry\n      this.emit('entry', entry)\n      if (!entry.emittedEnd) {\n        entry.on('end', _ => this[NEXTENTRY]())\n        go = false\n      }\n    }\n\n    return go\n  }\n\n  [NEXTENTRY] () {\n    do {} while (this[PROCESSENTRY](this[QUEUE].shift()))\n\n    if (!this[QUEUE].length) {\n      // At this point, there's nothing in the queue, but we may have an\n      // entry which is being consumed (readEntry).\n      // If we don't, then we definitely can handle more data.\n      // If we do, and either it's flowing, or it has never had any data\n      // written to it, then it needs more.\n      // The only other possibility is that it has returned false from a\n      // write() call, so we wait for the next drain to continue.\n      const re = this[READENTRY]\n      const drainNow = !re || re.flowing || re.size === re.remain\n      if (drainNow) {\n        if (!this[WRITING])\n          this.emit('drain')\n      } else\n        re.once('drain', _ => this.emit('drain'))\n    }\n  }\n\n  [CONSUMEBODY] (chunk, position) {\n    // write up to but no  more than writeEntry.blockRemain\n    const entry = this[WRITEENTRY]\n    const br = entry.blockRemain\n    const c = (br >= chunk.length && position === 0) ? chunk\n      : chunk.slice(position, position + br)\n\n    entry.write(c)\n\n    if (!entry.blockRemain) {\n      this[STATE] = 'header'\n      this[WRITEENTRY] = null\n      entry.end()\n    }\n\n    return c.length\n  }\n\n  [CONSUMEMETA] (chunk, position) {\n    const entry = this[WRITEENTRY]\n    const ret = this[CONSUMEBODY](chunk, position)\n\n    // if we finished, then the entry is reset\n    if (!this[WRITEENTRY])\n      this[EMITMETA](entry)\n\n    return ret\n  }\n\n  [EMIT] (ev, data, extra) {\n    if (!this[QUEUE].length && !this[READENTRY])\n      this.emit(ev, data, extra)\n    else\n      this[QUEUE].push([ev, data, extra])\n  }\n\n  [EMITMETA] (entry) {\n    this[EMIT]('meta', this[META])\n    switch (entry.type) {\n      case 'ExtendedHeader':\n      case 'OldExtendedHeader':\n        this[EX] = Pax.parse(this[META], this[EX], false)\n        break\n\n      case 'GlobalExtendedHeader':\n        this[GEX] = Pax.parse(this[META], this[GEX], true)\n        break\n\n      case 'NextFileHasLongPath':\n      case 'OldGnuLongPath':\n        this[EX] = this[EX] || Object.create(null)\n        this[EX].path = this[META].replace(/\\0.*/, '')\n        break\n\n      case 'NextFileHasLongLinkpath':\n        this[EX] = this[EX] || Object.create(null)\n        this[EX].linkpath = this[META].replace(/\\0.*/, '')\n        break\n\n      /* istanbul ignore next */\n      default: throw new Error('unknown meta: ' + entry.type)\n    }\n  }\n\n  abort (error) {\n    this[ABORTED] = true\n    this.emit('abort', error)\n    // always throws, even in non-strict mode\n    this.warn('TAR_ABORT', error, { recoverable: false })\n  }\n\n  write (chunk) {\n    if (this[ABORTED])\n      return\n\n    // first write, might be gzipped\n    if (this[UNZIP] === null && chunk) {\n      if (this[BUFFER]) {\n        chunk = Buffer.concat([this[BUFFER], chunk])\n        this[BUFFER] = null\n      }\n      if (chunk.length < gzipHeader.length) {\n        this[BUFFER] = chunk\n        return true\n      }\n      for (let i = 0; this[UNZIP] === null && i < gzipHeader.length; i++) {\n        if (chunk[i] !== gzipHeader[i])\n          this[UNZIP] = false\n      }\n      if (this[UNZIP] === null) {\n        const ended = this[ENDED]\n        this[ENDED] = false\n        this[UNZIP] = new zlib.Unzip()\n        this[UNZIP].on('data', chunk => this[CONSUMECHUNK](chunk))\n        this[UNZIP].on('error', er => this.abort(er))\n        this[UNZIP].on('end', _ => {\n          this[ENDED] = true\n          this[CONSUMECHUNK]()\n        })\n        this[WRITING] = true\n        const ret = this[UNZIP][ended ? 'end' : 'write'](chunk)\n        this[WRITING] = false\n        return ret\n      }\n    }\n\n    this[WRITING] = true\n    if (this[UNZIP])\n      this[UNZIP].write(chunk)\n    else\n      this[CONSUMECHUNK](chunk)\n    this[WRITING] = false\n\n    // return false if there's a queue, or if the current entry isn't flowing\n    const ret =\n      this[QUEUE].length ? false :\n      this[READENTRY] ? this[READENTRY].flowing :\n      true\n\n    // if we have no queue, then that means a clogged READENTRY\n    if (!ret && !this[QUEUE].length)\n      this[READENTRY].once('drain', _ => this.emit('drain'))\n\n    return ret\n  }\n\n  [BUFFERCONCAT] (c) {\n    if (c && !this[ABORTED])\n      this[BUFFER] = this[BUFFER] ? Buffer.concat([this[BUFFER], c]) : c\n  }\n\n  [MAYBEEND] () {\n    if (this[ENDED] &&\n        !this[EMITTEDEND] &&\n        !this[ABORTED] &&\n        !this[CONSUMING]) {\n      this[EMITTEDEND] = true\n      const entry = this[WRITEENTRY]\n      if (entry && entry.blockRemain) {\n        // truncated, likely a damaged file\n        const have = this[BUFFER] ? this[BUFFER].length : 0\n        this.warn('TAR_BAD_ARCHIVE', `Truncated input (needed ${\n          entry.blockRemain} more bytes, only ${have} available)`, {entry})\n        if (this[BUFFER])\n          entry.write(this[BUFFER])\n        entry.end()\n      }\n      this[EMIT](DONE)\n    }\n  }\n\n  [CONSUMECHUNK] (chunk) {\n    if (this[CONSUMING])\n      this[BUFFERCONCAT](chunk)\n    else if (!chunk && !this[BUFFER])\n      this[MAYBEEND]()\n    else {\n      this[CONSUMING] = true\n      if (this[BUFFER]) {\n        this[BUFFERCONCAT](chunk)\n        const c = this[BUFFER]\n        this[BUFFER] = null\n        this[CONSUMECHUNKSUB](c)\n      } else\n        this[CONSUMECHUNKSUB](chunk)\n\n      while (this[BUFFER] &&\n          this[BUFFER].length >= 512 &&\n          !this[ABORTED] &&\n          !this[SAW_EOF]) {\n        const c = this[BUFFER]\n        this[BUFFER] = null\n        this[CONSUMECHUNKSUB](c)\n      }\n      this[CONSUMING] = false\n    }\n\n    if (!this[BUFFER] || this[ENDED])\n      this[MAYBEEND]()\n  }\n\n  [CONSUMECHUNKSUB] (chunk) {\n    // we know that we are in CONSUMING mode, so anything written goes into\n    // the buffer.  Advance the position and put any remainder in the buffer.\n    let position = 0\n    const length = chunk.length\n    while (position + 512 <= length && !this[ABORTED] && !this[SAW_EOF]) {\n      switch (this[STATE]) {\n        case 'begin':\n        case 'header':\n          this[CONSUMEHEADER](chunk, position)\n          position += 512\n          break\n\n        case 'ignore':\n        case 'body':\n          position += this[CONSUMEBODY](chunk, position)\n          break\n\n        case 'meta':\n          position += this[CONSUMEMETA](chunk, position)\n          break\n\n        /* istanbul ignore next */\n        default:\n          throw new Error('invalid state: ' + this[STATE])\n      }\n    }\n\n    if (position < length) {\n      if (this[BUFFER])\n        this[BUFFER] = Buffer.concat([chunk.slice(position), this[BUFFER]])\n      else\n        this[BUFFER] = chunk.slice(position)\n    }\n  }\n\n  end (chunk) {\n    if (!this[ABORTED]) {\n      if (this[UNZIP])\n        this[UNZIP].end(chunk)\n      else {\n        this[ENDED] = true\n        this.write(chunk)\n      }\n    }\n  }\n})\n","// A path exclusive reservation system\n// reserve([list, of, paths], fn)\n// When the fn is first in line for all its paths, it\n// is called with a cb that clears the reservation.\n//\n// Used by async unpack to avoid clobbering paths in use,\n// while still allowing maximal safe parallelization.\n\nconst assert = require('assert')\nconst normPath = require('./normalize-windows-path.js')\nconst { join } = require('path')\n\nmodule.exports = () => {\n  // path => [function or Set]\n  // A Set object means a directory reservation\n  // A fn is a direct reservation on that path\n  const queues = new Map()\n\n  // fn => {paths:[path,...], dirs:[path, ...]}\n  const reservations = new Map()\n\n  // return a set of parent dirs for a given path\n  const getDirs = path =>\n    path.split('/').slice(0, -1).reduce((set, path) =>\n      set.length ? set.concat(normPath(join(set[set.length - 1], path)))\n      : [path], [])\n\n  // functions currently running\n  const running = new Set()\n\n  // return the queues for each path the function cares about\n  // fn => {paths, dirs}\n  const getQueues = fn => {\n    const res = reservations.get(fn)\n    /* istanbul ignore if - unpossible */\n    if (!res)\n      throw new Error('function does not have any path reservations')\n    return {\n      paths: res.paths.map(path => queues.get(path)),\n      dirs: [...res.dirs].map(path => queues.get(path)),\n    }\n  }\n\n  // check if fn is first in line for all its paths, and is\n  // included in the first set for all its dir queues\n  const check = fn => {\n    const {paths, dirs} = getQueues(fn)\n    return paths.every(q => q[0] === fn) &&\n      dirs.every(q => q[0] instanceof Set && q[0].has(fn))\n  }\n\n  // run the function if it's first in line and not already running\n  const run = fn => {\n    if (running.has(fn) || !check(fn))\n      return false\n    running.add(fn)\n    fn(() => clear(fn))\n    return true\n  }\n\n  const clear = fn => {\n    if (!running.has(fn))\n      return false\n\n    const { paths, dirs } = reservations.get(fn)\n    const next = new Set()\n\n    paths.forEach(path => {\n      const q = queues.get(path)\n      assert.equal(q[0], fn)\n      if (q.length === 1)\n        queues.delete(path)\n      else {\n        q.shift()\n        if (typeof q[0] === 'function')\n          next.add(q[0])\n        else\n          q[0].forEach(fn => next.add(fn))\n      }\n    })\n\n    dirs.forEach(dir => {\n      const q = queues.get(dir)\n      assert(q[0] instanceof Set)\n      if (q[0].size === 1 && q.length === 1)\n        queues.delete(dir)\n      else if (q[0].size === 1) {\n        q.shift()\n\n        // must be a function or else the Set would've been reused\n        next.add(q[0])\n      } else\n        q[0].delete(fn)\n    })\n    running.delete(fn)\n\n    next.forEach(fn => run(fn))\n    return true\n  }\n\n  const reserve = (paths, fn) => {\n    paths = paths.map(p => normPath(join(p)).toLowerCase())\n    const dirs = new Set(\n      paths.map(path => getDirs(path)).reduce((a, b) => a.concat(b))\n    )\n    reservations.set(fn, {dirs, paths})\n    paths.forEach(path => {\n      const q = queues.get(path)\n      if (!q)\n        queues.set(path, [fn])\n      else\n        q.push(fn)\n    })\n    dirs.forEach(dir => {\n      const q = queues.get(dir)\n      if (!q)\n        queues.set(dir, [new Set([fn])])\n      else if (q[q.length - 1] instanceof Set)\n        q[q.length - 1].add(fn)\n      else\n        q.push(new Set([fn]))\n    })\n\n    return run(fn)\n  }\n\n  return { check, reserve }\n}\n","'use strict'\nconst Header = require('./header.js')\nconst path = require('path')\n\nclass Pax {\n  constructor (obj, global) {\n    this.atime = obj.atime || null\n    this.charset = obj.charset || null\n    this.comment = obj.comment || null\n    this.ctime = obj.ctime || null\n    this.gid = obj.gid || null\n    this.gname = obj.gname || null\n    this.linkpath = obj.linkpath || null\n    this.mtime = obj.mtime || null\n    this.path = obj.path || null\n    this.size = obj.size || null\n    this.uid = obj.uid || null\n    this.uname = obj.uname || null\n    this.dev = obj.dev || null\n    this.ino = obj.ino || null\n    this.nlink = obj.nlink || null\n    this.global = global || false\n  }\n\n  encode () {\n    const body = this.encodeBody()\n    if (body === '')\n      return null\n\n    const bodyLen = Buffer.byteLength(body)\n    // round up to 512 bytes\n    // add 512 for header\n    const bufLen = 512 * Math.ceil(1 + bodyLen / 512)\n    const buf = Buffer.allocUnsafe(bufLen)\n\n    // 0-fill the header section, it might not hit every field\n    for (let i = 0; i < 512; i++)\n      buf[i] = 0\n\n    new Header({\n      // XXX split the path\n      // then the path should be PaxHeader + basename, but less than 99,\n      // prepend with the dirname\n      path: ('PaxHeader/' + path.basename(this.path)).slice(0, 99),\n      mode: this.mode || 0o644,\n      uid: this.uid || null,\n      gid: this.gid || null,\n      size: bodyLen,\n      mtime: this.mtime || null,\n      type: this.global ? 'GlobalExtendedHeader' : 'ExtendedHeader',\n      linkpath: '',\n      uname: this.uname || '',\n      gname: this.gname || '',\n      devmaj: 0,\n      devmin: 0,\n      atime: this.atime || null,\n      ctime: this.ctime || null,\n    }).encode(buf)\n\n    buf.write(body, 512, bodyLen, 'utf8')\n\n    // null pad after the body\n    for (let i = bodyLen + 512; i < buf.length; i++)\n      buf[i] = 0\n\n    return buf\n  }\n\n  encodeBody () {\n    return (\n      this.encodeField('path') +\n      this.encodeField('ctime') +\n      this.encodeField('atime') +\n      this.encodeField('dev') +\n      this.encodeField('ino') +\n      this.encodeField('nlink') +\n      this.encodeField('charset') +\n      this.encodeField('comment') +\n      this.encodeField('gid') +\n      this.encodeField('gname') +\n      this.encodeField('linkpath') +\n      this.encodeField('mtime') +\n      this.encodeField('size') +\n      this.encodeField('uid') +\n      this.encodeField('uname')\n    )\n  }\n\n  encodeField (field) {\n    if (this[field] === null || this[field] === undefined)\n      return ''\n    const v = this[field] instanceof Date ? this[field].getTime() / 1000\n      : this[field]\n    const s = ' ' +\n      (field === 'dev' || field === 'ino' || field === 'nlink'\n        ? 'SCHILY.' : '') +\n      field + '=' + v + '\\n'\n    const byteLen = Buffer.byteLength(s)\n    // the digits includes the length of the digits in ascii base-10\n    // so if it's 9 characters, then adding 1 for the 9 makes it 10\n    // which makes it 11 chars.\n    let digits = Math.floor(Math.log(byteLen) / Math.log(10)) + 1\n    if (byteLen + digits >= Math.pow(10, digits))\n      digits += 1\n    const len = digits + byteLen\n    return len + s\n  }\n}\n\nPax.parse = (string, ex, g) => new Pax(merge(parseKV(string), ex), g)\n\nconst merge = (a, b) =>\n  b ? Object.keys(a).reduce((s, k) => (s[k] = a[k], s), b) : a\n\nconst parseKV = string =>\n  string\n    .replace(/\\n$/, '')\n    .split('\\n')\n    .reduce(parseKVLine, Object.create(null))\n\nconst parseKVLine = (set, line) => {\n  const n = parseInt(line, 10)\n\n  // XXX Values with \\n in them will fail this.\n  // Refactor to not be a naive line-by-line parse.\n  if (n !== Buffer.byteLength(line) + 1)\n    return set\n\n  line = line.substr((n + ' ').length)\n  const kv = line.split('=')\n  const k = kv.shift().replace(/^SCHILY\\.(dev|ino|nlink)/, '$1')\n  if (!k)\n    return set\n\n  const v = kv.join('=')\n  set[k] = /^([A-Z]+\\.)?([mac]|birth|creation)time$/.test(k)\n    ? new Date(v * 1000)\n    : /^[0-9]+$/.test(v) ? +v\n    : v\n  return set\n}\n\nmodule.exports = Pax\n","'use strict'\nconst MiniPass = require('minipass')\nconst normPath = require('./normalize-windows-path.js')\n\nconst SLURP = Symbol('slurp')\nmodule.exports = class ReadEntry extends MiniPass {\n  constructor (header, ex, gex) {\n    super()\n    // read entries always start life paused.  this is to avoid the\n    // situation where Minipass's auto-ending empty streams results\n    // in an entry ending before we're ready for it.\n    this.pause()\n    this.extended = ex\n    this.globalExtended = gex\n    this.header = header\n    this.startBlockSize = 512 * Math.ceil(header.size / 512)\n    this.blockRemain = this.startBlockSize\n    this.remain = header.size\n    this.type = header.type\n    this.meta = false\n    this.ignore = false\n    switch (this.type) {\n      case 'File':\n      case 'OldFile':\n      case 'Link':\n      case 'SymbolicLink':\n      case 'CharacterDevice':\n      case 'BlockDevice':\n      case 'Directory':\n      case 'FIFO':\n      case 'ContiguousFile':\n      case 'GNUDumpDir':\n        break\n\n      case 'NextFileHasLongLinkpath':\n      case 'NextFileHasLongPath':\n      case 'OldGnuLongPath':\n      case 'GlobalExtendedHeader':\n      case 'ExtendedHeader':\n      case 'OldExtendedHeader':\n        this.meta = true\n        break\n\n      // NOTE: gnutar and bsdtar treat unrecognized types as 'File'\n      // it may be worth doing the same, but with a warning.\n      default:\n        this.ignore = true\n    }\n\n    this.path = normPath(header.path)\n    this.mode = header.mode\n    if (this.mode)\n      this.mode = this.mode & 0o7777\n    this.uid = header.uid\n    this.gid = header.gid\n    this.uname = header.uname\n    this.gname = header.gname\n    this.size = header.size\n    this.mtime = header.mtime\n    this.atime = header.atime\n    this.ctime = header.ctime\n    this.linkpath = normPath(header.linkpath)\n    this.uname = header.uname\n    this.gname = header.gname\n\n    if (ex)\n      this[SLURP](ex)\n    if (gex)\n      this[SLURP](gex, true)\n  }\n\n  write (data) {\n    const writeLen = data.length\n    if (writeLen > this.blockRemain)\n      throw new Error('writing more to entry than is appropriate')\n\n    const r = this.remain\n    const br = this.blockRemain\n    this.remain = Math.max(0, r - writeLen)\n    this.blockRemain = Math.max(0, br - writeLen)\n    if (this.ignore)\n      return true\n\n    if (r >= writeLen)\n      return super.write(data)\n\n    // r < writeLen\n    return super.write(data.slice(0, r))\n  }\n\n  [SLURP] (ex, global) {\n    for (const k in ex) {\n      // we slurp in everything except for the path attribute in\n      // a global extended header, because that's weird.\n      if (ex[k] !== null && ex[k] !== undefined &&\n          !(global && k === 'path'))\n        this[k] = k === 'path' || k === 'linkpath' ? normPath(ex[k]) : ex[k]\n    }\n  }\n}\n","'use strict'\n\n// tar -r\nconst hlo = require('./high-level-opt.js')\nconst Pack = require('./pack.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst t = require('./list.js')\nconst path = require('path')\n\n// starting at the head of the file, read a Header\n// If the checksum is invalid, that's our position to start writing\n// If it is, jump forward by the specified size (round up to 512)\n// and try again.\n// Write the new Pack stream starting there.\n\nconst Header = require('./header.js')\n\nmodule.exports = (opt_, files, cb) => {\n  const opt = hlo(opt_)\n\n  if (!opt.file)\n    throw new TypeError('file is required')\n\n  if (opt.gzip)\n    throw new TypeError('cannot append to compressed archives')\n\n  if (!files || !Array.isArray(files) || !files.length)\n    throw new TypeError('no files or directories specified')\n\n  files = Array.from(files)\n\n  return opt.sync ? replaceSync(opt, files)\n    : replace(opt, files, cb)\n}\n\nconst replaceSync = (opt, files) => {\n  const p = new Pack.Sync(opt)\n\n  let threw = true\n  let fd\n  let position\n\n  try {\n    try {\n      fd = fs.openSync(opt.file, 'r+')\n    } catch (er) {\n      if (er.code === 'ENOENT')\n        fd = fs.openSync(opt.file, 'w+')\n      else\n        throw er\n    }\n\n    const st = fs.fstatSync(fd)\n    const headBuf = Buffer.alloc(512)\n\n    POSITION: for (position = 0; position < st.size; position += 512) {\n      for (let bufPos = 0, bytes = 0; bufPos < 512; bufPos += bytes) {\n        bytes = fs.readSync(\n          fd, headBuf, bufPos, headBuf.length - bufPos, position + bufPos\n        )\n\n        if (position === 0 && headBuf[0] === 0x1f && headBuf[1] === 0x8b)\n          throw new Error('cannot append to compressed archives')\n\n        if (!bytes)\n          break POSITION\n      }\n\n      const h = new Header(headBuf)\n      if (!h.cksumValid)\n        break\n      const entryBlockSize = 512 * Math.ceil(h.size / 512)\n      if (position + entryBlockSize + 512 > st.size)\n        break\n      // the 512 for the header we just parsed will be added as well\n      // also jump ahead all the blocks for the body\n      position += entryBlockSize\n      if (opt.mtimeCache)\n        opt.mtimeCache.set(h.path, h.mtime)\n    }\n    threw = false\n\n    streamSync(opt, p, position, fd, files)\n  } finally {\n    if (threw) {\n      try {\n        fs.closeSync(fd)\n      } catch (er) {}\n    }\n  }\n}\n\nconst streamSync = (opt, p, position, fd, files) => {\n  const stream = new fsm.WriteStreamSync(opt.file, {\n    fd: fd,\n    start: position,\n  })\n  p.pipe(stream)\n  addFilesSync(p, files)\n}\n\nconst replace = (opt, files, cb) => {\n  files = Array.from(files)\n  const p = new Pack(opt)\n\n  const getPos = (fd, size, cb_) => {\n    const cb = (er, pos) => {\n      if (er)\n        fs.close(fd, _ => cb_(er))\n      else\n        cb_(null, pos)\n    }\n\n    let position = 0\n    if (size === 0)\n      return cb(null, 0)\n\n    let bufPos = 0\n    const headBuf = Buffer.alloc(512)\n    const onread = (er, bytes) => {\n      if (er)\n        return cb(er)\n      bufPos += bytes\n      if (bufPos < 512 && bytes) {\n        return fs.read(\n          fd, headBuf, bufPos, headBuf.length - bufPos,\n          position + bufPos, onread\n        )\n      }\n\n      if (position === 0 && headBuf[0] === 0x1f && headBuf[1] === 0x8b)\n        return cb(new Error('cannot append to compressed archives'))\n\n      // truncated header\n      if (bufPos < 512)\n        return cb(null, position)\n\n      const h = new Header(headBuf)\n      if (!h.cksumValid)\n        return cb(null, position)\n\n      const entryBlockSize = 512 * Math.ceil(h.size / 512)\n      if (position + entryBlockSize + 512 > size)\n        return cb(null, position)\n\n      position += entryBlockSize + 512\n      if (position >= size)\n        return cb(null, position)\n\n      if (opt.mtimeCache)\n        opt.mtimeCache.set(h.path, h.mtime)\n      bufPos = 0\n      fs.read(fd, headBuf, 0, 512, position, onread)\n    }\n    fs.read(fd, headBuf, 0, 512, position, onread)\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    p.on('error', reject)\n    let flag = 'r+'\n    const onopen = (er, fd) => {\n      if (er && er.code === 'ENOENT' && flag === 'r+') {\n        flag = 'w+'\n        return fs.open(opt.file, flag, onopen)\n      }\n\n      if (er)\n        return reject(er)\n\n      fs.fstat(fd, (er, st) => {\n        if (er)\n          return fs.close(fd, () => reject(er))\n\n        getPos(fd, st.size, (er, position) => {\n          if (er)\n            return reject(er)\n          const stream = new fsm.WriteStream(opt.file, {\n            fd: fd,\n            start: position,\n          })\n          p.pipe(stream)\n          stream.on('error', reject)\n          stream.on('close', resolve)\n          addFilesAsync(p, files)\n        })\n      })\n    }\n    fs.open(opt.file, flag, onopen)\n  })\n\n  return cb ? promise.then(cb, cb) : promise\n}\n\nconst addFilesSync = (p, files) => {\n  files.forEach(file => {\n    if (file.charAt(0) === '@') {\n      t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        sync: true,\n        noResume: true,\n        onentry: entry => p.add(entry),\n      })\n    } else\n      p.add(file)\n  })\n  p.end()\n}\n\nconst addFilesAsync = (p, files) => {\n  while (files.length) {\n    const file = files.shift()\n    if (file.charAt(0) === '@') {\n      return t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        noResume: true,\n        onentry: entry => p.add(entry),\n      }).then(_ => addFilesAsync(p, files))\n    } else\n      p.add(file)\n  }\n  p.end()\n}\n","// unix absolute paths are also absolute on win32, so we use this for both\nconst { isAbsolute, parse } = require('path').win32\n\n// returns [root, stripped]\nmodule.exports = path => {\n  let r = ''\n  while (isAbsolute(path)) {\n    // windows will think that //x/y/z has a \"root\" of //x/y/\n    const root = path.charAt(0) === '/' ? '/' : parse(path).root\n    path = path.substr(root.length)\n    r += root\n  }\n  return [r, path]\n}\n","// this is the only approach that was significantly faster than using\n// str.replace(/\\/+$/, '') for strings ending with a lot of / chars and\n// containing multiple / chars.\nconst batchStrings = [\n  '/'.repeat(1024),\n  '/'.repeat(512),\n  '/'.repeat(256),\n  '/'.repeat(128),\n  '/'.repeat(64),\n  '/'.repeat(32),\n  '/'.repeat(16),\n  '/'.repeat(8),\n  '/'.repeat(4),\n  '/'.repeat(2),\n  '/',\n]\n\nmodule.exports = str => {\n  for (const s of batchStrings) {\n    while (str.length >= s.length && str.slice(-1 * s.length) === s)\n      str = str.slice(0, -1 * s.length)\n  }\n  return str\n}\n","'use strict'\n// map types from key to human-friendly name\nexports.name = new Map([\n  ['0', 'File'],\n  // same as File\n  ['', 'OldFile'],\n  ['1', 'Link'],\n  ['2', 'SymbolicLink'],\n  // Devices and FIFOs aren't fully supported\n  // they are parsed, but skipped when unpacking\n  ['3', 'CharacterDevice'],\n  ['4', 'BlockDevice'],\n  ['5', 'Directory'],\n  ['6', 'FIFO'],\n  // same as File\n  ['7', 'ContiguousFile'],\n  // pax headers\n  ['g', 'GlobalExtendedHeader'],\n  ['x', 'ExtendedHeader'],\n  // vendor-specific stuff\n  // skip\n  ['A', 'SolarisACL'],\n  // like 5, but with data, which should be skipped\n  ['D', 'GNUDumpDir'],\n  // metadata only, skip\n  ['I', 'Inode'],\n  // data = link path of next file\n  ['K', 'NextFileHasLongLinkpath'],\n  // data = path of next file\n  ['L', 'NextFileHasLongPath'],\n  // skip\n  ['M', 'ContinuationFile'],\n  // like L\n  ['N', 'OldGnuLongPath'],\n  // skip\n  ['S', 'SparseFile'],\n  // skip\n  ['V', 'TapeVolumeHeader'],\n  // like x\n  ['X', 'OldExtendedHeader'],\n])\n\n// map the other direction\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]))\n","'use strict'\n\n// the PEND/UNPEND stuff tracks whether we're ready to emit end/close yet.\n// but the path reservations are required to avoid race conditions where\n// parallelized unpack ops may mess with one another, due to dependencies\n// (like a Link depending on its target) or destructive operations (like\n// clobbering an fs object to create one of a different type.)\n\nconst assert = require('assert')\nconst Parser = require('./parse.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst path = require('path')\nconst mkdir = require('./mkdir.js')\nconst wc = require('./winchars.js')\nconst pathReservations = require('./path-reservations.js')\nconst stripAbsolutePath = require('./strip-absolute-path.js')\nconst normPath = require('./normalize-windows-path.js')\n\nconst ONENTRY = Symbol('onEntry')\nconst CHECKFS = Symbol('checkFs')\nconst CHECKFS2 = Symbol('checkFs2')\nconst ISREUSABLE = Symbol('isReusable')\nconst MAKEFS = Symbol('makeFs')\nconst FILE = Symbol('file')\nconst DIRECTORY = Symbol('directory')\nconst LINK = Symbol('link')\nconst SYMLINK = Symbol('symlink')\nconst HARDLINK = Symbol('hardlink')\nconst UNSUPPORTED = Symbol('unsupported')\nconst CHECKPATH = Symbol('checkPath')\nconst MKDIR = Symbol('mkdir')\nconst ONERROR = Symbol('onError')\nconst PENDING = Symbol('pending')\nconst PEND = Symbol('pend')\nconst UNPEND = Symbol('unpend')\nconst ENDED = Symbol('ended')\nconst MAYBECLOSE = Symbol('maybeClose')\nconst SKIP = Symbol('skip')\nconst DOCHOWN = Symbol('doChown')\nconst UID = Symbol('uid')\nconst GID = Symbol('gid')\nconst CHECKED_CWD = Symbol('checkedCwd')\nconst crypto = require('crypto')\nconst getFlag = require('./get-write-flag.js')\n\n// Unlinks on Windows are not atomic.\n//\n// This means that if you have a file entry, followed by another\n// file entry with an identical name, and you cannot re-use the file\n// (because it's a hardlink, or because unlink:true is set, or it's\n// Windows, which does not have useful nlink values), then the unlink\n// will be committed to the disk AFTER the new file has been written\n// over the old one, deleting the new file.\n//\n// To work around this, on Windows systems, we rename the file and then\n// delete the renamed file.  It's a sloppy kludge, but frankly, I do not\n// know of a better way to do this, given windows' non-atomic unlink\n// semantics.\n//\n// See: https://github.com/npm/node-tar/issues/183\n/* istanbul ignore next */\nconst unlinkFile = (path, cb) => {\n  if (process.platform !== 'win32')\n    return fs.unlink(path, cb)\n\n  const name = path + '.DELETE.' + crypto.randomBytes(16).toString('hex')\n  fs.rename(path, name, er => {\n    if (er)\n      return cb(er)\n    fs.unlink(name, cb)\n  })\n}\n\n/* istanbul ignore next */\nconst unlinkFileSync = path => {\n  if (process.platform !== 'win32')\n    return fs.unlinkSync(path)\n\n  const name = path + '.DELETE.' + crypto.randomBytes(16).toString('hex')\n  fs.renameSync(path, name)\n  fs.unlinkSync(name)\n}\n\n// this.gid, entry.gid, this.processUid\nconst uint32 = (a, b, c) =>\n  a === a >>> 0 ? a\n  : b === b >>> 0 ? b\n  : c\n\nconst pruneCache = (cache, abs) => {\n  // clear the cache if it's a case-insensitive match, since we can't\n  // know if the current file system is case-sensitive or not.\n  abs = normPath(abs).toLowerCase()\n  for (const path of cache.keys()) {\n    const plower = path.toLowerCase()\n    if (plower === abs || plower.toLowerCase().indexOf(abs + '/') === 0)\n      cache.delete(path)\n  }\n}\n\nclass Unpack extends Parser {\n  constructor (opt) {\n    if (!opt)\n      opt = {}\n\n    opt.ondone = _ => {\n      this[ENDED] = true\n      this[MAYBECLOSE]()\n    }\n\n    super(opt)\n\n    this[CHECKED_CWD] = false\n\n    this.reservations = pathReservations()\n\n    this.transform = typeof opt.transform === 'function' ? opt.transform : null\n\n    this.writable = true\n    this.readable = false\n\n    this[PENDING] = 0\n    this[ENDED] = false\n\n    this.dirCache = opt.dirCache || new Map()\n\n    if (typeof opt.uid === 'number' || typeof opt.gid === 'number') {\n      // need both or neither\n      if (typeof opt.uid !== 'number' || typeof opt.gid !== 'number')\n        throw new TypeError('cannot set owner without number uid and gid')\n      if (opt.preserveOwner) {\n        throw new TypeError(\n          'cannot preserve owner in archive and also set owner explicitly')\n      }\n      this.uid = opt.uid\n      this.gid = opt.gid\n      this.setOwner = true\n    } else {\n      this.uid = null\n      this.gid = null\n      this.setOwner = false\n    }\n\n    // default true for root\n    if (opt.preserveOwner === undefined && typeof opt.uid !== 'number')\n      this.preserveOwner = process.getuid && process.getuid() === 0\n    else\n      this.preserveOwner = !!opt.preserveOwner\n\n    this.processUid = (this.preserveOwner || this.setOwner) && process.getuid ?\n      process.getuid() : null\n    this.processGid = (this.preserveOwner || this.setOwner) && process.getgid ?\n      process.getgid() : null\n\n    // mostly just for testing, but useful in some cases.\n    // Forcibly trigger a chown on every entry, no matter what\n    this.forceChown = opt.forceChown === true\n\n    // turn ><?| in filenames into 0xf000-higher encoded forms\n    this.win32 = !!opt.win32 || process.platform === 'win32'\n\n    // do not unpack over files that are newer than what's in the archive\n    this.newer = !!opt.newer\n\n    // do not unpack over ANY files\n    this.keep = !!opt.keep\n\n    // do not set mtime/atime of extracted entries\n    this.noMtime = !!opt.noMtime\n\n    // allow .., absolute path entries, and unpacking through symlinks\n    // without this, warn and skip .., relativize absolutes, and error\n    // on symlinks in extraction path\n    this.preservePaths = !!opt.preservePaths\n\n    // unlink files and links before writing. This breaks existing hard\n    // links, and removes symlink directories rather than erroring\n    this.unlink = !!opt.unlink\n\n    this.cwd = normPath(path.resolve(opt.cwd || process.cwd()))\n    this.strip = +opt.strip || 0\n    // if we're not chmodding, then we don't need the process umask\n    this.processUmask = opt.noChmod ? 0 : process.umask()\n    this.umask = typeof opt.umask === 'number' ? opt.umask : this.processUmask\n\n    // default mode for dirs created as parents\n    this.dmode = opt.dmode || (0o0777 & (~this.umask))\n    this.fmode = opt.fmode || (0o0666 & (~this.umask))\n\n    this.on('entry', entry => this[ONENTRY](entry))\n  }\n\n  // a bad or damaged archive is a warning for Parser, but an error\n  // when extracting.  Mark those errors as unrecoverable, because\n  // the Unpack contract cannot be met.\n  warn (code, msg, data = {}) {\n    if (code === 'TAR_BAD_ARCHIVE' || code === 'TAR_ABORT')\n      data.recoverable = false\n    return super.warn(code, msg, data)\n  }\n\n  [MAYBECLOSE] () {\n    if (this[ENDED] && this[PENDING] === 0) {\n      this.emit('prefinish')\n      this.emit('finish')\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  [CHECKPATH] (entry) {\n    if (this.strip) {\n      const parts = normPath(entry.path).split('/')\n      if (parts.length < this.strip)\n        return false\n      entry.path = parts.slice(this.strip).join('/')\n\n      if (entry.type === 'Link') {\n        const linkparts = normPath(entry.linkpath).split('/')\n        if (linkparts.length >= this.strip)\n          entry.linkpath = linkparts.slice(this.strip).join('/')\n        else\n          return false\n      }\n    }\n\n    if (!this.preservePaths) {\n      const p = normPath(entry.path)\n      if (p.split('/').includes('..')) {\n        this.warn('TAR_ENTRY_ERROR', `path contains '..'`, {\n          entry,\n          path: p,\n        })\n        return false\n      }\n\n      // absolutes on posix are also absolutes on win32\n      // so we only need to test this one to get both\n      const [root, stripped] = stripAbsolutePath(p)\n      if (root) {\n        entry.path = stripped\n        this.warn('TAR_ENTRY_INFO', `stripping ${root} from absolute path`, {\n          entry,\n          path: p,\n        })\n      }\n    }\n\n    if (path.isAbsolute(entry.path))\n      entry.absolute = normPath(path.resolve(entry.path))\n    else\n      entry.absolute = normPath(path.resolve(this.cwd, entry.path))\n\n    // an archive can set properties on the extraction directory, but it\n    // may not replace the cwd with a different kind of thing entirely.\n    if (entry.absolute === this.cwd &&\n        entry.type !== 'Directory' &&\n        entry.type !== 'GNUDumpDir')\n      return false\n\n    // only encode : chars that aren't drive letter indicators\n    if (this.win32) {\n      const { root: aRoot } = path.win32.parse(entry.absolute)\n      entry.absolute = aRoot + wc.encode(entry.absolute.substr(aRoot.length))\n      const { root: pRoot } = path.win32.parse(entry.path)\n      entry.path = pRoot + wc.encode(entry.path.substr(pRoot.length))\n    }\n\n    return true\n  }\n\n  [ONENTRY] (entry) {\n    if (!this[CHECKPATH](entry))\n      return entry.resume()\n\n    assert.equal(typeof entry.absolute, 'string')\n\n    switch (entry.type) {\n      case 'Directory':\n      case 'GNUDumpDir':\n        if (entry.mode)\n          entry.mode = entry.mode | 0o700\n\n      case 'File':\n      case 'OldFile':\n      case 'ContiguousFile':\n      case 'Link':\n      case 'SymbolicLink':\n        return this[CHECKFS](entry)\n\n      case 'CharacterDevice':\n      case 'BlockDevice':\n      case 'FIFO':\n      default:\n        return this[UNSUPPORTED](entry)\n    }\n  }\n\n  [ONERROR] (er, entry) {\n    // Cwd has to exist, or else nothing works. That's serious.\n    // Other errors are warnings, which raise the error in strict\n    // mode, but otherwise continue on.\n    if (er.name === 'CwdError')\n      this.emit('error', er)\n    else {\n      this.warn('TAR_ENTRY_ERROR', er, {entry})\n      this[UNPEND]()\n      entry.resume()\n    }\n  }\n\n  [MKDIR] (dir, mode, cb) {\n    mkdir(normPath(dir), {\n      uid: this.uid,\n      gid: this.gid,\n      processUid: this.processUid,\n      processGid: this.processGid,\n      umask: this.processUmask,\n      preserve: this.preservePaths,\n      unlink: this.unlink,\n      cache: this.dirCache,\n      cwd: this.cwd,\n      mode: mode,\n      noChmod: this.noChmod,\n    }, cb)\n  }\n\n  [DOCHOWN] (entry) {\n    // in preserve owner mode, chown if the entry doesn't match process\n    // in set owner mode, chown if setting doesn't match process\n    return this.forceChown ||\n      this.preserveOwner &&\n      (typeof entry.uid === 'number' && entry.uid !== this.processUid ||\n        typeof entry.gid === 'number' && entry.gid !== this.processGid)\n      ||\n      (typeof this.uid === 'number' && this.uid !== this.processUid ||\n        typeof this.gid === 'number' && this.gid !== this.processGid)\n  }\n\n  [UID] (entry) {\n    return uint32(this.uid, entry.uid, this.processUid)\n  }\n\n  [GID] (entry) {\n    return uint32(this.gid, entry.gid, this.processGid)\n  }\n\n  [FILE] (entry, fullyDone) {\n    const mode = entry.mode & 0o7777 || this.fmode\n    const stream = new fsm.WriteStream(entry.absolute, {\n      flags: getFlag(entry.size),\n      mode: mode,\n      autoClose: false,\n    })\n    stream.on('error', er => {\n      if (stream.fd)\n        fs.close(stream.fd, () => {})\n\n      // flush all the data out so that we aren't left hanging\n      // if the error wasn't actually fatal.  otherwise the parse\n      // is blocked, and we never proceed.\n      stream.write = () => true\n      this[ONERROR](er, entry)\n      fullyDone()\n    })\n\n    let actions = 1\n    const done = er => {\n      if (er) {\n        /* istanbul ignore else - we should always have a fd by now */\n        if (stream.fd)\n          fs.close(stream.fd, () => {})\n\n        this[ONERROR](er, entry)\n        fullyDone()\n        return\n      }\n\n      if (--actions === 0) {\n        fs.close(stream.fd, er => {\n          if (er)\n            this[ONERROR](er, entry)\n          else\n            this[UNPEND]()\n          fullyDone()\n        })\n      }\n    }\n\n    stream.on('finish', _ => {\n      // if futimes fails, try utimes\n      // if utimes fails, fail with the original error\n      // same for fchown/chown\n      const abs = entry.absolute\n      const fd = stream.fd\n\n      if (entry.mtime && !this.noMtime) {\n        actions++\n        const atime = entry.atime || new Date()\n        const mtime = entry.mtime\n        fs.futimes(fd, atime, mtime, er =>\n          er ? fs.utimes(abs, atime, mtime, er2 => done(er2 && er))\n          : done())\n      }\n\n      if (this[DOCHOWN](entry)) {\n        actions++\n        const uid = this[UID](entry)\n        const gid = this[GID](entry)\n        fs.fchown(fd, uid, gid, er =>\n          er ? fs.chown(abs, uid, gid, er2 => done(er2 && er))\n          : done())\n      }\n\n      done()\n    })\n\n    const tx = this.transform ? this.transform(entry) || entry : entry\n    if (tx !== entry) {\n      tx.on('error', er => {\n        this[ONERROR](er, entry)\n        fullyDone()\n      })\n      entry.pipe(tx)\n    }\n    tx.pipe(stream)\n  }\n\n  [DIRECTORY] (entry, fullyDone) {\n    const mode = entry.mode & 0o7777 || this.dmode\n    this[MKDIR](entry.absolute, mode, er => {\n      if (er) {\n        this[ONERROR](er, entry)\n        fullyDone()\n        return\n      }\n\n      let actions = 1\n      const done = _ => {\n        if (--actions === 0) {\n          fullyDone()\n          this[UNPEND]()\n          entry.resume()\n        }\n      }\n\n      if (entry.mtime && !this.noMtime) {\n        actions++\n        fs.utimes(entry.absolute, entry.atime || new Date(), entry.mtime, done)\n      }\n\n      if (this[DOCHOWN](entry)) {\n        actions++\n        fs.chown(entry.absolute, this[UID](entry), this[GID](entry), done)\n      }\n\n      done()\n    })\n  }\n\n  [UNSUPPORTED] (entry) {\n    entry.unsupported = true\n    this.warn('TAR_ENTRY_UNSUPPORTED',\n      `unsupported entry type: ${entry.type}`, {entry})\n    entry.resume()\n  }\n\n  [SYMLINK] (entry, done) {\n    this[LINK](entry, entry.linkpath, 'symlink', done)\n  }\n\n  [HARDLINK] (entry, done) {\n    const linkpath = normPath(path.resolve(this.cwd, entry.linkpath))\n    this[LINK](entry, linkpath, 'link', done)\n  }\n\n  [PEND] () {\n    this[PENDING]++\n  }\n\n  [UNPEND] () {\n    this[PENDING]--\n    this[MAYBECLOSE]()\n  }\n\n  [SKIP] (entry) {\n    this[UNPEND]()\n    entry.resume()\n  }\n\n  // Check if we can reuse an existing filesystem entry safely and\n  // overwrite it, rather than unlinking and recreating\n  // Windows doesn't report a useful nlink, so we just never reuse entries\n  [ISREUSABLE] (entry, st) {\n    return entry.type === 'File' &&\n      !this.unlink &&\n      st.isFile() &&\n      st.nlink <= 1 &&\n      process.platform !== 'win32'\n  }\n\n  // check if a thing is there, and if so, try to clobber it\n  [CHECKFS] (entry) {\n    this[PEND]()\n    const paths = [entry.path]\n    if (entry.linkpath)\n      paths.push(entry.linkpath)\n    this.reservations.reserve(paths, done => this[CHECKFS2](entry, done))\n  }\n\n  [CHECKFS2] (entry, done) {\n    // if we are not creating a directory, and the path is in the dirCache,\n    // then that means we are about to delete the directory we created\n    // previously, and it is no longer going to be a directory, and neither\n    // is any of its children.\n    if (entry.type !== 'Directory')\n      pruneCache(this.dirCache, entry.absolute)\n\n    const checkCwd = () => {\n      this[MKDIR](this.cwd, this.dmode, er => {\n        if (er) {\n          this[ONERROR](er, entry)\n          done()\n          return\n        }\n        this[CHECKED_CWD] = true\n        start()\n      })\n    }\n\n    const start = () => {\n      if (entry.absolute !== this.cwd) {\n        const parent = normPath(path.dirname(entry.absolute))\n        if (parent !== this.cwd) {\n          return this[MKDIR](parent, this.dmode, er => {\n            if (er) {\n              this[ONERROR](er, entry)\n              done()\n              return\n            }\n            afterMakeParent()\n          })\n        }\n      }\n      afterMakeParent()\n    }\n\n    const afterMakeParent = () => {\n      fs.lstat(entry.absolute, (lstatEr, st) => {\n        if (st && (this.keep || this.newer && st.mtime > entry.mtime)) {\n          this[SKIP](entry)\n          done()\n          return\n        }\n        if (lstatEr || this[ISREUSABLE](entry, st))\n          return this[MAKEFS](null, entry, done)\n\n        if (st.isDirectory()) {\n          if (entry.type === 'Directory') {\n            const needChmod = !this.noChmod &&\n              entry.mode &&\n              (st.mode & 0o7777) !== entry.mode\n            const afterChmod = er => this[MAKEFS](er, entry, done)\n            if (!needChmod)\n              return afterChmod()\n            return fs.chmod(entry.absolute, entry.mode, afterChmod)\n          }\n          // not a dir entry, have to remove it.\n          if (entry.absolute !== this.cwd) {\n            return fs.rmdir(entry.absolute, er =>\n              this[MAKEFS](er, entry, done))\n          }\n        }\n\n        // not a dir, and not reusable\n        // don't remove if the cwd, we want that error\n        if (entry.absolute === this.cwd)\n          return this[MAKEFS](null, entry, done)\n\n        unlinkFile(entry.absolute, er =>\n          this[MAKEFS](er, entry, done))\n      })\n    }\n\n    if (this[CHECKED_CWD])\n      start()\n    else\n      checkCwd()\n  }\n\n  [MAKEFS] (er, entry, done) {\n    if (er) {\n      this[ONERROR](er, entry)\n      done()\n      return\n    }\n\n    switch (entry.type) {\n      case 'File':\n      case 'OldFile':\n      case 'ContiguousFile':\n        return this[FILE](entry, done)\n\n      case 'Link':\n        return this[HARDLINK](entry, done)\n\n      case 'SymbolicLink':\n        return this[SYMLINK](entry, done)\n\n      case 'Directory':\n      case 'GNUDumpDir':\n        return this[DIRECTORY](entry, done)\n    }\n  }\n\n  [LINK] (entry, linkpath, link, done) {\n    // XXX: get the type ('symlink' or 'junction') for windows\n    fs[link](linkpath, entry.absolute, er => {\n      if (er)\n        this[ONERROR](er, entry)\n      else {\n        this[UNPEND]()\n        entry.resume()\n      }\n      done()\n    })\n  }\n}\n\nconst callSync = fn => {\n  try {\n    return [null, fn()]\n  } catch (er) {\n    return [er, null]\n  }\n}\nclass UnpackSync extends Unpack {\n  [MAKEFS] (er, entry) {\n    return super[MAKEFS](er, entry, () => {})\n  }\n\n  [CHECKFS] (entry) {\n    if (entry.type !== 'Directory')\n      pruneCache(this.dirCache, entry.absolute)\n\n    if (!this[CHECKED_CWD]) {\n      const er = this[MKDIR](this.cwd, this.dmode)\n      if (er)\n        return this[ONERROR](er, entry)\n      this[CHECKED_CWD] = true\n    }\n\n    // don't bother to make the parent if the current entry is the cwd,\n    // we've already checked it.\n    if (entry.absolute !== this.cwd) {\n      const parent = normPath(path.dirname(entry.absolute))\n      if (parent !== this.cwd) {\n        const mkParent = this[MKDIR](parent, this.dmode)\n        if (mkParent)\n          return this[ONERROR](mkParent, entry)\n      }\n    }\n\n    const [lstatEr, st] = callSync(() => fs.lstatSync(entry.absolute))\n    if (st && (this.keep || this.newer && st.mtime > entry.mtime))\n      return this[SKIP](entry)\n\n    if (lstatEr || this[ISREUSABLE](entry, st))\n      return this[MAKEFS](null, entry)\n\n    if (st.isDirectory()) {\n      if (entry.type === 'Directory') {\n        const needChmod = !this.noChmod &&\n          entry.mode &&\n          (st.mode & 0o7777) !== entry.mode\n        const [er] = needChmod ? callSync(() => {\n          fs.chmodSync(entry.absolute, entry.mode)\n        }) : []\n        return this[MAKEFS](er, entry)\n      }\n      // not a dir entry, have to remove it\n      const [er] = callSync(() => fs.rmdirSync(entry.absolute))\n      this[MAKEFS](er, entry)\n    }\n\n    // not a dir, and not reusable.\n    // don't remove if it's the cwd, since we want that error.\n    const [er] = entry.absolute === this.cwd ? []\n      : callSync(() => unlinkFileSync(entry.absolute))\n    this[MAKEFS](er, entry)\n  }\n\n  [FILE] (entry, _) {\n    const mode = entry.mode & 0o7777 || this.fmode\n\n    const oner = er => {\n      let closeError\n      try {\n        fs.closeSync(fd)\n      } catch (e) {\n        closeError = e\n      }\n      if (er || closeError)\n        this[ONERROR](er || closeError, entry)\n    }\n\n    let fd\n    try {\n      fd = fs.openSync(entry.absolute, getFlag(entry.size), mode)\n    } catch (er) {\n      return oner(er)\n    }\n    const tx = this.transform ? this.transform(entry) || entry : entry\n    if (tx !== entry) {\n      tx.on('error', er => this[ONERROR](er, entry))\n      entry.pipe(tx)\n    }\n\n    tx.on('data', chunk => {\n      try {\n        fs.writeSync(fd, chunk, 0, chunk.length)\n      } catch (er) {\n        oner(er)\n      }\n    })\n\n    tx.on('end', _ => {\n      let er = null\n      // try both, falling futimes back to utimes\n      // if either fails, handle the first error\n      if (entry.mtime && !this.noMtime) {\n        const atime = entry.atime || new Date()\n        const mtime = entry.mtime\n        try {\n          fs.futimesSync(fd, atime, mtime)\n        } catch (futimeser) {\n          try {\n            fs.utimesSync(entry.absolute, atime, mtime)\n          } catch (utimeser) {\n            er = futimeser\n          }\n        }\n      }\n\n      if (this[DOCHOWN](entry)) {\n        const uid = this[UID](entry)\n        const gid = this[GID](entry)\n\n        try {\n          fs.fchownSync(fd, uid, gid)\n        } catch (fchowner) {\n          try {\n            fs.chownSync(entry.absolute, uid, gid)\n          } catch (chowner) {\n            er = er || fchowner\n          }\n        }\n      }\n\n      oner(er)\n    })\n  }\n\n  [DIRECTORY] (entry, _) {\n    const mode = entry.mode & 0o7777 || this.dmode\n    const er = this[MKDIR](entry.absolute, mode)\n    if (er)\n      return this[ONERROR](er, entry)\n    if (entry.mtime && !this.noMtime) {\n      try {\n        fs.utimesSync(entry.absolute, entry.atime || new Date(), entry.mtime)\n      } catch (er) {}\n    }\n    if (this[DOCHOWN](entry)) {\n      try {\n        fs.chownSync(entry.absolute, this[UID](entry), this[GID](entry))\n      } catch (er) {}\n    }\n    entry.resume()\n  }\n\n  [MKDIR] (dir, mode) {\n    try {\n      return mkdir.sync(normPath(dir), {\n        uid: this.uid,\n        gid: this.gid,\n        processUid: this.processUid,\n        processGid: this.processGid,\n        umask: this.processUmask,\n        preserve: this.preservePaths,\n        unlink: this.unlink,\n        cache: this.dirCache,\n        cwd: this.cwd,\n        mode: mode,\n      })\n    } catch (er) {\n      return er\n    }\n  }\n\n  [LINK] (entry, linkpath, link, _) {\n    try {\n      fs[link + 'Sync'](linkpath, entry.absolute)\n      entry.resume()\n    } catch (er) {\n      return this[ONERROR](er, entry)\n    }\n  }\n}\n\nUnpack.Sync = UnpackSync\nmodule.exports = Unpack\n","'use strict'\n\n// tar -u\n\nconst hlo = require('./high-level-opt.js')\nconst r = require('./replace.js')\n// just call tar.r with the filter and mtimeCache\n\nmodule.exports = (opt_, files, cb) => {\n  const opt = hlo(opt_)\n\n  if (!opt.file)\n    throw new TypeError('file is required')\n\n  if (opt.gzip)\n    throw new TypeError('cannot append to compressed archives')\n\n  if (!files || !Array.isArray(files) || !files.length)\n    throw new TypeError('no files or directories specified')\n\n  files = Array.from(files)\n\n  mtimeFilter(opt)\n  return r(opt, files, cb)\n}\n\nconst mtimeFilter = opt => {\n  const filter = opt.filter\n\n  if (!opt.mtimeCache)\n    opt.mtimeCache = new Map()\n\n  opt.filter = filter ? (path, stat) =>\n    filter(path, stat) && !(opt.mtimeCache.get(path) > stat.mtime)\n    : (path, stat) => !(opt.mtimeCache.get(path) > stat.mtime)\n}\n","'use strict'\nmodule.exports = Base => class extends Base {\n  warn (code, message, data = {}) {\n    if (this.file)\n      data.file = this.file\n    if (this.cwd)\n      data.cwd = this.cwd\n    data.code = message instanceof Error && message.code || code\n    data.tarCode = code\n    if (!this.strict && data.recoverable !== false) {\n      if (message instanceof Error) {\n        data = Object.assign(message, data)\n        message = message.message\n      }\n      this.emit('warn', data.tarCode, message, data)\n    } else if (message instanceof Error)\n      this.emit('error', Object.assign(message, data))\n    else\n      this.emit('error', Object.assign(new Error(`${code}: ${message}`), data))\n  }\n}\n","'use strict'\n\n// When writing files on Windows, translate the characters to their\n// 0xf000 higher-encoded versions.\n\nconst raw = [\n  '|',\n  '<',\n  '>',\n  '?',\n  ':',\n]\n\nconst win = raw.map(char =>\n  String.fromCharCode(0xf000 + char.charCodeAt(0)))\n\nconst toWin = new Map(raw.map((char, i) => [char, win[i]]))\nconst toRaw = new Map(win.map((char, i) => [char, raw[i]]))\n\nmodule.exports = {\n  encode: s => raw.reduce((s, c) => s.split(c).join(toWin.get(c)), s),\n  decode: s => win.reduce((s, c) => s.split(c).join(toRaw.get(c)), s),\n}\n","'use strict'\nconst MiniPass = require('minipass')\nconst Pax = require('./pax.js')\nconst Header = require('./header.js')\nconst fs = require('fs')\nconst path = require('path')\nconst normPath = require('./normalize-windows-path.js')\nconst stripSlash = require('./strip-trailing-slashes.js')\n\nconst prefixPath = (path, prefix) => {\n  if (!prefix)\n    return normPath(path)\n  path = normPath(path).replace(/^\\.(\\/|$)/, '')\n  return stripSlash(prefix) + '/' + path\n}\n\nconst maxReadSize = 16 * 1024 * 1024\nconst PROCESS = Symbol('process')\nconst FILE = Symbol('file')\nconst DIRECTORY = Symbol('directory')\nconst SYMLINK = Symbol('symlink')\nconst HARDLINK = Symbol('hardlink')\nconst HEADER = Symbol('header')\nconst READ = Symbol('read')\nconst LSTAT = Symbol('lstat')\nconst ONLSTAT = Symbol('onlstat')\nconst ONREAD = Symbol('onread')\nconst ONREADLINK = Symbol('onreadlink')\nconst OPENFILE = Symbol('openfile')\nconst ONOPENFILE = Symbol('onopenfile')\nconst CLOSE = Symbol('close')\nconst MODE = Symbol('mode')\nconst AWAITDRAIN = Symbol('awaitDrain')\nconst ONDRAIN = Symbol('ondrain')\nconst PREFIX = Symbol('prefix')\nconst HAD_ERROR = Symbol('hadError')\nconst warner = require('./warn-mixin.js')\nconst winchars = require('./winchars.js')\nconst stripAbsolutePath = require('./strip-absolute-path.js')\n\nconst modeFix = require('./mode-fix.js')\n\nconst WriteEntry = warner(class WriteEntry extends MiniPass {\n  constructor (p, opt) {\n    opt = opt || {}\n    super(opt)\n    if (typeof p !== 'string')\n      throw new TypeError('path is required')\n    this.path = normPath(p)\n    // suppress atime, ctime, uid, gid, uname, gname\n    this.portable = !!opt.portable\n    // until node has builtin pwnam functions, this'll have to do\n    this.myuid = process.getuid && process.getuid() || 0\n    this.myuser = process.env.USER || ''\n    this.maxReadSize = opt.maxReadSize || maxReadSize\n    this.linkCache = opt.linkCache || new Map()\n    this.statCache = opt.statCache || new Map()\n    this.preservePaths = !!opt.preservePaths\n    this.cwd = normPath(opt.cwd || process.cwd())\n    this.strict = !!opt.strict\n    this.noPax = !!opt.noPax\n    this.noMtime = !!opt.noMtime\n    this.mtime = opt.mtime || null\n    this.prefix = opt.prefix ? normPath(opt.prefix) : null\n\n    this.fd = null\n    this.blockLen = null\n    this.blockRemain = null\n    this.buf = null\n    this.offset = null\n    this.length = null\n    this.pos = null\n    this.remain = null\n\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n\n    let pathWarn = false\n    if (!this.preservePaths) {\n      const [root, stripped] = stripAbsolutePath(this.path)\n      if (root) {\n        this.path = stripped\n        pathWarn = root\n      }\n    }\n\n    this.win32 = !!opt.win32 || process.platform === 'win32'\n    if (this.win32) {\n      // force the \\ to / normalization, since we might not *actually*\n      // be on windows, but want \\ to be considered a path separator.\n      this.path = winchars.decode(this.path.replace(/\\\\/g, '/'))\n      p = p.replace(/\\\\/g, '/')\n    }\n\n    this.absolute = normPath(opt.absolute || path.resolve(this.cwd, p))\n\n    if (this.path === '')\n      this.path = './'\n\n    if (pathWarn) {\n      this.warn('TAR_ENTRY_INFO', `stripping ${pathWarn} from absolute path`, {\n        entry: this,\n        path: pathWarn + this.path,\n      })\n    }\n\n    if (this.statCache.has(this.absolute))\n      this[ONLSTAT](this.statCache.get(this.absolute))\n    else\n      this[LSTAT]()\n  }\n\n  emit (ev, ...data) {\n    if (ev === 'error')\n      this[HAD_ERROR] = true\n    return super.emit(ev, ...data)\n  }\n\n  [LSTAT] () {\n    fs.lstat(this.absolute, (er, stat) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONLSTAT](stat)\n    })\n  }\n\n  [ONLSTAT] (stat) {\n    this.statCache.set(this.absolute, stat)\n    this.stat = stat\n    if (!stat.isFile())\n      stat.size = 0\n    this.type = getType(stat)\n    this.emit('stat', stat)\n    this[PROCESS]()\n  }\n\n  [PROCESS] () {\n    switch (this.type) {\n      case 'File': return this[FILE]()\n      case 'Directory': return this[DIRECTORY]()\n      case 'SymbolicLink': return this[SYMLINK]()\n      // unsupported types are ignored.\n      default: return this.end()\n    }\n  }\n\n  [MODE] (mode) {\n    return modeFix(mode, this.type === 'Directory', this.portable)\n  }\n\n  [PREFIX] (path) {\n    return prefixPath(path, this.prefix)\n  }\n\n  [HEADER] () {\n    if (this.type === 'Directory' && this.portable)\n      this.noMtime = true\n\n    this.header = new Header({\n      path: this[PREFIX](this.path),\n      // only apply the prefix to hard links.\n      linkpath: this.type === 'Link' ? this[PREFIX](this.linkpath)\n      : this.linkpath,\n      // only the permissions and setuid/setgid/sticky bitflags\n      // not the higher-order bits that specify file type\n      mode: this[MODE](this.stat.mode),\n      uid: this.portable ? null : this.stat.uid,\n      gid: this.portable ? null : this.stat.gid,\n      size: this.stat.size,\n      mtime: this.noMtime ? null : this.mtime || this.stat.mtime,\n      type: this.type,\n      uname: this.portable ? null :\n      this.stat.uid === this.myuid ? this.myuser : '',\n      atime: this.portable ? null : this.stat.atime,\n      ctime: this.portable ? null : this.stat.ctime,\n    })\n\n    if (this.header.encode() && !this.noPax) {\n      super.write(new Pax({\n        atime: this.portable ? null : this.header.atime,\n        ctime: this.portable ? null : this.header.ctime,\n        gid: this.portable ? null : this.header.gid,\n        mtime: this.noMtime ? null : this.mtime || this.header.mtime,\n        path: this[PREFIX](this.path),\n        linkpath: this.type === 'Link' ? this[PREFIX](this.linkpath)\n        : this.linkpath,\n        size: this.header.size,\n        uid: this.portable ? null : this.header.uid,\n        uname: this.portable ? null : this.header.uname,\n        dev: this.portable ? null : this.stat.dev,\n        ino: this.portable ? null : this.stat.ino,\n        nlink: this.portable ? null : this.stat.nlink,\n      }).encode())\n    }\n    super.write(this.header.block)\n  }\n\n  [DIRECTORY] () {\n    if (this.path.substr(-1) !== '/')\n      this.path += '/'\n    this.stat.size = 0\n    this[HEADER]()\n    this.end()\n  }\n\n  [SYMLINK] () {\n    fs.readlink(this.absolute, (er, linkpath) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONREADLINK](linkpath)\n    })\n  }\n\n  [ONREADLINK] (linkpath) {\n    this.linkpath = normPath(linkpath)\n    this[HEADER]()\n    this.end()\n  }\n\n  [HARDLINK] (linkpath) {\n    this.type = 'Link'\n    this.linkpath = normPath(path.relative(this.cwd, linkpath))\n    this.stat.size = 0\n    this[HEADER]()\n    this.end()\n  }\n\n  [FILE] () {\n    if (this.stat.nlink > 1) {\n      const linkKey = this.stat.dev + ':' + this.stat.ino\n      if (this.linkCache.has(linkKey)) {\n        const linkpath = this.linkCache.get(linkKey)\n        if (linkpath.indexOf(this.cwd) === 0)\n          return this[HARDLINK](linkpath)\n      }\n      this.linkCache.set(linkKey, this.absolute)\n    }\n\n    this[HEADER]()\n    if (this.stat.size === 0)\n      return this.end()\n\n    this[OPENFILE]()\n  }\n\n  [OPENFILE] () {\n    fs.open(this.absolute, 'r', (er, fd) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONOPENFILE](fd)\n    })\n  }\n\n  [ONOPENFILE] (fd) {\n    this.fd = fd\n    if (this[HAD_ERROR])\n      return this[CLOSE]()\n\n    this.blockLen = 512 * Math.ceil(this.stat.size / 512)\n    this.blockRemain = this.blockLen\n    const bufLen = Math.min(this.blockLen, this.maxReadSize)\n    this.buf = Buffer.allocUnsafe(bufLen)\n    this.offset = 0\n    this.pos = 0\n    this.remain = this.stat.size\n    this.length = this.buf.length\n    this[READ]()\n  }\n\n  [READ] () {\n    const { fd, buf, offset, length, pos } = this\n    fs.read(fd, buf, offset, length, pos, (er, bytesRead) => {\n      if (er) {\n        // ignoring the error from close(2) is a bad practice, but at\n        // this point we already have an error, don't need another one\n        return this[CLOSE](() => this.emit('error', er))\n      }\n      this[ONREAD](bytesRead)\n    })\n  }\n\n  [CLOSE] (cb) {\n    fs.close(this.fd, cb)\n  }\n\n  [ONREAD] (bytesRead) {\n    if (bytesRead <= 0 && this.remain > 0) {\n      const er = new Error('encountered unexpected EOF')\n      er.path = this.absolute\n      er.syscall = 'read'\n      er.code = 'EOF'\n      return this[CLOSE](() => this.emit('error', er))\n    }\n\n    if (bytesRead > this.remain) {\n      const er = new Error('did not encounter expected EOF')\n      er.path = this.absolute\n      er.syscall = 'read'\n      er.code = 'EOF'\n      return this[CLOSE](() => this.emit('error', er))\n    }\n\n    // null out the rest of the buffer, if we could fit the block padding\n    // at the end of this loop, we've incremented bytesRead and this.remain\n    // to be incremented up to the blockRemain level, as if we had expected\n    // to get a null-padded file, and read it until the end.  then we will\n    // decrement both remain and blockRemain by bytesRead, and know that we\n    // reached the expected EOF, without any null buffer to append.\n    if (bytesRead === this.remain) {\n      for (let i = bytesRead; i < this.length && bytesRead < this.blockRemain; i++) {\n        this.buf[i + this.offset] = 0\n        bytesRead++\n        this.remain++\n      }\n    }\n\n    const writeBuf = this.offset === 0 && bytesRead === this.buf.length ?\n      this.buf : this.buf.slice(this.offset, this.offset + bytesRead)\n\n    const flushed = this.write(writeBuf)\n    if (!flushed)\n      this[AWAITDRAIN](() => this[ONDRAIN]())\n    else\n      this[ONDRAIN]()\n  }\n\n  [AWAITDRAIN] (cb) {\n    this.once('drain', cb)\n  }\n\n  write (writeBuf) {\n    if (this.blockRemain < writeBuf.length) {\n      const er = new Error('writing more data than expected')\n      er.path = this.absolute\n      return this.emit('error', er)\n    }\n    this.remain -= writeBuf.length\n    this.blockRemain -= writeBuf.length\n    this.pos += writeBuf.length\n    this.offset += writeBuf.length\n    return super.write(writeBuf)\n  }\n\n  [ONDRAIN] () {\n    if (!this.remain) {\n      if (this.blockRemain)\n        super.write(Buffer.alloc(this.blockRemain))\n      return this[CLOSE](er => er ? this.emit('error', er) : this.end())\n    }\n\n    if (this.offset >= this.length) {\n      // if we only have a smaller bit left to read, alloc a smaller buffer\n      // otherwise, keep it the same length it was before.\n      this.buf = Buffer.allocUnsafe(Math.min(this.blockRemain, this.buf.length))\n      this.offset = 0\n    }\n    this.length = this.buf.length - this.offset\n    this[READ]()\n  }\n})\n\nclass WriteEntrySync extends WriteEntry {\n  [LSTAT] () {\n    this[ONLSTAT](fs.lstatSync(this.absolute))\n  }\n\n  [SYMLINK] () {\n    this[ONREADLINK](fs.readlinkSync(this.absolute))\n  }\n\n  [OPENFILE] () {\n    this[ONOPENFILE](fs.openSync(this.absolute, 'r'))\n  }\n\n  [READ] () {\n    let threw = true\n    try {\n      const { fd, buf, offset, length, pos } = this\n      const bytesRead = fs.readSync(fd, buf, offset, length, pos)\n      this[ONREAD](bytesRead)\n      threw = false\n    } finally {\n      // ignoring the error from close(2) is a bad practice, but at\n      // this point we already have an error, don't need another one\n      if (threw) {\n        try {\n          this[CLOSE](() => {})\n        } catch (er) {}\n      }\n    }\n  }\n\n  [AWAITDRAIN] (cb) {\n    cb()\n  }\n\n  [CLOSE] (cb) {\n    fs.closeSync(this.fd)\n    cb()\n  }\n}\n\nconst WriteEntryTar = warner(class WriteEntryTar extends MiniPass {\n  constructor (readEntry, opt) {\n    opt = opt || {}\n    super(opt)\n    this.preservePaths = !!opt.preservePaths\n    this.portable = !!opt.portable\n    this.strict = !!opt.strict\n    this.noPax = !!opt.noPax\n    this.noMtime = !!opt.noMtime\n\n    this.readEntry = readEntry\n    this.type = readEntry.type\n    if (this.type === 'Directory' && this.portable)\n      this.noMtime = true\n\n    this.prefix = opt.prefix || null\n\n    this.path = normPath(readEntry.path)\n    this.mode = this[MODE](readEntry.mode)\n    this.uid = this.portable ? null : readEntry.uid\n    this.gid = this.portable ? null : readEntry.gid\n    this.uname = this.portable ? null : readEntry.uname\n    this.gname = this.portable ? null : readEntry.gname\n    this.size = readEntry.size\n    this.mtime = this.noMtime ? null : opt.mtime || readEntry.mtime\n    this.atime = this.portable ? null : readEntry.atime\n    this.ctime = this.portable ? null : readEntry.ctime\n    this.linkpath = normPath(readEntry.linkpath)\n\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n\n    let pathWarn = false\n    if (!this.preservePaths) {\n      const [root, stripped] = stripAbsolutePath(this.path)\n      if (root) {\n        this.path = stripped\n        pathWarn = root\n      }\n    }\n\n    this.remain = readEntry.size\n    this.blockRemain = readEntry.startBlockSize\n\n    this.header = new Header({\n      path: this[PREFIX](this.path),\n      linkpath: this.type === 'Link' ? this[PREFIX](this.linkpath)\n      : this.linkpath,\n      // only the permissions and setuid/setgid/sticky bitflags\n      // not the higher-order bits that specify file type\n      mode: this.mode,\n      uid: this.portable ? null : this.uid,\n      gid: this.portable ? null : this.gid,\n      size: this.size,\n      mtime: this.noMtime ? null : this.mtime,\n      type: this.type,\n      uname: this.portable ? null : this.uname,\n      atime: this.portable ? null : this.atime,\n      ctime: this.portable ? null : this.ctime,\n    })\n\n    if (pathWarn) {\n      this.warn('TAR_ENTRY_INFO', `stripping ${pathWarn} from absolute path`, {\n        entry: this,\n        path: pathWarn + this.path,\n      })\n    }\n\n    if (this.header.encode() && !this.noPax) {\n      super.write(new Pax({\n        atime: this.portable ? null : this.atime,\n        ctime: this.portable ? null : this.ctime,\n        gid: this.portable ? null : this.gid,\n        mtime: this.noMtime ? null : this.mtime,\n        path: this[PREFIX](this.path),\n        linkpath: this.type === 'Link' ? this[PREFIX](this.linkpath)\n        : this.linkpath,\n        size: this.size,\n        uid: this.portable ? null : this.uid,\n        uname: this.portable ? null : this.uname,\n        dev: this.portable ? null : this.readEntry.dev,\n        ino: this.portable ? null : this.readEntry.ino,\n        nlink: this.portable ? null : this.readEntry.nlink,\n      }).encode())\n    }\n\n    super.write(this.header.block)\n    readEntry.pipe(this)\n  }\n\n  [PREFIX] (path) {\n    return prefixPath(path, this.prefix)\n  }\n\n  [MODE] (mode) {\n    return modeFix(mode, this.type === 'Directory', this.portable)\n  }\n\n  write (data) {\n    const writeLen = data.length\n    if (writeLen > this.blockRemain)\n      throw new Error('writing more to entry than is appropriate')\n    this.blockRemain -= writeLen\n    return super.write(data)\n  }\n\n  end () {\n    if (this.blockRemain)\n      super.write(Buffer.alloc(this.blockRemain))\n    return super.end()\n  }\n})\n\nWriteEntry.Sync = WriteEntrySync\nWriteEntry.Tar = WriteEntryTar\n\nconst getType = stat =>\n  stat.isFile() ? 'File'\n  : stat.isDirectory() ? 'Directory'\n  : stat.isSymbolicLink() ? 'SymbolicLink'\n  : 'Unsupported'\n\nmodule.exports = WriteEntry\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","export const TOKEN_REF = '$jsii.byref';\nexport const TOKEN_INTERFACES = '$jsii.interfaces';\nexport const TOKEN_DATE = '$jsii.date';\nexport const TOKEN_ENUM = '$jsii.enum';\nexport const TOKEN_MAP = '$jsii.map';\nexport const TOKEN_STRUCT = '$jsii.struct';\n\nexport interface ObjRef {\n  readonly [TOKEN_REF]: string;\n}\n\nexport interface AnnotatedObjRef extends ObjRef {\n  [TOKEN_INTERFACES]?: readonly string[];\n}\n\nexport function isObjRef(value: any): value is ObjRef {\n  return typeof value === 'object' && value !== null && TOKEN_REF in value;\n}\n\nexport interface WireDate {\n  readonly [TOKEN_DATE]: string;\n}\n\nexport function isWireDate(value: any): value is WireDate {\n  return typeof value === 'object' && value !== null && TOKEN_DATE in value;\n}\n\nexport interface WireEnum {\n  readonly [TOKEN_ENUM]: string;\n}\n\nexport function isWireEnum(value: any): value is WireEnum {\n  return typeof value === 'object' && value !== null && TOKEN_ENUM in value;\n}\n\nexport interface WireMap {\n  readonly [TOKEN_MAP]: { readonly [key: string]: any };\n}\n\nexport function isWireMap(value: any): value is WireMap {\n  return typeof value === 'object' && value !== null && TOKEN_MAP in value;\n}\n\nexport interface WireStruct {\n  readonly [TOKEN_STRUCT]: {\n    readonly fqn: string;\n    readonly data: { [key: string]: any };\n  };\n}\n\nexport function isWireStruct(value: any): value is WireStruct {\n  return typeof value === 'object' && value !== null && TOKEN_STRUCT in value;\n}\n\nexport type Override = MethodOverride | PropertyOverride;\n\nexport interface MethodOverride {\n  readonly method: string;\n  readonly cookie?: string;\n}\n\nexport function isMethodOverride(value: Override): value is MethodOverride {\n  return (value as any).method != null; // Python passes \"null\"\n}\n\nexport interface PropertyOverride {\n  readonly property: string;\n  readonly cookie?: string;\n}\n\nexport function isPropertyOverride(value: Override): value is PropertyOverride {\n  return (value as any).property != null; // Python passes \"null\"\n}\n\nexport interface Callback {\n  readonly cbid: string;\n  readonly cookie: string | undefined;\n  readonly invoke?: InvokeRequest;\n  readonly get?: GetRequest;\n  readonly set?: SetRequest;\n}\n\nexport interface HelloResponse {\n  readonly hello: string;\n}\n\nexport interface LoadRequest {\n  /** The name of the assembly */\n  readonly name: string;\n\n  /** Assembly version */\n  readonly version: string;\n\n  /** The tarball of the package */\n  readonly tarball: string;\n}\n\nexport interface LoadResponse {\n  readonly assembly: string;\n  readonly types: number;\n}\n\nexport interface InvokeScriptRequest {\n  readonly assembly: string;\n  readonly script: string;\n  readonly args?: string[];\n}\n\nexport interface InvokeScriptResponse {\n  readonly status: number | null;\n  readonly stdout: Buffer;\n  readonly stderr: Buffer;\n  readonly signal: string | null;\n}\n\nexport interface CreateRequest {\n  /**\n   * The FQN of the class of which an instance is requested (or \"Object\")\n   */\n  readonly fqn: string;\n\n  /**\n   * The FQNs of interfaces the instance implements, if any. Declaring\n   * interfaces that the class denoted by `fqn` implements is not necessary.\n   * This means that memebers of interfaces found in this property should\n   * declare members that are found in the `overrides` property.\n   */\n  readonly interfaces?: string[];\n\n  /**\n   * Arguments to pass to the constructor of `fqn`. (\"Object\" accepts none)\n   */\n  readonly args?: any[];\n\n  /**\n   * Declarations of method overrides that should trigger callbacks\n   */\n  readonly overrides?: Override[];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CreateResponse extends AnnotatedObjRef {}\n\nexport interface DelRequest {\n  readonly objref: ObjRef;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DelResponse {}\n\nexport interface GetRequest {\n  readonly objref: ObjRef;\n  readonly property: string;\n}\n\nexport interface StaticGetRequest {\n  readonly fqn: string;\n  readonly property: string;\n}\n\nexport interface GetResponse {\n  readonly value: any;\n}\n\nexport interface StaticSetRequest {\n  readonly fqn: string;\n  readonly property: string;\n  readonly value: any;\n}\n\nexport interface SetRequest {\n  readonly objref: ObjRef;\n  readonly property: string;\n  readonly value: any;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SetResponse {}\n\nexport interface StaticInvokeRequest {\n  readonly fqn: string;\n  readonly method: string;\n  readonly args?: any[];\n}\n\nexport interface InvokeRequest {\n  readonly objref: ObjRef;\n  readonly method: string;\n  readonly args?: any[];\n}\n\nexport interface InvokeResponse {\n  readonly result: any;\n}\n\nexport interface BeginRequest {\n  readonly objref: ObjRef;\n  readonly method: string;\n  readonly args?: any[];\n}\n\nexport interface BeginResponse {\n  readonly promiseid: string;\n}\n\nexport interface EndRequest {\n  readonly promiseid: string;\n}\n\nexport interface EndResponse {\n  readonly result: any;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CallbacksRequest {}\n\nexport interface CallbacksResponse {\n  readonly callbacks: Callback[];\n}\n\nexport interface CompleteRequest {\n  readonly cbid: string;\n  readonly err?: string;\n  readonly result?: any;\n}\n\nexport interface CompleteResponse {\n  readonly cbid: string;\n}\n\nexport interface NamingRequest {\n  readonly assembly: string;\n}\n\nexport interface NamingResponse {\n  readonly naming: {\n    readonly [language: string]: { readonly [key: string]: any } | undefined;\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface StatsRequest {}\n\nexport interface StatsResponse {\n  readonly objectCount: number;\n}\n\nexport type KernelRequest =\n  | LoadRequest\n  | CreateRequest\n  | DelRequest\n  | GetRequest\n  | SetRequest\n  | InvokeRequest\n  | BeginRequest\n  | EndRequest\n  | CallbacksRequest\n  | CompleteRequest\n  | NamingRequest\n  | StatsRequest;\n\nexport type KernelResponse =\n  | HelloResponse\n  | LoadResponse\n  | CreateResponse\n  | DelResponse\n  | GetResponse\n  | SetResponse\n  | InvokeResponse\n  | BeginResponse\n  | EndResponse\n  | CallbacksResponse\n  | CompleteResponse\n  | NamingResponse\n  | StatsResponse;\n\nexport interface OkayResponse {\n  readonly ok: any;\n}\n\nexport interface ErrorResponse {\n  readonly error: string;\n  readonly stack?: string;\n}\n","export * from './kernel';\n\nimport * as api from './api';\nexport { api };\n","import * as spec from '@jsii/spec';\nimport * as cp from 'child_process';\nimport * as fs from 'fs-extra';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as tar from 'tar';\nimport * as vm from 'vm';\n\nimport * as api from './api';\nimport { TOKEN_REF } from './api';\nimport { ObjectTable, tagJsiiConstructor } from './objects';\nimport * as onExit from './on-exit';\nimport * as wire from './serialization';\n\nexport class Kernel {\n  /**\n   * Set to true for verbose debugging.\n   */\n  public traceEnabled = false;\n\n  private assemblies: { [name: string]: Assembly } = {};\n  private readonly objects = new ObjectTable(this._typeInfoForFqn.bind(this));\n  private cbs: { [cbid: string]: Callback } = {};\n  private waiting: { [cbid: string]: Callback } = {};\n  private promises: { [prid: string]: AsyncInvocation } = {};\n  private nextid = 20000; // incrementing counter for objid, cbid, promiseid\n  private syncInProgress?: string; // forbids async calls (begin) while processing sync calls (get/set/invoke)\n  private installDir?: string;\n\n  private readonly sandbox: vm.Context;\n\n  /**\n   * Creates a jsii kernel object.\n   *\n   * @param callbackHandler This handler is invoked when a synchronous callback is called.\n   *                        It's responsibility is to execute the callback and return it's\n   *                        result (or throw an error).\n   */\n  public constructor(public callbackHandler: (callback: api.Callback) => any) {\n    // `setImmediate` is required for tests to pass (it is otherwise\n    // impossible to wait for in-VM promises to complete)\n\n    // `Buffer` is required when using simple-resource-bundler.\n\n    // HACK: when we webpack @jsii/runtime, all \"require\" statements get transpiled,\n    // so modules can be resolved within the pack. However, here we actually want to\n    // let loaded modules to use the native node \"require\" method.\n    // I wonder if webpack has some pragma that allows opting-out at certain points\n    // in the code.\n    // eslint-disable-next-line @typescript-eslint/no-require-imports,@typescript-eslint/no-var-requires\n    const moduleLoad = require('module').Module._load;\n    const nodeRequire = (p: string) => moduleLoad(p, module, false);\n\n    this.sandbox = vm.createContext({\n      Buffer, // to use simple-resource-bundler\n      setImmediate, // async tests\n      require: nodeRequire, // modules need to \"require\"\n    });\n  }\n\n  public load(req: api.LoadRequest): api.LoadResponse {\n    this._debug('load', req);\n\n    if ('assembly' in req) {\n      throw new Error(\n        '`assembly` field is deprecated for \"load\", use `name`, `version` and `tarball` instead',\n      );\n    }\n\n    const pkgname = req.name;\n    const pkgver = req.version;\n\n    // check if we already have such a module\n    const packageDir = this._getPackageDir(pkgname);\n    if (fs.pathExistsSync(packageDir)) {\n      // module exists, verify version\n      const epkg = fs.readJsonSync(path.join(packageDir, 'package.json'));\n      if (epkg.version !== pkgver) {\n        throw new Error(\n          `Multiple versions ${pkgver} and ${epkg.version} of the ` +\n            `package '${pkgname}' cannot be loaded together since this is unsupported by ` +\n            'some runtime environments',\n        );\n      }\n\n      // same version, no-op\n      this._debug('look up already-loaded assembly', pkgname);\n      const assm = this.assemblies[pkgname];\n\n      return {\n        assembly: assm.metadata.name,\n        types: Object.keys(assm.metadata.types ?? {}).length,\n      };\n    }\n\n    // Create the install directory (there may be several path components for @scoped/packages)\n    fs.mkdirpSync(packageDir);\n\n    // Force umask to have npm-install-like permissions\n    const originalUmask = process.umask(0o022);\n    try {\n      // untar the archive to its final location\n      tar.extract({\n        cwd: packageDir,\n        file: req.tarball,\n        strict: true,\n        strip: 1, // Removes the 'package/' path element from entries\n        sync: true,\n        unlink: true,\n      });\n    } finally {\n      // Reset umask to the initial value\n      process.umask(originalUmask);\n    }\n\n    // read .jsii metadata from the root of the package\n    const jsiiMetadataFile = path.join(packageDir, spec.SPEC_FILE_NAME);\n    if (!fs.pathExistsSync(jsiiMetadataFile)) {\n      throw new Error(\n        `Package tarball ${req.tarball} must have a file named ${spec.SPEC_FILE_NAME} at the root`,\n      );\n    }\n    const assmSpec = fs.readJsonSync(jsiiMetadataFile) as spec.Assembly;\n\n    // load the module and capture it's closure\n    const closure = this._execute(\n      `require(String.raw\\`${packageDir}\\`)`,\n      packageDir,\n    );\n    const assm = new Assembly(assmSpec, closure);\n    this._addAssembly(assm);\n\n    return {\n      assembly: assmSpec.name,\n      types: Object.keys(assmSpec.types ?? {}).length,\n    };\n  }\n\n  public invokeBinScript(\n    req: api.InvokeScriptRequest,\n  ): api.InvokeScriptResponse {\n    const packageDir = this._getPackageDir(req.assembly);\n    if (fs.pathExistsSync(packageDir)) {\n      // module exists, verify version\n      const epkg = fs.readJsonSync(path.join(packageDir, 'package.json'));\n\n      if (!epkg.bin) {\n        throw new Error('There is no bin scripts defined for this package.');\n      }\n\n      const scriptPath = epkg.bin[req.script];\n\n      if (!epkg.bin) {\n        throw new Error(`Script with name ${req.script} was not defined.`);\n      }\n\n      const result = cp.spawnSync(\n        path.join(packageDir, scriptPath),\n        req.args ?? [],\n        {\n          encoding: 'utf-8',\n          env: {\n            ...process.env,\n            // Make sure the current NODE_OPTIONS are honored if we shell out to node\n            NODE_OPTIONS: process.execArgv.join(' '),\n            // Make sure \"this\" node is ahead of $PATH just in case\n            PATH: `${path.dirname(process.execPath)}:${process.env.PATH}`,\n          },\n          shell: true,\n        },\n      );\n\n      return {\n        stdout: result.stdout,\n        stderr: result.stderr,\n        status: result.status,\n        signal: result.signal,\n      };\n    }\n    throw new Error(`Package with name ${req.assembly} was not loaded.`);\n  }\n\n  public create(req: api.CreateRequest): api.CreateResponse {\n    return this._create(req);\n  }\n\n  public del(req: api.DelRequest): api.DelResponse {\n    const { objref } = req;\n\n    this._debug('del', objref);\n    this.objects.deleteObject(objref);\n\n    return {};\n  }\n\n  public sget(req: api.StaticGetRequest): api.GetResponse {\n    const { fqn, property } = req;\n    const symbol = `${fqn}.${property}`;\n    this._debug('sget', symbol);\n    const ti = this._typeInfoForProperty(property, fqn);\n\n    if (!ti.static) {\n      throw new Error(`property ${symbol} is not static`);\n    }\n\n    const prototype = this._findSymbol(fqn);\n\n    const value = this._ensureSync(`property ${property}`, () =>\n      this._wrapSandboxCode(() => prototype[property]),\n    );\n\n    this._debug('value:', value);\n    const ret = this._fromSandbox(value, ti);\n    this._debug('ret', ret);\n    return { value: ret };\n  }\n\n  public sset(req: api.StaticSetRequest): api.SetResponse {\n    const { fqn, property, value } = req;\n    const symbol = `${fqn}.${property}`;\n    this._debug('sset', symbol);\n    const ti = this._typeInfoForProperty(property, fqn);\n\n    if (!ti.static) {\n      throw new Error(`property ${symbol} is not static`);\n    }\n\n    if (ti.immutable) {\n      throw new Error(`static property ${symbol} is readonly`);\n    }\n\n    const prototype = this._findSymbol(fqn);\n\n    this._ensureSync(`property ${property}`, () =>\n      this._wrapSandboxCode(\n        () => (prototype[property] = this._toSandbox(value, ti)),\n      ),\n    );\n\n    return {};\n  }\n\n  public get(req: api.GetRequest): api.GetResponse {\n    const { objref, property } = req;\n    this._debug('get', objref, property);\n    const { instance, fqn, interfaces } = this.objects.findObject(objref);\n    const ti = this._typeInfoForProperty(property, fqn, interfaces);\n\n    // if the property is overridden by the native code and \"get\" is called on the object, it\n    // means that the native code is trying to access the \"super\" property. in order to enable\n    // that, we actually keep a copy of the original property descriptor when we override,\n    // so `findPropertyTarget` will return either the original property name (\"property\") or\n    // the \"super\" property name (somehing like \"$jsii$super$<property>$\").\n    const propertyToGet = this._findPropertyTarget(instance, property);\n\n    // make the actual \"get\", and block any async calls that might be performed\n    // by jsii overrides.\n    const value = this._ensureSync(\n      `property '${objref[TOKEN_REF]}.${propertyToGet}'`,\n      () => this._wrapSandboxCode(() => instance[propertyToGet]),\n    );\n    this._debug('value:', value);\n    const ret = this._fromSandbox(value, ti);\n    this._debug('ret:', ret);\n    return { value: ret };\n  }\n\n  public set(req: api.SetRequest): api.SetResponse {\n    const { objref, property, value } = req;\n    this._debug('set', objref, property, value);\n    const { instance, fqn, interfaces } = this.objects.findObject(objref);\n\n    const propInfo = this._typeInfoForProperty(req.property, fqn, interfaces);\n\n    if (propInfo.immutable) {\n      throw new Error(\n        `Cannot set value of immutable property ${req.property} to ${req.value}`,\n      );\n    }\n\n    const propertyToSet = this._findPropertyTarget(instance, property);\n\n    this._ensureSync(`property '${objref[TOKEN_REF]}.${propertyToSet}'`, () =>\n      this._wrapSandboxCode(\n        () => (instance[propertyToSet] = this._toSandbox(value, propInfo)),\n      ),\n    );\n\n    return {};\n  }\n\n  public invoke(req: api.InvokeRequest): api.InvokeResponse {\n    const { objref, method } = req;\n    const args = req.args ?? [];\n\n    this._debug('invoke', objref, method, args);\n    const { ti, obj, fn } = this._findInvokeTarget(objref, method, args);\n\n    // verify this is not an async method\n    if (ti.async) {\n      throw new Error(`${method} is an async method, use \"begin\" instead`);\n    }\n\n    const ret = this._ensureSync(\n      `method '${objref[TOKEN_REF]}.${method}'`,\n      () => {\n        return this._wrapSandboxCode(() =>\n          fn.apply(obj, this._toSandboxValues(args, ti.parameters)),\n        );\n      },\n    );\n\n    const result = this._fromSandbox(ret, ti.returns ?? 'void');\n    this._debug('invoke result', result);\n\n    return { result };\n  }\n\n  public sinvoke(req: api.StaticInvokeRequest): api.InvokeResponse {\n    const { fqn, method } = req;\n    const args = req.args ?? [];\n\n    this._debug('sinvoke', fqn, method, args);\n\n    const ti = this._typeInfoForMethod(method, fqn);\n\n    if (!ti.static) {\n      throw new Error(`${fqn}.${method} is not a static method`);\n    }\n\n    // verify this is not an async method\n    if (ti.async) {\n      throw new Error(`${method} is an async method, use \"begin\" instead`);\n    }\n\n    const prototype = this._findSymbol(fqn);\n    const fn = prototype[method] as (...params: any[]) => any;\n\n    const ret = this._ensureSync(`method '${fqn}.${method}'`, () => {\n      return this._wrapSandboxCode(() =>\n        fn.apply(prototype, this._toSandboxValues(args, ti.parameters)),\n      );\n    });\n\n    this._debug('method returned:', ret);\n    return { result: this._fromSandbox(ret, ti.returns ?? 'void') };\n  }\n\n  public begin(req: api.BeginRequest): api.BeginResponse {\n    const { objref, method } = req;\n    const args = req.args ?? [];\n\n    this._debug('begin', objref, method, args);\n\n    if (this.syncInProgress) {\n      throw new Error(\n        `Cannot invoke async method '${req.objref[TOKEN_REF]}.${req.method}' while sync ${this.syncInProgress} is being processed`,\n      );\n    }\n\n    const { ti, obj, fn } = this._findInvokeTarget(objref, method, args);\n\n    // verify this is indeed an async method\n    if (!ti.async) {\n      throw new Error(`Method ${method} is expected to be an async method`);\n    }\n\n    const promise = this._wrapSandboxCode(() =>\n      fn.apply(obj, this._toSandboxValues(args, ti.parameters)),\n    ) as Promise<any>;\n\n    // since we are planning to resolve this promise in a different scope\n    // we need to handle rejections here [1]\n    // [1]: https://stackoverflow.com/questions/40920179/should-i-refrain-from-handling-promise-rejection-asynchronously/40921505\n    promise.catch((_) => undefined);\n\n    const prid = this._makeprid();\n    this.promises[prid] = {\n      promise,\n      method: ti,\n    };\n\n    return { promiseid: prid };\n  }\n\n  public async end(req: api.EndRequest): Promise<api.EndResponse> {\n    const { promiseid } = req;\n\n    this._debug('end', promiseid);\n\n    const { promise, method } = this.promises[promiseid];\n    if (promise == null) {\n      throw new Error(`Cannot find promise with ID: ${promiseid}`);\n    }\n\n    let result;\n    try {\n      result = await promise;\n      this._debug('promise result:', result);\n    } catch (e) {\n      this._debug('promise error:', e);\n      throw e;\n    }\n\n    return { result: this._fromSandbox(result, method.returns ?? 'void') };\n  }\n\n  public callbacks(_req?: api.CallbacksRequest): api.CallbacksResponse {\n    this._debug('callbacks');\n    const ret = Object.keys(this.cbs).map((cbid) => {\n      const cb = this.cbs[cbid];\n      this.waiting[cbid] = cb; // move to waiting\n      const callback: api.Callback = {\n        cbid,\n        cookie: cb.override.cookie,\n        invoke: {\n          objref: cb.objref,\n          method: cb.override.method,\n          args: cb.args,\n        },\n      };\n      return callback;\n    });\n\n    // move all callbacks to the wait queue and clean the callback queue.\n    this.cbs = {};\n    return { callbacks: ret };\n  }\n\n  public complete(req: api.CompleteRequest): api.CompleteResponse {\n    const { cbid, err, result } = req;\n\n    this._debug('complete', cbid, err, result);\n\n    if (!(cbid in this.waiting)) {\n      throw new Error(`Callback ${cbid} not found`);\n    }\n\n    const cb = this.waiting[cbid];\n    if (err) {\n      this._debug('completed with error:', err);\n      cb.fail(new Error(err));\n    } else {\n      const sandoxResult = this._toSandbox(\n        result,\n        cb.expectedReturnType ?? 'void',\n      );\n      this._debug('completed with result:', sandoxResult);\n      cb.succeed(sandoxResult);\n    }\n\n    delete this.waiting[cbid];\n\n    return { cbid };\n  }\n\n  /**\n   * Returns the language-specific names for a jsii module.\n   * @param assemblyName The name of the jsii module (i.e. jsii$jsii_calculator_lib$)\n   */\n  public naming(req: api.NamingRequest): api.NamingResponse {\n    const assemblyName = req.assembly;\n\n    this._debug('naming', assemblyName);\n\n    const assembly = this._assemblyFor(assemblyName);\n    const targets = assembly.metadata.targets;\n    if (!targets) {\n      throw new Error(`Unexpected - \"targets\" for ${assemblyName} is missing!`);\n    }\n\n    return { naming: targets };\n  }\n\n  public stats(_req?: api.StatsRequest): api.StatsResponse {\n    return {\n      objectCount: this.objects.count,\n    };\n  }\n\n  private _addAssembly(assm: Assembly) {\n    this.assemblies[assm.metadata.name] = assm;\n\n    // add the __jsii__.fqn property on every constructor. this allows\n    // traversing between the javascript and jsii worlds given any object.\n    for (const fqn of Object.keys(assm.metadata.types ?? {})) {\n      const typedef = assm.metadata.types![fqn];\n      switch (typedef.kind) {\n        case spec.TypeKind.Interface:\n          continue; // interfaces don't really exist\n        case spec.TypeKind.Class:\n        case spec.TypeKind.Enum:\n          const constructor = this._findSymbol(fqn);\n          tagJsiiConstructor(constructor, fqn);\n      }\n    }\n  }\n\n  // find the javascript constructor function for a jsii FQN.\n  private _findCtor(\n    fqn: string,\n    args: any[],\n  ): { ctor: any; parameters?: spec.Parameter[] } {\n    if (fqn === wire.EMPTY_OBJECT_FQN) {\n      return { ctor: Object };\n    }\n\n    const typeinfo = this._typeInfoForFqn(fqn);\n\n    switch (typeinfo.kind) {\n      case spec.TypeKind.Class:\n        const classType = typeinfo as spec.ClassType;\n        this._validateMethodArguments(classType.initializer, args);\n        return {\n          ctor: this._findSymbol(fqn),\n          parameters: classType.initializer && classType.initializer.parameters,\n        };\n\n      case spec.TypeKind.Interface:\n        throw new Error(\n          `Cannot create an object with an FQN of an interface: ${fqn}`,\n        );\n\n      default:\n        throw new Error(`Unexpected FQN kind: ${fqn}`);\n    }\n  }\n\n  private _getPackageDir(pkgname: string): string {\n    if (!this.installDir) {\n      this.installDir = fs.mkdtempSync(path.join(os.tmpdir(), 'jsii-kernel-'));\n      fs.mkdirpSync(path.join(this.installDir, 'node_modules'));\n      this._debug('creating jsii-kernel modules workdir:', this.installDir);\n\n      onExit.removeSync(this.installDir);\n    }\n    return path.join(this.installDir, 'node_modules', pkgname);\n  }\n\n  // prefixed with _ to allow calling this method internally without\n  // getting it recorded for testing.\n  private _create(req: api.CreateRequest): api.CreateResponse {\n    this._debug('create', req);\n    const { fqn, interfaces, overrides } = req;\n\n    const requestArgs = req.args ?? [];\n\n    const ctorResult = this._findCtor(fqn, requestArgs);\n    const ctor = ctorResult.ctor;\n    const obj = this._wrapSandboxCode(\n      () =>\n        new ctor(...this._toSandboxValues(requestArgs, ctorResult.parameters)),\n    );\n    const objref = this.objects.registerObject(obj, fqn, req.interfaces ?? []);\n\n    // overrides: for each one of the override method names, installs a\n    // method on the newly created object which represents the remote \"reverse proxy\".\n\n    if (overrides) {\n      this._debug('overrides', overrides);\n\n      const overrideTypeErrorMessage =\n        'Override can either be \"method\" or \"property\"';\n      const methods = new Set<string>();\n      const properties = new Set<string>();\n\n      for (const override of overrides) {\n        if (api.isMethodOverride(override)) {\n          if (api.isPropertyOverride(override)) {\n            throw new Error(overrideTypeErrorMessage);\n          }\n          if (methods.has(override.method)) {\n            throw new Error(\n              `Duplicate override for method '${override.method}'`,\n            );\n          }\n          methods.add(override.method);\n\n          this._applyMethodOverride(obj, objref, fqn, interfaces, override);\n        } else if (api.isPropertyOverride(override)) {\n          if (api.isMethodOverride(override)) {\n            throw new Error(overrideTypeErrorMessage);\n          }\n          if (properties.has(override.property)) {\n            throw Error(\n              `Duplicate override for property '${override.property}'`,\n            );\n          }\n          properties.add(override.property);\n\n          this._applyPropertyOverride(obj, objref, fqn, interfaces, override);\n        } else {\n          throw new Error(overrideTypeErrorMessage);\n        }\n      }\n    }\n\n    return objref;\n  }\n\n  private _getSuperPropertyName(name: string) {\n    return `$jsii$super$${name}$`;\n  }\n\n  private _applyPropertyOverride(\n    obj: any,\n    objref: api.ObjRef,\n    typeFqn: string,\n    interfaces: string[] | undefined,\n    override: api.PropertyOverride,\n  ) {\n    // error if we can find a method with this name\n    if (this._tryTypeInfoForMethod(override.property, typeFqn, interfaces)) {\n      throw new Error(\n        `Trying to override method '${override.property}' as a property`,\n      );\n    }\n\n    let propInfo = this._tryTypeInfoForProperty(\n      override.property,\n      typeFqn,\n      interfaces,\n    );\n    // if this is a private property (i.e. doesn't have `propInfo` the object has a key)\n    if (!propInfo && override.property in obj) {\n      this._debug(`Skipping override of private property ${override.property}`);\n      return;\n    }\n\n    if (!propInfo) {\n      // We've overriding a property on an object we have NO type information on (probably\n      // because it's an anonymous object).\n      // Pretend it's 'prop: any';\n      //\n      // FIXME: We could do better type checking during the conversion if JSII clients\n      // would tell us the intended interface type.\n      propInfo = {\n        name: override.property,\n        type: spec.CANONICAL_ANY,\n      };\n    }\n\n    this._defineOverridenProperty(obj, objref, override, propInfo);\n  }\n\n  private _defineOverridenProperty(\n    obj: any,\n    objref: api.ObjRef,\n    override: api.PropertyOverride,\n    propInfo: spec.Property,\n  ) {\n    const propertyName = override.property;\n\n    this._debug('apply override', propertyName);\n\n    // save the old property under $jsii$super$<prop>$ so that property overrides\n    // can still access it via `super.<prop>`.\n    const prev = getPropertyDescriptor(obj, propertyName) ?? {\n      value: obj[propertyName],\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    };\n\n    const prevEnumerable = prev.enumerable;\n    prev.enumerable = false;\n    Object.defineProperty(obj, this._getSuperPropertyName(propertyName), prev);\n\n    // we add callbacks for both 'get' and 'set', even if the property\n    // is readonly. this is fine because if you try to set() a readonly\n    // property, it will fail.\n    Object.defineProperty(obj, propertyName, {\n      enumerable: prevEnumerable,\n      configurable: prev.configurable,\n      get: () => {\n        this._debug('virtual get', objref, propertyName, {\n          cookie: override.cookie,\n        });\n        const result = this.callbackHandler({\n          cookie: override.cookie,\n          cbid: this._makecbid(),\n          get: { objref, property: propertyName },\n        });\n        this._debug('callback returned', result);\n        return this._toSandbox(result, propInfo);\n      },\n      set: (value: any) => {\n        this._debug('virtual set', objref, propertyName, {\n          cookie: override.cookie,\n        });\n        this.callbackHandler({\n          cookie: override.cookie,\n          cbid: this._makecbid(),\n          set: {\n            objref,\n            property: propertyName,\n            value: this._fromSandbox(value, propInfo),\n          },\n        });\n      },\n    });\n\n    function getPropertyDescriptor(\n      obj: any,\n      propertyName: string,\n    ): PropertyDescriptor | undefined {\n      const direct = Object.getOwnPropertyDescriptor(obj, propertyName);\n      if (direct != null) {\n        return direct;\n      }\n      const proto = Object.getPrototypeOf(obj);\n      if (proto == null && proto !== Object.prototype) {\n        // We reached Object or the prototype chain root, all hope is lost!\n        return undefined;\n      }\n      return getPropertyDescriptor(proto, propertyName);\n    }\n  }\n\n  private _applyMethodOverride(\n    obj: any,\n    objref: api.ObjRef,\n    typeFqn: string,\n    interfaces: string[] | undefined,\n    override: api.MethodOverride,\n  ) {\n    // error if we can find a property with this name\n    if (this._tryTypeInfoForProperty(override.method, typeFqn, interfaces)) {\n      throw new Error(\n        `Trying to override property '${override.method}' as a method`,\n      );\n    }\n\n    let methodInfo = this._tryTypeInfoForMethod(\n      override.method,\n      typeFqn,\n      interfaces,\n    );\n\n    // If this is a private method (doesn't have methodInfo, key resolves on the object), we\n    // are going to skip the override.\n    if (!methodInfo && obj[override.method]) {\n      this._debug(`Skipping override of private method ${override.method}`);\n      return;\n    }\n\n    if (!methodInfo) {\n      // We've overriding a method on an object we have NO type information on (probably\n      // because it's an anonymous object).\n      // Pretend it's an (...args: any[]) => any\n      methodInfo = {\n        name: override.method,\n        returns: { type: spec.CANONICAL_ANY },\n        parameters: [\n          {\n            name: 'args',\n            type: spec.CANONICAL_ANY,\n            variadic: true,\n          },\n        ],\n        variadic: true,\n      };\n    }\n\n    this._defineOverridenMethod(obj, objref, override, methodInfo);\n  }\n\n  private _defineOverridenMethod(\n    obj: any,\n    objref: api.ObjRef,\n    override: api.MethodOverride,\n    methodInfo: spec.Method,\n  ) {\n    const methodName = override.method;\n\n    if (methodInfo.async) {\n      // async method override\n      Object.defineProperty(obj, methodName, {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: (...methodArgs: any[]) => {\n          this._debug('invoke async method override', override);\n          const args = this._toSandboxValues(methodArgs, methodInfo.parameters);\n          return new Promise<any>((succeed, fail) => {\n            const cbid = this._makecbid();\n            this._debug('adding callback to queue', cbid);\n            this.cbs[cbid] = {\n              objref,\n              override,\n              args,\n              expectedReturnType: methodInfo.returns ?? 'void',\n              succeed,\n              fail,\n            };\n          });\n        },\n      });\n    } else {\n      // sync method override (method info is not required)\n      Object.defineProperty(obj, methodName, {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: (...methodArgs: any[]) => {\n          this._debug(\n            'invoke sync method override',\n            override,\n            'args',\n            methodArgs,\n          );\n          // We should be validating the actual arguments according to the\n          // declared parameters here, but let's just assume the JSII runtime on the\n          // other end has done its work.\n          const result = this.callbackHandler({\n            cookie: override.cookie,\n            cbid: this._makecbid(),\n            invoke: {\n              objref,\n              method: methodName,\n              args: this._fromSandboxValues(methodArgs, methodInfo.parameters),\n            },\n          });\n          this._debug('Result', result);\n          return this._toSandbox(result, methodInfo.returns ?? 'void');\n        },\n      });\n    }\n  }\n\n  private _findInvokeTarget(\n    objref: api.ObjRef,\n    methodName: string,\n    args: any[],\n  ) {\n    const { instance, fqn, interfaces } = this.objects.findObject(objref);\n    const ti = this._typeInfoForMethod(methodName, fqn, interfaces);\n    this._validateMethodArguments(ti, args);\n\n    // always first look up the method in the prototype. this practically bypasses\n    // any methods overridden by derived classes (which are by definition native\n    // methods). this serves to allow native call to invoke \"super.method()\" when\n    // overriding the method.\n    // if we didn't find the method on the prototype, it could be a literal object\n    // that implements an interface, so we look if we have the method on the object\n    // itself. if we do, we invoke it.\n    let fn = instance.constructor.prototype[methodName];\n    if (!fn) {\n      fn = instance[methodName];\n      if (!fn) {\n        throw new Error(`Cannot find ${methodName} on object`);\n      }\n    }\n    return { ti, obj: instance, fn };\n  }\n\n  private _validateMethodArguments(\n    method: spec.Callable | undefined,\n    args: any[],\n  ) {\n    const params: spec.Parameter[] = method?.parameters ?? [];\n\n    // error if args > params\n    if (args.length > params.length && !(method && method.variadic)) {\n      throw new Error(\n        `Too many arguments (method accepts ${params.length} parameters, got ${args.length} arguments)`,\n      );\n    }\n\n    for (let i = 0; i < params.length; ++i) {\n      const param = params[i];\n      const arg = args[i];\n\n      if (param.variadic) {\n        if (params.length <= i) {\n          return;\n        } // No vararg was provided\n        for (let j = i; j < params.length; j++) {\n          if (!param.optional && params[j] === undefined) {\n            throw new Error(\n              `Unexpected 'undefined' value at index ${\n                j - i\n              } of variadic argument '${\n                param.name\n              }' of type '${spec.describeTypeReference(param.type)}'`,\n            );\n          }\n        }\n      } else if (!param.optional && arg === undefined) {\n        throw new Error(\n          `Not enough arguments. Missing argument for the required parameter '${\n            param.name\n          }' of type '${spec.describeTypeReference(param.type)}'`,\n        );\n      }\n    }\n  }\n\n  private _assemblyFor(assemblyName: string) {\n    const assembly = this.assemblies[assemblyName];\n    if (!assembly) {\n      throw new Error(`Could not find assembly: ${assemblyName}`);\n    }\n    return assembly;\n  }\n\n  private _findSymbol(fqn: string) {\n    const [assemblyName, ...parts] = fqn.split('.');\n    const assembly = this._assemblyFor(assemblyName);\n\n    let curr = assembly.closure;\n    while (parts.length > 0) {\n      const name = parts.shift();\n      if (!name) {\n        break;\n      }\n\n      curr = curr[name];\n    }\n    if (!curr) {\n      throw new Error(`Could not find symbol ${fqn}`);\n    }\n    return curr;\n  }\n\n  private _typeInfoForFqn(fqn: string): spec.Type {\n    const components = fqn.split('.');\n    const moduleName = components[0];\n\n    const assembly = this.assemblies[moduleName];\n    if (!assembly) {\n      throw new Error(`Module '${moduleName}' not found`);\n    }\n\n    const types = assembly.metadata.types ?? {};\n    const fqnInfo = types[fqn];\n    if (!fqnInfo) {\n      throw new Error(`Type '${fqn}' not found`);\n    }\n\n    return fqnInfo;\n  }\n\n  private _typeInfoForMethod(\n    methodName: string,\n    fqn: string,\n    interfaces?: string[],\n  ): spec.Method {\n    const ti = this._tryTypeInfoForMethod(methodName, fqn, interfaces);\n    if (!ti) {\n      const addendum =\n        interfaces && interfaces.length > 0\n          ? ` or interface(s) ${interfaces.join(', ')}`\n          : '';\n      throw new Error(\n        `Class ${fqn}${addendum} doesn't have a method '${methodName}'`,\n      );\n    }\n    return ti;\n  }\n\n  private _tryTypeInfoForMethod(\n    methodName: string,\n    classFqn: string,\n    interfaces: string[] = [],\n  ): spec.Method | undefined {\n    for (const fqn of [classFqn, ...interfaces]) {\n      if (fqn === 'Object') {\n        continue;\n      }\n      const typeinfo = this._typeInfoForFqn(fqn);\n\n      const methods =\n        (typeinfo as spec.ClassType | spec.InterfaceType).methods ?? [];\n\n      for (const m of methods) {\n        if (m.name === methodName) {\n          return m;\n        }\n      }\n\n      // recursion to parent type (if exists)\n      const bases = [\n        (typeinfo as spec.ClassType).base,\n        ...((typeinfo as spec.InterfaceType).interfaces ?? []),\n      ];\n      for (const base of bases) {\n        if (!base) {\n          continue;\n        }\n\n        const found = this._tryTypeInfoForMethod(methodName, base);\n        if (found) {\n          return found;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  private _tryTypeInfoForProperty(\n    property: string,\n    classFqn: string,\n    interfaces: string[] = [],\n  ): spec.Property | undefined {\n    for (const fqn of [classFqn, ...interfaces]) {\n      if (fqn === wire.EMPTY_OBJECT_FQN) {\n        continue;\n      }\n      const typeInfo = this._typeInfoForFqn(fqn);\n\n      let properties;\n      let bases;\n\n      if (spec.isClassType(typeInfo)) {\n        const classTypeInfo = typeInfo as spec.ClassType;\n        properties = classTypeInfo.properties;\n        bases = classTypeInfo.base ? [classTypeInfo.base] : [];\n      } else if (spec.isInterfaceType(typeInfo)) {\n        const interfaceTypeInfo = typeInfo as spec.InterfaceType;\n        properties = interfaceTypeInfo.properties;\n        bases = interfaceTypeInfo.interfaces ?? [];\n      } else {\n        throw new Error(\n          `Type of kind ${typeInfo.kind} does not have properties`,\n        );\n      }\n\n      for (const p of properties ?? []) {\n        if (p.name === property) {\n          return p;\n        }\n      }\n\n      // recurse to parent type (if exists)\n      for (const baseFqn of bases) {\n        const ret = this._tryTypeInfoForProperty(property, baseFqn);\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  private _typeInfoForProperty(\n    property: string,\n    fqn: string,\n    interfaces?: string[],\n  ): spec.Property {\n    const typeInfo = this._tryTypeInfoForProperty(property, fqn, interfaces);\n    if (!typeInfo) {\n      const addendum =\n        interfaces && interfaces.length > 0\n          ? ` or interface(s) ${interfaces.join(', ')}`\n          : '';\n      throw new Error(\n        `Type ${fqn}${addendum} doesn't have a property '${property}'`,\n      );\n    }\n    return typeInfo;\n  }\n\n  private _toSandbox(v: any, expectedType: wire.OptionalValueOrVoid): any {\n    const serTypes = wire.serializationType(\n      expectedType,\n      this._typeInfoForFqn.bind(this),\n    );\n    this._debug('toSandbox', v, JSON.stringify(serTypes));\n\n    const host: wire.SerializerHost = {\n      objects: this.objects,\n      debug: this._debug.bind(this),\n      findSymbol: this._findSymbol.bind(this),\n      lookupType: this._typeInfoForFqn.bind(this),\n      recurse: this._toSandbox.bind(this),\n    };\n\n    const errors = new Array<string>();\n    for (const { serializationClass, typeRef } of serTypes) {\n      try {\n        return wire.SERIALIZERS[serializationClass].deserialize(\n          v,\n          typeRef,\n          host,\n        );\n      } catch (e) {\n        // If no union (99% case), rethrow immediately to preserve stack trace\n        if (serTypes.length === 1) {\n          throw e;\n        }\n        errors.push(e.message);\n      }\n    }\n\n    throw new Error(\n      `Value did not match any type in union: ${errors.join(', ')}`,\n    );\n  }\n\n  private _fromSandbox(v: any, targetType: wire.OptionalValueOrVoid): any {\n    const serTypes = wire.serializationType(\n      targetType,\n      this._typeInfoForFqn.bind(this),\n    );\n    this._debug('fromSandbox', v, JSON.stringify(serTypes));\n\n    const host: wire.SerializerHost = {\n      objects: this.objects,\n      debug: this._debug.bind(this),\n      findSymbol: this._findSymbol.bind(this),\n      lookupType: this._typeInfoForFqn.bind(this),\n      recurse: this._fromSandbox.bind(this),\n    };\n\n    const errors = new Array<string>();\n    for (const { serializationClass, typeRef } of serTypes) {\n      try {\n        return wire.SERIALIZERS[serializationClass].serialize(v, typeRef, host);\n      } catch (e) {\n        // If no union (99% case), rethrow immediately to preserve stack trace\n        if (serTypes.length === 1) {\n          throw e;\n        }\n        errors.push(e.message);\n      }\n    }\n\n    throw new Error(\n      `Value did not match any type in union: ${errors.join(', ')}`,\n    );\n  }\n\n  private _toSandboxValues(xs: any[], parameters?: spec.Parameter[]) {\n    return this._boxUnboxParameters(xs, parameters, this._toSandbox.bind(this));\n  }\n\n  private _fromSandboxValues(xs: any[], parameters?: spec.Parameter[]) {\n    return this._boxUnboxParameters(\n      xs,\n      parameters,\n      this._fromSandbox.bind(this),\n    );\n  }\n\n  private _boxUnboxParameters(\n    xs: any[],\n    parameters: spec.Parameter[] | undefined,\n    boxUnbox: (x: any, t: wire.OptionalValueOrVoid) => any,\n  ) {\n    parameters = [...(parameters ?? [])];\n    const variadic =\n      parameters.length > 0 && !!parameters[parameters.length - 1].variadic;\n    // Repeat the last (variadic) type to match the number of actual arguments\n    while (variadic && parameters.length < xs.length) {\n      parameters.push(parameters[parameters.length - 1]);\n    }\n    if (xs.length > parameters.length) {\n      throw new Error(\n        `Argument list (${JSON.stringify(\n          xs,\n        )}) not same size as expected argument list (length ${\n          parameters.length\n        })`,\n      );\n    }\n    return xs.map((x, i) => boxUnbox(x, parameters![i]));\n  }\n\n  private _debug(...args: any[]) {\n    if (this.traceEnabled) {\n      console.error('[@jsii/kernel]', ...args);\n    }\n  }\n\n  /**\n   * Ensures that `fn` is called and defends against beginning to invoke\n   * async methods until fn finishes (successfully or not).\n   */\n  private _ensureSync<T>(desc: string, fn: () => T): T {\n    this.syncInProgress = desc;\n    try {\n      return fn();\n    } finally {\n      delete this.syncInProgress;\n    }\n  }\n\n  private _findPropertyTarget(obj: any, property: string) {\n    const superProp = this._getSuperPropertyName(property);\n    if (superProp in obj) {\n      return superProp;\n    }\n    return property;\n  }\n\n  //\n  // type information\n  //\n\n  private _makecbid() {\n    return `jsii::callback::${this.nextid++}`;\n  }\n\n  private _makeprid() {\n    return `jsii::promise::${this.nextid++}`;\n  }\n\n  private _wrapSandboxCode<T>(fn: () => T): T {\n    return fn();\n  }\n\n  /**\n   * Executes arbitrary code in a VM sandbox.\n   *\n   * @param code       JavaScript code to be executed in the VM\n   * @param sandbox    a VM context to use for running the code\n   * @param sourceMaps source maps to be used in case an exception is thrown\n   * @param filename   the file name to use for the executed code\n   *\n   * @returns the result of evaluating the code\n   */\n  private _execute(code: string, filename: string) {\n    const script = new vm.Script(code, { filename });\n    return script.runInContext(this.sandbox, { displayErrors: true });\n  }\n}\n\ninterface Callback {\n  objref: api.ObjRef;\n  override: api.MethodOverride;\n  args: any[];\n  expectedReturnType: wire.OptionalValueOrVoid;\n\n  // completion callbacks\n  succeed: (...args: any[]) => any;\n  fail: (...args: any[]) => any;\n}\n\ninterface AsyncInvocation {\n  method: spec.Method;\n  promise: Promise<any>;\n}\n\nclass Assembly {\n  public constructor(\n    public readonly metadata: spec.Assembly,\n    public readonly closure: any,\n  ) {}\n}\n","import * as spec from '@jsii/spec';\n\nimport * as api from './api';\nimport { EMPTY_OBJECT_FQN } from './serialization';\n\n/**\n * Symbol under which we store the { type -> objid } map on object instances\n */\nconst OBJID_SYMBOL = Symbol.for('$__jsii__objid__$');\n\n/**\n * Symbol under which we store the interfaces implemented by instances\n */\nconst IFACES_SYMBOL = Symbol.for('$__jsii__interfaces__$');\n\n/**\n * Symbol we use to tag the constructor of a JSII class\n */\nconst JSII_SYMBOL = Symbol.for('__jsii__');\n\n/**\n * Get the JSII fqn for an object (if available)\n *\n * This will return something if the object was constructed from a JSII-enabled\n * class/constructor, or if a literal object was annotated with type\n * information.\n */\nexport function jsiiTypeFqn(obj: any): string | undefined {\n  return obj.constructor[JSII_SYMBOL]?.fqn;\n}\n\n/**\n * If this object was previously serialized under a given reference, return the same reference\n *\n * This is to retain object identity across invocations.\n */\nexport function objectReference(obj: unknown): api.AnnotatedObjRef | undefined {\n  // If this object as already returned\n  if ((obj as any)[OBJID_SYMBOL]) {\n    return {\n      [api.TOKEN_REF]: (obj as ManagedObject)[OBJID_SYMBOL],\n      [api.TOKEN_INTERFACES]: (obj as ManagedObject)[IFACES_SYMBOL],\n    };\n  }\n\n  return undefined;\n}\n\ntype ManagedObject = {\n  [OBJID_SYMBOL]: string;\n  [IFACES_SYMBOL]?: string[];\n};\n\nfunction tagObject(obj: unknown, objid: string, interfaces?: string[]) {\n  const managed = obj as ManagedObject;\n  managed[OBJID_SYMBOL] = objid;\n  managed[IFACES_SYMBOL] = interfaces;\n}\n\n/**\n * Set the JSII FQN for classes produced by a given constructor\n */\nexport function tagJsiiConstructor(constructor: any, fqn: string) {\n  Object.defineProperty(constructor, JSII_SYMBOL, {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: { fqn },\n  });\n}\n\n/**\n * Table of JSII objects\n *\n * There can be multiple references to the same object, each under a different requested\n * type.\n */\nexport class ObjectTable {\n  private objects: { [objid: string]: RegisteredObject } = {};\n  private nextid = 10000;\n\n  public constructor(\n    private readonly resolveType: (fqn: string) => spec.Type,\n  ) {}\n\n  /**\n   * Register the given object with the given type\n   *\n   * Return the existing registration if available.\n   */\n  public registerObject(\n    obj: unknown,\n    fqn: string,\n    interfaces?: string[],\n  ): api.AnnotatedObjRef {\n    if (fqn === undefined) {\n      throw new Error('FQN cannot be undefined');\n    }\n\n    const existingRef = objectReference(obj);\n    if (existingRef) {\n      if (interfaces) {\n        const allIfaces = new Set(interfaces);\n        for (const iface of existingRef[api.TOKEN_INTERFACES] ?? []) {\n          allIfaces.add(iface);\n        }\n        this.objects[existingRef[api.TOKEN_REF]].interfaces =\n          (obj as any)[IFACES_SYMBOL] =\n          existingRef[api.TOKEN_INTERFACES] =\n          interfaces =\n            this.removeRedundant(Array.from(allIfaces), fqn);\n      }\n      return existingRef;\n    }\n\n    interfaces = this.removeRedundant(interfaces, fqn);\n\n    const objid = this.makeId(fqn);\n    this.objects[objid] = { instance: obj, fqn, interfaces };\n    tagObject(obj, objid, interfaces);\n\n    return { [api.TOKEN_REF]: objid, [api.TOKEN_INTERFACES]: interfaces };\n  }\n\n  /**\n   * Find the object and registered type for the given ObjRef\n   */\n  public findObject(objref: api.ObjRef): RegisteredObject {\n    if (typeof objref !== 'object' || !(api.TOKEN_REF in objref)) {\n      throw new Error(`Malformed object reference: ${JSON.stringify(objref)}`);\n    }\n\n    const objid = objref[api.TOKEN_REF];\n    const obj = this.objects[objid];\n    if (!obj) {\n      throw new Error(`Object ${objid} not found`);\n    }\n    return obj;\n  }\n\n  /**\n   * Delete the registration with the given objref\n   */\n  public deleteObject(objref: api.ObjRef) {\n    this.findObject(objref); // make sure object exists\n    delete this.objects[objref[api.TOKEN_REF]];\n  }\n\n  public get count(): number {\n    return Object.keys(this.objects).length;\n  }\n\n  private makeId(fqn: string) {\n    return `${fqn}@${this.nextid++}`;\n  }\n\n  private removeRedundant(\n    interfaces: string[] | undefined,\n    fqn: string,\n  ): string[] | undefined {\n    if (!interfaces || interfaces.length === 0) {\n      return undefined;\n    }\n\n    const result = new Set(interfaces);\n    const builtIn = new InterfaceCollection(this.resolveType);\n\n    if (fqn !== EMPTY_OBJECT_FQN) {\n      builtIn.addFromClass(fqn);\n    }\n    interfaces.forEach(builtIn.addFromInterface.bind(builtIn));\n\n    for (const iface of builtIn) {\n      result.delete(iface);\n    }\n\n    return result.size > 0 ? Array.from(result).sort() : undefined;\n  }\n}\n\nexport interface RegisteredObject {\n  instance: any;\n  fqn: string;\n  interfaces?: string[];\n}\n\nclass InterfaceCollection implements Iterable<string> {\n  private readonly interfaces = new Set<string>();\n\n  public constructor(\n    private readonly resolveType: (fqn: string) => spec.Type,\n  ) {}\n\n  public addFromClass(fqn: string): void {\n    const ti = this.resolveType(fqn);\n    if (!spec.isClassType(ti)) {\n      throw new Error(\n        `Expected a class, but received ${spec.describeTypeReference(ti)}`,\n      );\n    }\n    if (ti.base) {\n      this.addFromClass(ti.base);\n    }\n    if (ti.interfaces) {\n      for (const iface of ti.interfaces) {\n        if (this.interfaces.has(iface)) {\n          continue;\n        }\n        this.interfaces.add(iface);\n        this.addFromInterface(iface);\n      }\n    }\n  }\n\n  public addFromInterface(fqn: string): void {\n    const ti = this.resolveType(fqn);\n    if (!spec.isInterfaceType(ti)) {\n      throw new Error(\n        `Expected an interface, but received ${spec.describeTypeReference(ti)}`,\n      );\n    }\n    if (!ti.interfaces) {\n      return;\n    }\n    for (const iface of ti.interfaces) {\n      if (this.interfaces.has(iface)) {\n        continue;\n      }\n      this.interfaces.add(iface);\n      this.addFromInterface(iface);\n    }\n  }\n\n  public [Symbol.iterator]() {\n    return this.interfaces[Symbol.iterator]();\n  }\n}\n","import * as fs from 'fs-extra';\nimport * as process from 'process';\n\nconst removeSyncPaths = new Array<string>();\n\nexport function removeSync(path: string): void {\n  registerIfNeeded();\n  removeSyncPaths.push(path);\n}\n\nlet registered = false;\n\n/**\n * Registers the exist handler if it has not been registered already. This is done exactly ocne per\n * process, so that processes with multiple kernels don't end up creating too many exit handlers, as\n * this reduces the chances they will correctly run.\n */\nfunction registerIfNeeded() {\n  if (registered) {\n    return;\n  }\n  process.once('exit', onExitHandler);\n  registered = true;\n\n  function onExitHandler() {\n    if (removeSyncPaths.length > 0) {\n      for (const path of removeSyncPaths) {\n        fs.removeSync(path);\n      }\n    }\n  }\n}\n","/**\n * Handling of types in JSII\n *\n * Types will be serialized according to the following table:\n *\n *                         ┬───────────────────────────────────────────────────────────────────────────────────────────────┐\n *                         │ JAVASCRIPT TYPE                                                                               │\n *                         ┼────────────────┬───────────┬────────────┬───────────────┬───────────────────┬─────────────────┤\n *                         │ undefined/null │   date    │ scalar (*) │     array     │ JSII-class object │ literal object  │\n * ├──────────┼────────────┼────────────────┼───────────┼────────────┼───────────────┼───────────────────┼─────────────────┤\n * │ DECLARED │ void       │ undefined      │ undefined │ undefined  │ undefined     │ undefined         │ undefined       │\n * │ TYPE     │ date       │ undefined(†)   │ { date }  │ -          │ -             │ -                 │ -               │\n * │          │ scalar (*) │ undefined(†)   │ -         │ value      │ -             │ -                 │ -               │\n * │          │ json       │ undefined      │ string    │ value      │ array/R(json) │ -                 │ byvalue/R(json) │\n * │          │ enum       │ undefined(†)   │ -         │ { enum }   │ -             │ -                 │ -               │\n * │          │ array of T │ undefined(†)   │ -         │ -          │ array/R(T)    │ -                 │ -               │\n * │          │ map of T   │ undefined(†)   │ -         │ -          │ -             │ -                 │ byvalue/R(T)    │\n * │          │ interface  │ undefined(†)   │ -         │ -          │ -             │ { ref }           │ { ref: proxy }  │\n * │          │ struct     │ undefined(†)   │ -         │ -          │ -             │ -                 │ byvalue/R(T[k]) │\n * │          │ class      │ undefined(†)   │ -         │ -          │ -             │ { ref }           │ { ref: proxy }  │\n * │          │ any        │ undefined      │ { date }  │ value      │ array/R(any)  │ { ref }           │ byvalue/R(any)  │\n * └──────────┴────────────┴────────────────┴───────────┴────────────┴───────────────┴───────────────────┴─────────────────┘\n *\n *  - (*) scalar means 'string | number | boolean'\n *  - (†) throw if not nullable\n *  - /R(t) recurse with declared type t\n */\n\nimport * as spec from '@jsii/spec';\n\nimport {\n  isObjRef,\n  isWireDate,\n  isWireEnum,\n  isWireMap,\n  ObjRef,\n  TOKEN_DATE,\n  TOKEN_ENUM,\n  TOKEN_MAP,\n  WireDate,\n  WireEnum,\n  isWireStruct,\n  TOKEN_STRUCT,\n} from './api';\nimport { jsiiTypeFqn, objectReference, ObjectTable } from './objects';\n\nimport { api } from '.';\n\n/**\n * A specific singleton type to be explicit about a Void type\n *\n * In the spec, 'void' is represented as 'undefined'(*), but allowing the\n * value 'undefined' in function calls has lead to consumers failing to pass\n * type information that they had, just because they didn't \"have to\" (the\n * parameter was optional).\n *\n * (*) As in, declaration of a method looks like { returns?: TypeReference }\n * and the absence of a type means it returns 'void'.\n */\nexport type Void = 'void';\n\n/**\n * A type instance, or Void\n */\nexport type OptionalValueOrVoid = spec.OptionalValue | Void;\n\n/**\n * A special FQN that can be used to create empty javascript objects.\n */\nexport const EMPTY_OBJECT_FQN = 'Object';\n\nexport const SYMBOL_WIRE_TYPE = Symbol.for('$jsii$wireType$');\n\n/**\n * The type kind, that controls how it will be serialized according to the above table\n */\nexport const enum SerializationClass {\n  Void = 'Void',\n  Date = 'Date',\n  Scalar = 'Scalar',\n  Json = 'Json',\n  Enum = 'Enum',\n  Array = 'Array',\n  Map = 'Map',\n  Struct = 'Struct',\n  ReferenceType = 'RefType',\n  Any = 'Any',\n}\n\ntype TypeLookup = (fqn: spec.FQN) => spec.Type;\ntype SymbolLookup = (fqn: spec.FQN) => any;\n\nexport interface SerializerHost {\n  readonly objects: ObjectTable;\n  debug(...args: any[]): void;\n  lookupType(fqn: string): spec.Type;\n  recurse(x: any, type: OptionalValueOrVoid): any;\n  findSymbol(fqn: spec.FQN): any;\n}\n\ninterface Serializer {\n  serialize(\n    value: unknown,\n    type: OptionalValueOrVoid,\n    host: SerializerHost,\n  ): any;\n  deserialize(\n    value: unknown,\n    type: OptionalValueOrVoid,\n    host: SerializerHost,\n  ): any;\n}\n\nexport const SERIALIZERS: { [k: string]: Serializer } = {\n  // ----------------------------------------------------------------------\n  [SerializationClass.Void]: {\n    serialize(value, _type, host) {\n      if (value != null) {\n        host.debug('Expected void, got', value);\n      }\n      return undefined;\n    },\n\n    deserialize(value, _type, host) {\n      if (value != null) {\n        host.debug('Expected void, got', value);\n      }\n      return undefined;\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Date]: {\n    serialize(value, optionalValue): WireDate | undefined {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (!isDate(value)) {\n        throw new Error(`Expected Date, got ${JSON.stringify(value)}`);\n      }\n      return serializeDate(value);\n    },\n\n    deserialize(value, optionalValue) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n\n      if (!isWireDate(value)) {\n        throw new Error(`Expected Date, got ${JSON.stringify(value)}`);\n      }\n      return deserializeDate(value);\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Scalar]: {\n    serialize(value, optionalValue) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      const primitiveType = optionalValue.type as spec.PrimitiveTypeReference;\n\n      if (!isScalar(value)) {\n        throw new Error(\n          `Expected ${spec.describeTypeReference(\n            optionalValue.type,\n          )}, got ${JSON.stringify(value)}`,\n        );\n      }\n      if (typeof value !== primitiveType.primitive) {\n        throw new Error(\n          `Expected a ${spec.describeTypeReference(\n            optionalValue.type,\n          )}, got ${JSON.stringify(value)} (${typeof value})`,\n        );\n      }\n      return value;\n    },\n\n    deserialize(value, optionalValue) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      const primitiveType = optionalValue.type as spec.PrimitiveTypeReference;\n\n      if (!isScalar(value)) {\n        throw new Error(\n          `Expected a ${spec.describeTypeReference(\n            optionalValue.type,\n          )}, got ${JSON.stringify(value)}`,\n        );\n      }\n      if (typeof value !== primitiveType.primitive) {\n        throw new Error(\n          `Expected a ${spec.describeTypeReference(\n            optionalValue.type,\n          )}, got ${JSON.stringify(value)} (${typeof value})`,\n        );\n      }\n\n      return value;\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Json]: {\n    serialize(value) {\n      // Just whatever. Dates will automatically serialize themselves to strings.\n      return value;\n    },\n    deserialize(value, optionalValue, host) {\n      // /!\\ Top-level \"null\" will turn to undefined, but any null nested in the value is valid JSON, so it'll stay!\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n\n      // A mapping object can arrive though here. This would be the case if anything that is valid into a Map<string, ?>\n      // is passed into a JSON transfer point. Indeed, those are also valid JSON! For example, Python \"dicts\" will be\n      // serialized (by the Python runtime) as a $jsii.map (the mapping object). We need to de-serialize that as a\n      // Map<string, JSON> in order to obtain the correct output behavior here!\n      if (isWireMap(value)) {\n        return SERIALIZERS[SerializationClass.Map].deserialize(\n          value,\n          {\n            optional: false,\n            type: {\n              collection: {\n                kind: spec.CollectionKind.Map,\n                elementtype: { primitive: spec.PrimitiveType.Json },\n              },\n            },\n          },\n          host,\n        );\n      }\n\n      if (typeof value !== 'object') {\n        return value;\n      }\n\n      if (Array.isArray(value)) {\n        return value.map(mapJsonValue);\n      }\n\n      return mapValues(value, mapJsonValue);\n\n      function mapJsonValue(toMap: any) {\n        if (toMap == null) {\n          return toMap;\n        }\n        return host.recurse(toMap, {\n          type: { primitive: spec.PrimitiveType.Json },\n        });\n      }\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Enum]: {\n    serialize(value, optionalValue, host): WireEnum | undefined {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (typeof value !== 'string' && typeof value !== 'number') {\n        throw new Error(`Expected enum value, got ${JSON.stringify(value)}`);\n      }\n\n      host.debug('Serializing enum');\n\n      const enumType = optionalValue.type as spec.NamedTypeReference;\n      const enumMap = host.findSymbol(enumType.fqn);\n      const enumEntry = Object.entries(enumMap).find(([, v]) => v === value);\n      if (!enumEntry) {\n        throw new Error(`No entry in ${enumType.fqn} has value ${value}`);\n      }\n      return { [TOKEN_ENUM]: `${enumType.fqn}/${enumEntry[0]}` };\n    },\n    deserialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n\n      if (!isWireEnum(value)) {\n        throw new Error(`Expected enum value, got ${JSON.stringify(value)}`);\n      }\n\n      return deserializeEnum(value, host.findSymbol);\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Array]: {\n    serialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (!Array.isArray(value)) {\n        throw new Error(`Expected array type, got ${JSON.stringify(value)}`);\n      }\n\n      const arrayType = optionalValue.type as spec.CollectionTypeReference;\n\n      return value.map((x) =>\n        host.recurse(x, { type: arrayType.collection.elementtype }),\n      );\n    },\n    deserialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (!Array.isArray(value)) {\n        throw new Error(`Expected array type, got ${JSON.stringify(value)}`);\n      }\n\n      const arrayType = optionalValue.type as spec.CollectionTypeReference;\n\n      return value.map((x) =>\n        host.recurse(x, { type: arrayType.collection.elementtype }),\n      );\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Map]: {\n    serialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      const mapType = optionalValue.type as spec.CollectionTypeReference;\n      return {\n        [TOKEN_MAP]: mapValues(value, (v) =>\n          host.recurse(v, { type: mapType.collection.elementtype }),\n        ),\n      };\n    },\n    deserialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      const mapType = optionalValue.type as spec.CollectionTypeReference;\n      if (!isWireMap(value)) {\n        // Compatibility mode with older versions that didn't wrap in [TOKEN_MAP]\n        return mapValues(value, (v) =>\n          host.recurse(v, { type: mapType.collection.elementtype }),\n        );\n      }\n      const result = mapValues(value[TOKEN_MAP], (v) =>\n        host.recurse(v, { type: mapType.collection.elementtype }),\n      );\n      Object.defineProperty(result, SYMBOL_WIRE_TYPE, {\n        configurable: false,\n        enumerable: false,\n        value: TOKEN_MAP,\n        writable: false,\n      });\n      return result;\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Struct]: {\n    serialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (typeof value !== 'object' || value == null) {\n        throw new Error(`Expected object, got ${JSON.stringify(value)}`);\n      }\n\n      /*\n        This is what we'd like to do, but we can't because at least the Java client\n        does not understand by-value serialized interface types, so we'll have to\n        serialize by-reference. Additionally, serializing known properties would\n        cause problems when the return type of a method is a UNION of structs.\n        See: https://github.com/aws/jsii/issues/400\n\n      const props = propertiesOf(namedType);\n\n      return mapValues(value, (v, key) => {\n        if (!props[key]) { return undefined; } // Don't map if unknown property\n        return host.recurse(v, props[key].type);\n      });\n      */\n\n      host.debug('Returning value type by reference');\n      return host.objects.registerObject(value, 'Object', [\n        (optionalValue.type as spec.NamedTypeReference).fqn,\n      ]);\n    },\n    deserialize(value, optionalValue, host) {\n      if (typeof value === 'object' && Object.keys(value ?? {}).length === 0) {\n        // Treat empty structs as `undefined` (see https://github.com/aws/jsii/issues/411)\n        value = undefined;\n      }\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (typeof value !== 'object' || value == null) {\n        throw new Error(\n          `Expected object reference, got ${JSON.stringify(value)}`,\n        );\n      }\n\n      const namedType = host.lookupType(\n        (optionalValue.type as spec.NamedTypeReference).fqn,\n      );\n      const props = propertiesOf(namedType, host.lookupType);\n\n      if (Array.isArray(value)) {\n        throw new Error(\n          `Got an array where a ${namedType.fqn} was expected. Did you mean to pass a variable number of arguments?`,\n        );\n      }\n\n      // Similarly to serialization, we might be getting a reference type where we're\n      // expecting a value type. Accept this for now (but also validate that object\n      // for presence of the right properties).\n      if (isObjRef(value)) {\n        host.debug(\n          'Expected value type but got reference type, accepting for now (awslabs/jsii#400)',\n        );\n\n        // Return same INSTANCE (shouldn't matter but we don't know for sure that it doesn't)\n        return validateRequiredProps(\n          host.objects.findObject(value).instance,\n          namedType.fqn,\n          props,\n        );\n      }\n\n      if (api.isWireStruct(value)) {\n        const { fqn, data } = value[api.TOKEN_STRUCT];\n        if (!isAssignable(fqn, namedType, host.lookupType)) {\n          throw new Error(\n            `Wire struct type '${fqn}' does not match expected '${namedType.fqn}'`,\n          );\n        }\n        value = data;\n      }\n\n      // Python, for example, allows using plain mapping objects instead of Structs (dyanmic typing, YOLO!)\n      if (api.isWireMap(value)) {\n        value = value[api.TOKEN_MAP];\n      }\n\n      value = validateRequiredProps(value as any, namedType.fqn, props);\n\n      // Return a dict COPY, we have by-value semantics anyway.\n      return mapValues(value, (v, key) => {\n        if (!props[key]) {\n          return undefined;\n        } // Don't map if unknown property\n        return host.recurse(v, props[key]);\n      });\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.ReferenceType]: {\n    serialize(value, optionalValue, host): ObjRef | undefined {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      if (typeof value !== 'object' || value == null) {\n        throw new Error(\n          `Expected object reference, got ${JSON.stringify(value)}`,\n        );\n      }\n\n      const expectedType = host.lookupType(\n        (optionalValue.type as spec.NamedTypeReference).fqn,\n      );\n      const interfaces = spec.isInterfaceType(expectedType)\n        ? [expectedType.fqn]\n        : undefined;\n      const jsiiType =\n        jsiiTypeFqn(value) ??\n        (spec.isClassType(expectedType) ? expectedType.fqn : 'Object');\n\n      return host.objects.registerObject(value, jsiiType, interfaces);\n    },\n    deserialize(value, optionalValue, host) {\n      if (nullAndOk(value, optionalValue)) {\n        return undefined;\n      }\n      if (optionalValue === 'void') {\n        throw new Error('Encountered unexpected `void` type');\n      }\n\n      // The only way to pass a by-ref object is to have created it\n      // previously inside JSII kernel, so it must have an objref already.\n\n      if (!isObjRef(value)) {\n        throw new Error(\n          `Expected object reference, got ${JSON.stringify(value)}`,\n        );\n      }\n\n      const { instance, fqn } = host.objects.findObject(value);\n\n      const namedTypeRef = optionalValue.type as spec.NamedTypeReference;\n      if (namedTypeRef.fqn !== EMPTY_OBJECT_FQN) {\n        const namedType = host.lookupType(namedTypeRef.fqn);\n\n        // Check that the object we got is of the right type\n        // We only do this for classes, not interfaces, since Java might pass us objects that\n        // privately implement some interface and we can't prove they don't.\n        // https://github.com/aws/jsii/issues/399\n        const declaredType = optionalValue.type as spec.NamedTypeReference;\n        if (\n          spec.isClassType(namedType) &&\n          !isAssignable(fqn, declaredType, host.lookupType)\n        ) {\n          throw new Error(\n            `Object of type ${fqn} is not convertible to ${declaredType.fqn}`,\n          );\n        }\n      }\n\n      return instance;\n    },\n  },\n\n  // ----------------------------------------------------------------------\n  [SerializationClass.Any]: {\n    serialize(value, _type, host) {\n      if (value == null) {\n        return undefined;\n      }\n\n      if (isDate(value)) {\n        return serializeDate(value);\n      }\n      if (isScalar(value)) {\n        return value;\n      }\n      if (Array.isArray(value)) {\n        return value.map((e) => host.recurse(e, { type: spec.CANONICAL_ANY }));\n      }\n\n      // Note: no case for \"ENUM\" here, without type declaration we can't tell the difference\n      // between an enum member and a scalar.\n\n      if (typeof value === 'function') {\n        throw new Error(\n          'JSII Kernel is unable to serialize `function`. An instance with methods might have been returned by an `any` method?',\n        );\n      }\n\n      if (typeof value !== 'object' || value == null) {\n        throw new Error(\n          `JSII kernel assumption violated, ${JSON.stringify(\n            value,\n          )} is not an object`,\n        );\n      }\n\n      if (\n        SYMBOL_WIRE_TYPE in value &&\n        (value as any)[SYMBOL_WIRE_TYPE] === TOKEN_MAP\n      ) {\n        return SERIALIZERS[SerializationClass.Map].serialize(\n          value,\n          {\n            type: {\n              collection: {\n                kind: spec.CollectionKind.Map,\n                elementtype: spec.CANONICAL_ANY,\n              },\n            },\n          },\n          host,\n        );\n      }\n\n      // To make sure people aren't going to try and return Map<> or Set<> out, test for\n      // those and throw a descriptive error message. We can't detect these cases any other\n      // way, and the by-value serialized object will be quite useless.\n      if (value instanceof Set || value instanceof Map) {\n        throw new Error(\"Can't return objects of type Set or Map\");\n      }\n\n      // Use a previous reference to maintain object identity. NOTE: this may cause us to return\n      // a different type than requested! This is just how it is right now.\n      // https://github.com/aws/jsii/issues/399\n      const prevRef = objectReference(value);\n      if (prevRef) {\n        return prevRef;\n      }\n\n      // If this is or should be a reference type, pass or make the reference\n      // (Like regular reftype serialization, but without the type derivation to an interface)\n      const jsiiType =\n        jsiiTypeFqn(value) ??\n        (isByReferenceOnly(value) ? EMPTY_OBJECT_FQN : undefined);\n      if (jsiiType) {\n        return host.objects.registerObject(value, jsiiType);\n      }\n\n      // At this point we have an object that is not of an exported type. Either an object\n      // literal, or an instance of a fully private class (cannot distinguish those cases).\n\n      // We will serialize by-value, but recurse for serialization so that if\n      // the object contains reference objects, they will be serialized appropriately.\n      // (Basically, serialize anything else as a map of 'any').\n      return mapValues(value, (v) =>\n        host.recurse(v, { type: spec.CANONICAL_ANY }),\n      );\n    },\n\n    deserialize(value, _type, host) {\n      if (value == null) {\n        return undefined;\n      }\n\n      if (isWireDate(value)) {\n        host.debug('ANY is a Date');\n        return deserializeDate(value);\n      }\n      if (isScalar(value)) {\n        host.debug('ANY is a Scalar');\n        return value;\n      }\n      if (Array.isArray(value)) {\n        host.debug('ANY is an Array');\n        return value.map((e) => host.recurse(e, { type: spec.CANONICAL_ANY }));\n      }\n\n      if (isWireEnum(value)) {\n        host.debug('ANY is an Enum');\n        return deserializeEnum(value, host.findSymbol);\n      }\n      if (isWireMap(value)) {\n        host.debug('ANY is a Map');\n        const mapOfAny: spec.CollectionTypeReference = {\n          collection: {\n            kind: spec.CollectionKind.Map,\n            elementtype: spec.CANONICAL_ANY,\n          },\n        };\n        return SERIALIZERS[SerializationClass.Map].deserialize(\n          value,\n          { type: mapOfAny },\n          host,\n        );\n      }\n      if (isObjRef(value)) {\n        host.debug('ANY is a Ref');\n        return host.objects.findObject(value).instance;\n      }\n\n      // if the value has a struct token, it was serialized by a typed jsii\n      // struct, but since the deserialization target is ANY, all we can do is\n      // strip the data from $jsii.struct and continue to deserialize as ANY.\n      if (isWireStruct(value)) {\n        const { fqn, data } = value[TOKEN_STRUCT];\n        host.debug(`ANY is a struct of type ${fqn}`);\n        return SERIALIZERS[SerializationClass.Struct].deserialize(\n          data,\n          { type: { fqn } },\n          host,\n        );\n      }\n\n      // At this point again, deserialize by-value.\n      host.debug('ANY is a Map');\n      return mapValues(value, (v) =>\n        host.recurse(v, { type: spec.CANONICAL_ANY }),\n      );\n    },\n  },\n};\n\nfunction serializeDate(value: Date): WireDate {\n  return { [TOKEN_DATE]: value.toISOString() };\n}\n\nfunction deserializeDate(value: WireDate): Date {\n  return new Date(value[TOKEN_DATE]);\n}\n\nfunction deserializeEnum(value: WireEnum, lookup: SymbolLookup) {\n  const enumLocator = value[TOKEN_ENUM];\n  const sep = enumLocator.lastIndexOf('/');\n  if (sep === -1) {\n    throw new Error(`Malformed enum value: ${JSON.stringify(value)}`);\n  }\n\n  const typeName = enumLocator.substr(0, sep);\n  const valueName = enumLocator.substr(sep + 1);\n\n  const enumValue = lookup(typeName)[valueName];\n  if (enumValue === undefined) {\n    throw new Error(`No enum member named ${valueName} in ${typeName}`);\n  }\n  return enumValue;\n}\n\nexport interface TypeSerialization {\n  serializationClass: SerializationClass;\n  typeRef: OptionalValueOrVoid;\n}\n\n/**\n * From a type reference, return the possible serialization types\n *\n * There can be multiple, because the type can be a type union.\n */\nexport function serializationType(\n  typeRef: OptionalValueOrVoid,\n  lookup: TypeLookup,\n): TypeSerialization[] {\n  if (typeRef == null) {\n    throw new Error(\"Kernel error: expected type information, got 'undefined'\");\n  }\n  if (typeRef === 'void') {\n    return [{ serializationClass: SerializationClass.Void, typeRef }];\n  }\n  if (spec.isPrimitiveTypeReference(typeRef.type)) {\n    switch (typeRef.type.primitive) {\n      case spec.PrimitiveType.Any:\n        return [{ serializationClass: SerializationClass.Any, typeRef }];\n      case spec.PrimitiveType.Date:\n        return [{ serializationClass: SerializationClass.Date, typeRef }];\n      case spec.PrimitiveType.Json:\n        return [{ serializationClass: SerializationClass.Json, typeRef }];\n      case spec.PrimitiveType.Boolean:\n      case spec.PrimitiveType.Number:\n      case spec.PrimitiveType.String:\n        return [{ serializationClass: SerializationClass.Scalar, typeRef }];\n    }\n\n    throw new Error('Unknown primitive type');\n  }\n  if (spec.isCollectionTypeReference(typeRef.type)) {\n    return [\n      {\n        serializationClass:\n          typeRef.type.collection.kind === spec.CollectionKind.Array\n            ? SerializationClass.Array\n            : SerializationClass.Map,\n        typeRef,\n      },\n    ];\n  }\n  if (spec.isUnionTypeReference(typeRef.type)) {\n    const compoundTypes = flatMap(typeRef.type.union.types, (t) =>\n      serializationType({ type: t }, lookup),\n    );\n    // Propagate the top-level 'optional' field to each individual subtype\n    for (const t of compoundTypes) {\n      if (t.typeRef !== 'void') {\n        t.typeRef.optional = typeRef.optional;\n      }\n    }\n    return compoundTypes.sort((l, r) =>\n      compareSerializationClasses(l.serializationClass, r.serializationClass),\n    );\n  }\n\n  // The next part of the conversion is lookup-dependent\n  const type = lookup(typeRef.type.fqn);\n\n  if (spec.isEnumType(type)) {\n    return [{ serializationClass: SerializationClass.Enum, typeRef }];\n  }\n\n  if (spec.isInterfaceType(type) && type.datatype) {\n    return [{ serializationClass: SerializationClass.Struct, typeRef }];\n  }\n\n  return [{ serializationClass: SerializationClass.ReferenceType, typeRef }];\n}\n\nfunction nullAndOk(x: unknown, type: OptionalValueOrVoid): boolean {\n  if (x != null) {\n    return false;\n  }\n\n  if (type !== 'void' && !type.optional) {\n    throw new Error(\n      `Got 'undefined' for non-optional instance of ${JSON.stringify(type)}`,\n    );\n  }\n\n  return true;\n}\n\nfunction isDate(x: unknown): x is Date {\n  return (\n    typeof x === 'object' &&\n    Object.prototype.toString.call(x) === '[object Date]'\n  );\n}\n\nfunction isScalar(x: unknown): x is string | number | boolean {\n  return (\n    typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean'\n  );\n}\n\nfunction flatMap<T, U>(xs: T[], fn: (x: T) => U[]): U[] {\n  const ret = new Array<U>();\n  for (const x of xs) {\n    ret.push(...fn(x));\n  }\n  return ret;\n}\n\n/**\n * Map an object's values, skipping 'undefined' values'\n */\nfunction mapValues(\n  value: unknown,\n  fn: (value: any, field: string) => any,\n): { [key: string]: any } {\n  if (typeof value !== 'object' || value == null) {\n    throw new Error(`Expected object type, got ${JSON.stringify(value)}`);\n  }\n\n  const out: { [key: string]: any } = {};\n  for (const [k, v] of Object.entries(value)) {\n    const wireValue = fn(v, k);\n    if (wireValue === undefined) {\n      continue;\n    }\n    out[k] = wireValue;\n  }\n  return out;\n}\n\nfunction propertiesOf(\n  t: spec.Type,\n  lookup: TypeLookup,\n): { [name: string]: spec.Property } {\n  if (!spec.isClassOrInterfaceType(t)) {\n    return {};\n  }\n\n  let ret: { [name: string]: spec.Property } = {};\n\n  if (t.interfaces) {\n    for (const iface of t.interfaces) {\n      ret = { ...ret, ...propertiesOf(lookup(iface), lookup) };\n    }\n  }\n  if (spec.isClassType(t) && t.base) {\n    ret = { ...ret, ...propertiesOf(lookup(t.base), lookup) };\n  }\n\n  for (const prop of t.properties ?? []) {\n    ret[prop.name] = prop;\n  }\n\n  return ret;\n}\n\n/**\n * Tests whether a given type (by it's FQN) can be assigned to a named type reference.\n *\n * @param actualTypeFqn the FQN of the type that is being tested.\n * @param requiredType  the required reference type.\n *\n * @returns true if ``requiredType`` is a super-type (base class or implemented interface) of the type designated by\n *          ``actualTypeFqn``.\n */\nfunction isAssignable(\n  actualTypeFqn: string,\n  requiredType: spec.NamedTypeReference,\n  lookup: TypeLookup,\n): boolean {\n  // The empty object is assignable to everything\n  if (actualTypeFqn === EMPTY_OBJECT_FQN) {\n    return true;\n  }\n\n  if (requiredType.fqn === actualTypeFqn) {\n    return true;\n  }\n  const actualType = lookup(actualTypeFqn);\n  if (spec.isClassType(actualType)) {\n    if (\n      actualType.base &&\n      isAssignable(actualType.base, requiredType, lookup)\n    ) {\n      return true;\n    }\n  }\n  if (spec.isClassOrInterfaceType(actualType) && actualType.interfaces) {\n    return (\n      actualType.interfaces.find((iface) =>\n        isAssignable(iface, requiredType, lookup),\n      ) != null\n    );\n  }\n  return false;\n}\n\nfunction validateRequiredProps(\n  actualProps: { [key: string]: any },\n  typeName: string,\n  specProps: { [key: string]: spec.Property },\n) {\n  // Check for required properties\n  const missingRequiredProps = Object.keys(specProps)\n    .filter((name) => !specProps[name].optional)\n    .filter((name) => !(name in actualProps));\n\n  if (missingRequiredProps.length > 0) {\n    throw new Error(\n      `Missing required properties for ${typeName}: ${missingRequiredProps.join(\n        ', ',\n      )}`,\n    );\n  }\n\n  return actualProps;\n}\n\nfunction compareSerializationClasses(\n  l: SerializationClass,\n  r: SerializationClass,\n): number {\n  const order = [\n    SerializationClass.Void,\n    SerializationClass.Date,\n    SerializationClass.Scalar,\n    SerializationClass.Json,\n    SerializationClass.Enum,\n    SerializationClass.Array,\n    SerializationClass.Map,\n    SerializationClass.Struct,\n    SerializationClass.ReferenceType,\n    SerializationClass.Any,\n  ];\n  return order.indexOf(l) - order.indexOf(r);\n}\n\n/**\n * Determines whether `obj` must be passed by-reference or if by-value is acceptable. For example,\n * objects with methods, or dynamic getters (or setters) should be passed by-reference as a matter\n * of security. The behavior in non-JS runtimes could otherwise differ from that in pure JS (if\n * getters are not stable, etc...).\n *\n * @param obj the object to be tested.\n *\n * @returns true if `obj` must be passed by-reference.\n */\nfunction isByReferenceOnly(obj: any): boolean {\n  if (Array.isArray(obj)) {\n    return false;\n  }\n\n  let curr = obj;\n  // Crawl up the prototype chain to look for dynamic properties or methods.\n  do {\n    for (const prop of Object.getOwnPropertyNames(curr)) {\n      const descr = Object.getOwnPropertyDescriptor(curr, prop);\n      if (\n        descr?.get != null ||\n        descr?.set != null ||\n        typeof descr?.value === 'function'\n      ) {\n        // Property has a dynamic getter, setter or is a constructor/method, so by-ref required!\n        return true;\n      }\n    }\n    // End when the parent proto is `Object`, which has no parent proto itself.\n  } while (Object.getPrototypeOf((curr = Object.getPrototypeOf(curr))) != null);\n\n  return false;\n}\n","import { api, Kernel } from '@jsii/kernel';\nimport { EventEmitter } from 'events';\n\nimport { Input, IInputOutput } from './in-out';\n\nexport class KernelHost {\n  private readonly kernel = new Kernel(this.callbackHandler.bind(this));\n  private readonly eventEmitter = new EventEmitter();\n\n  public constructor(\n    private readonly inout: IInputOutput,\n    private readonly opts: { debug?: boolean; noStack?: boolean } = {},\n  ) {\n    this.kernel.traceEnabled = opts.debug ? true : false;\n  }\n\n  public run() {\n    const req = this.inout.read();\n    if (!req || 'exit' in req) {\n      this.eventEmitter.emit('exit', req?.exit ?? 0);\n      return; // done\n    }\n\n    this.processRequest(req, () => {\n      // Schedule the call to run on the next event loop iteration to\n      // avoid recursion.\n      setImmediate(() => this.run());\n    });\n  }\n\n  public once(event: 'exit', listener: (code: number) => void) {\n    this.eventEmitter.once(event, listener);\n  }\n\n  private callbackHandler(callback: api.Callback) {\n    // write a \"callback\" response, which is a special response that tells\n    // the client that there's synchonous callback it needs to invoke and\n    // bring back the result via a \"complete\" request.\n    this.inout.write({ callback });\n\n    return completeCallback.call(this);\n\n    function completeCallback(this: KernelHost): void {\n      const req = this.inout.read();\n      if (!req || 'exit' in req) {\n        throw new Error('Interrupted before callback returned');\n      }\n\n      // if this is a completion for the current callback, then we can\n      // finally stop this nonsense and return the result.\n      const completeReq = req as { complete: api.CompleteRequest };\n      if (\n        'complete' in completeReq &&\n        completeReq.complete.cbid === callback.cbid\n      ) {\n        if (completeReq.complete.err) {\n          throw new Error(completeReq.complete.err);\n        }\n\n        return completeReq.complete.result;\n      }\n\n      // otherwise, process the request normally, but continue to wait for\n      // our callback to be completed. sync=true to enforce that `completeCallback`\n      // will be called synchronously and return value will be chained back so we can\n      // return it to the callback handler.\n      return this.processRequest(\n        req,\n        completeCallback.bind(this),\n        /* sync */ true,\n      );\n    }\n  }\n\n  /**\n   * Processes the input request `req` and writes the output response to\n   * stdout. This method invokes `next` when the request was fully processed.\n   * This either happens synchronously or asynchronously depending on the api\n   * (e.g. the \"end\" api will wait for an async promise to be fulfilled before\n   * it writes the response)\n   *\n   * @param req The input request\n   * @param next A callback to invoke to continue\n   * @param sync If this is 'true', \"next\" must be called synchronously. This means\n   *             that we won't process any async activity (begin/complete). The kernel\n   *             doesn't allow any async operations during a sync callback, so this shouldn't\n   *             happen, so we assert in this case to find bugs.\n   */\n  private processRequest(req: Input, next: () => void, sync = false) {\n    if ('callback' in req) {\n      throw new Error(\n        'Unexpected `callback` result. This request should have been processed by a callback handler',\n      );\n    }\n\n    if (!('api' in req)) {\n      throw new Error('Malformed request, \"api\" field is required');\n    }\n\n    const apiReq = req;\n    const fn = this.findApi(apiReq.api);\n\n    try {\n      const ret = fn.call(this.kernel, req);\n\n      // special case for 'begin' and 'complete' which are on an async\n      // promise path. in order to allow the kernel to actually fulfill\n      // the promise, and continue any async flows (which may potentially\n      // start other promises), we respond only within a setImmediate\n      // block, which is scheduled in the same micro-tasks queue as\n      // promises. see the kernel test 'async overrides: two overrides'\n      // for an example for this use case.\n      if (apiReq.api === 'begin' || apiReq.api === 'complete') {\n        checkIfAsyncIsAllowed();\n\n        this.debug('processing pending promises before responding');\n\n        setImmediate(() => {\n          this.writeOkay(ret);\n          next();\n        });\n\n        return undefined;\n      }\n\n      // if this is an async method, return immediately and\n      // call next only when the promise is fulfilled.\n      if (this.isPromise(ret)) {\n        checkIfAsyncIsAllowed();\n\n        this.debug('waiting for promise to be fulfilled');\n\n        const promise = ret;\n        promise\n          .then((val) => {\n            this.debug('promise succeeded:', val);\n            this.writeOkay(val);\n            next();\n          })\n          .catch((e) => {\n            this.debug('promise failed:', e);\n            this.writeError(e);\n            next();\n          });\n\n        return undefined;\n      }\n\n      this.writeOkay(ret);\n    } catch (e) {\n      this.writeError(e);\n    }\n\n    // indicate this request was processed (synchronously).\n    return next();\n\n    function checkIfAsyncIsAllowed() {\n      if (sync) {\n        throw new Error(\n          'Cannot handle async operations while waiting for a sync callback to return',\n        );\n      }\n    }\n  }\n\n  /**\n   * Writes an \"ok\" result to stdout.\n   */\n  private writeOkay(result: any) {\n    const res = { ok: result };\n    this.inout.write(res);\n  }\n\n  /**\n   * Writes an \"error\" result to stdout.\n   */\n  private writeError(error: any) {\n    const res = { error: error.message, stack: undefined };\n    if (!this.opts.noStack) {\n      res.stack = error.stack;\n    }\n    this.inout.write(res);\n  }\n\n  /**\n   * Returns true if the value is a promise.\n   */\n  private isPromise(v: any): v is Promise<any> {\n    return typeof v?.then === 'function';\n  }\n\n  /**\n   * Given a kernel api name, returns the function to invoke.\n   */\n  private findApi(apiName: string): (this: Kernel, arg: Input) => any {\n    const fn = (this.kernel as any)[apiName];\n    if (typeof fn !== 'function') {\n      throw new Error(`Invalid kernel api call: ${apiName}`);\n    }\n    return fn;\n  }\n\n  private debug(...args: any[]) {\n    if (!this.opts.debug) {\n      return;\n    }\n\n    console.error(...args);\n  }\n}\n","import { api } from '@jsii/kernel';\n\nimport { SyncStdio } from './sync-stdio';\n\nexport type Output =\n  | { hello: string }\n  | { ok: api.KernelResponse }\n  | { callback: api.Callback }\n  | { pending: true }\n  | { error: string; stack?: string };\n\nexport type Input =\n  | ({ api: string } & api.KernelRequest)\n  | { complete: api.CompleteRequest };\n\nexport type Exit = { exit: number };\n\n/**\n * An IO provider for jsii API exchanges.\n */\nexport interface IInputOutput {\n  /**\n   * Writes a message to the jsii API host.\n   * @param message the message to be sent.\n   */\n  write(message: Output): void;\n\n  /**\n   * Wait for a message from the jsii API host, then return it.\n   *\n   * @returns the received message, or `undefined` if the API host has no more\n   *          requests to send.\n   */\n  read(): Input | Exit | undefined;\n}\n\nexport class InputOutput implements IInputOutput {\n  public debug = false;\n\n  public constructor(private readonly stdio: SyncStdio) {}\n\n  public write(obj: Output) {\n    const output = JSON.stringify(obj);\n    this.stdio.writeLine(output);\n\n    if (this.debug) {\n      this.stdio.writeErrorLine(`< ${output}`);\n    }\n  }\n\n  public read(): Input | undefined {\n    let reqLine = this.stdio.readLine();\n    if (!reqLine) {\n      return undefined;\n    }\n\n    // skip recorded responses\n    if (reqLine.startsWith('< ')) {\n      return this.read();\n    }\n\n    // stip \"> \" from recorded requests\n    if (reqLine.startsWith('> ')) {\n      reqLine = reqLine.substr(2);\n    }\n\n    const input = JSON.parse(reqLine);\n\n    if (this.debug) {\n      this.stdio.writeErrorLine(`> ${JSON.stringify(input)}`);\n    }\n\n    return input;\n  }\n}\n","import * as fs from 'fs';\n\nconst INPUT_BUFFER_SIZE = 1_048_576; // 1MiB (aka: 1024 * 1024), not related to max line length\n\nexport class SyncStdio {\n  private bufferedData = Buffer.alloc(0);\n\n  private readonly stderr: number;\n  private readonly stdin: number;\n  private readonly stdout: number;\n\n  // A buffer that will be used for all reading operations.\n  private readonly readBuffer = Buffer.alloc(INPUT_BUFFER_SIZE);\n\n  public constructor({ errorFD, readFD, writeFD }: SyncStdioOptions) {\n    this.stderr = errorFD;\n    this.stdin = readFD;\n    this.stdout = writeFD;\n  }\n\n  public writeErrorLine(line: string) {\n    this.writeBuffer(Buffer.from(`${line}\\n`), this.stderr);\n  }\n\n  public writeLine(line: string) {\n    this.writeBuffer(Buffer.from(`${line}\\n`), this.stdout);\n  }\n\n  public readLine(): string | undefined {\n    while (!this.bufferedData.includes('\\n', 0, 'utf-8')) {\n      const read = fs.readSync(\n        this.stdin,\n        this.readBuffer,\n        0,\n        this.readBuffer.length,\n        null,\n      );\n\n      if (read === 0) {\n        return undefined;\n      }\n\n      const newData = this.readBuffer.slice(0, read);\n      this.bufferedData = Buffer.concat([this.bufferedData, newData]);\n    }\n\n    const newLinePos = this.bufferedData.indexOf('\\n', 0, 'utf-8');\n    const next = this.bufferedData.slice(0, newLinePos).toString('utf-8');\n    this.bufferedData = this.bufferedData.slice(newLinePos + 1);\n\n    return next;\n  }\n\n  private writeBuffer(buffer: Buffer, fd: number) {\n    let offset = 0;\n    while (offset < buffer.length) {\n      try {\n        offset += fs.writeSync(fd, buffer, offset);\n      } catch (e) {\n        // We might get EAGAIN if the file descriptor was not opened for\n        // blocking (O_SYNC) writes. In such cases, we'll keep trying until it\n        // succeeds. This shouldn't take long as the process on the other side\n        // is expected to actively wait for data on those pipes.\n        if (e.code !== 'EAGAIN') {\n          throw e;\n        }\n      }\n    }\n  }\n}\n\nexport interface SyncStdioOptions {\n  /**\n   * The file descriptor from which data is to be read. This MUST be opened for\n   * blocking (O_SYNC) reading.\n   */\n  readonly readFD: number;\n\n  /**\n   * The file descriptor to which data is to be written. This SHOULD be opened\n   * for blocking (O_SYNC) writing.\n   */\n  readonly writeFD: number;\n\n  /**\n   * The file descriptor to which errors data is to be written. This SHOULD be\n   * opened for blocking (O_SYNC) writing.\n   */\n  readonly errorFD: number;\n}\n","export const SPEC_FILE_NAME = '.jsii';\n\n/**\n * A JSII assembly specification.\n */\nexport interface Assembly extends AssemblyConfiguration, Documentable {\n  /**\n   * The version of the spec schema\n   */\n  schema: SchemaVersion.LATEST;\n\n  /**\n   * The name of the assembly\n   *\n   * @minLength 1\n   */\n  name: string;\n\n  /**\n   * Description of the assembly, maps to \"description\" from package.json\n   * This is required since some package managers (like Maven) require it.\n   */\n  description: string;\n\n  /**\n   * The url to the project homepage. Maps to \"homepage\" from package.json.\n   */\n  homepage: string;\n\n  /**\n   * The module repository, maps to \"repository\" from package.json\n   * This is required since some package managers (like Maven) require it.\n   */\n  repository: {\n    /**\n     * The type of the repository (``git``, ``svn``, ...)\n     */\n    type: string;\n\n    /**\n     * The URL of the repository.\n     */\n    url: string;\n\n    /**\n     * If the package is not in the root directory (for example, when part\n     * of a monorepo), you should specify the directory in which it lives.\n     *\n     * @default the root of the repository\n     */\n    directory?: string;\n  };\n\n  /**\n   * The main author of this package.\n   */\n  author: Person;\n\n  /**\n   * Additional contributors to this package.\n   *\n   * @default none\n   */\n  contributors?: Person[];\n\n  /**\n   * A fingerprint that can be used to determine if the specification has\n   * changed.\n   *\n   * @minLength 1\n   */\n  fingerprint: string;\n\n  /**\n   * The version of the assembly\n   * @minLength 1\n   */\n  version: string;\n\n  /**\n   * The version of the jsii compiler that was used to produce this Assembly.\n   * @minLength 1\n   */\n  jsiiVersion: string;\n\n  /**\n   * The SPDX name of the license this assembly is distributed on.\n   */\n  license: string;\n\n  /**\n   * Arbitrary key-value pairs of metadata, which the maintainer chose to\n   * document with the assembly. These entries do not carry normative\n   * semantics and their interpretation is up to the assembly maintainer.\n   *\n   * @default none\n   */\n  metadata?: { [key: string]: any };\n\n  /**\n   * Keywords that help discover or identify this packages with respects to it's\n   * intended usage, audience, etc... Where possible, this will be rendered in\n   * the corresponding metadata section of idiomatic package manifests, for\n   * example NuGet package tags.\n   */\n  keywords?: string[];\n\n  /**\n   * Direct dependencies on other assemblies (with semver), the key is the JSII\n   * assembly name, and the value is a SemVer expression.\n   *\n   * @default none\n   */\n  dependencies?: { [assembly: string]: string };\n\n  /**\n   * Target configuration for all the assemblies that are direct or transitive\n   * dependencies of this assembly. This is needed to generate correct native\n   * type names for any transitively inherited member, in certain languages.\n   *\n   * @default none\n   */\n  dependencyClosure?: { [assembly: string]: AssemblyConfiguration };\n\n  /**\n   * List if bundled dependencies (these are not expected to be jsii\n   * assemblies).\n   *\n   * @default none\n   */\n  bundled?: { [module: string]: string };\n\n  /**\n   * All types in the assembly, keyed by their fully-qualified-name\n   *\n   * @default none\n   */\n  types?: { [fqn: string]: Type };\n\n  /**\n   * List of bin-scripts\n   *\n   * @default none\n   */\n  bin?: { readonly [script: string]: string };\n}\n\n/**\n * Shareable configuration of a jsii Assembly.\n */\nexport interface AssemblyConfiguration extends Targetable {\n  /**\n   * Submodules declared in this assembly.\n   *\n   * @default none\n   */\n  submodules?: { [fqn: string]: Submodule };\n}\n\n/**\n * A targetable module-like thing\n *\n * Has targets and a readme. Used for Assemblies and Submodules.\n */\nexport interface Targetable {\n  /**\n   * A map of target name to configuration, which is used when generating\n   * packages for various languages.\n   *\n   * @default none\n   */\n  targets?: AssemblyTargets;\n\n  /**\n   * The readme document for this module (if any).\n   *\n   * @default none\n   */\n  readme?: ReadMe;\n}\n\n/**\n * README information\n */\nexport interface ReadMe {\n  markdown: string;\n}\n\n/**\n * A submodule\n *\n * The difference between a top-level module (the assembly) and a submodule is\n * that the submodule is annotated with its location in the repository.\n */\nexport type Submodule = SourceLocatable & Targetable;\n\n/**\n * Versions of the JSII Assembly Specification.\n */\nexport enum SchemaVersion {\n  LATEST = 'jsii/0.10.0',\n}\n\n/**\n * Fully Qualified Name\n */\nexport type FQN = string;\n\n/**\n * Metadata about people or organizations associated with the project that\n * resulted in the Assembly. Some of this metadata is required in order to\n * publish to certain package repositories (for example, Maven Central), but is\n * not normalized, and the meaning of fields (role, for example), is up to each\n * project maintainer.\n */\nexport interface Person {\n  /**\n   * The name of the person\n   */\n  name: string;\n\n  /**\n   * A list of roles this person has in the project, for example `maintainer`,\n   * `contributor`, `owner`, ...\n   */\n  roles: string[];\n\n  /**\n   * The email of the person\n   *\n   * @default none\n   */\n  email?: string;\n\n  /**\n   * The URL for the person\n   *\n   * @default none\n   */\n  url?: string;\n\n  /**\n   * If true, this person is, in fact, an organization\n   *\n   * @default false\n   */\n  organization?: boolean;\n}\n\n/**\n * Configurable targets for an asembly.\n */\nexport interface AssemblyTargets {\n  /**\n   * Information about a particular language's targets\n   */\n  [language: string]: { [key: string]: any } | undefined;\n}\n\n/**\n * Where in the module source the definition for this API item was found\n */\nexport interface SourceLocation {\n  /**\n   * Relative filename\n   */\n  filename: string;\n\n  /**\n   * 1-based line number in the indicated file\n   */\n  line: number;\n}\n\n/**\n * Key value pairs of documentation nodes.\n * Based on TSDoc.\n */\nexport interface Docs {\n  /**\n   * Summary documentation for an API item.\n   *\n   * The first part of the documentation before hitting a `@remarks` tags, or\n   * the first line of the doc comment block if there is no `@remarks` tag.\n   *\n   * @default none\n   */\n  summary?: string;\n\n  /**\n   * Detailed information about an API item.\n   *\n   * Either the explicitly tagged `@remarks` section, otherwise everything\n   * past the first paragraph if there is no `@remarks` tag.\n   *\n   * @default none\n   */\n  remarks?: string;\n\n  /**\n   * If present, this block indicates that an API item is no longer supported\n   * and may be removed in a future release.  The `@deprecated` tag must be\n   * followed by a sentence describing the recommended alternative.\n   * Deprecation recursively applies to members of a container. For example,\n   * if a class is deprecated, then so are all of its members.\n   *\n   * @default none\n   */\n  deprecated?: string;\n\n  /**\n   * The `@returns` block for this doc comment, or undefined if there is not\n   * one.\n   *\n   * @default none\n   */\n  returns?: string;\n\n  /**\n   * Whether the API item is beta/experimental quality\n   */\n  stability?: Stability;\n\n  /**\n   * Example showing the usage of this API item\n   *\n   * Starts off in running text mode, may switch to code using fenced code\n   * blocks.\n   *\n   * @default none\n   */\n  example?: string;\n\n  /**\n   * A `@see` link with more information\n   *\n   * @default none\n   */\n  see?: string;\n\n  /**\n   * Whether this class or interface was intended to be subclassed/implemented\n   * by library users.\n   *\n   * Classes intended for subclassing, and interfaces intended to be\n   * implemented by consumers, are held to stricter standards of API\n   * compatibility.\n   *\n   * @default false\n   */\n  subclassable?: boolean;\n\n  /**\n   * Description of the default\n   *\n   * @default none\n   */\n  default?: string;\n\n  /**\n   * Custom tags that are not any of the default ones\n   *\n   * @default none\n   */\n  custom?: { [tag: string]: string };\n}\n\n/**\n * API Stability levels. These are modeled after the `node` stability index.\n *\n * @see https://nodejs.org/api/documentation.html#documentation_stability_index.\n */\nexport enum Stability {\n  /**\n   * The API may emit warnings. Backward compatibility is not guaranteed.\n   *\n   * More information about the deprecation can usually be found in the\n   * `deprecated` field.\n   */\n  Deprecated = 'deprecated',\n\n  /**\n   * This API is still under active development and subject to non-backward\n   * compatible changes or removal in any future version. Use of the API is\n   * not recommended in production environments. Experimental APIs are not\n   * subject to the Semantic Versioning model.\n   */\n  Experimental = 'experimental',\n\n  /**\n   * This API is subject to the Semantic Versioning model and may not change\n   * in breaking ways in a subsequent minor or patch version.\n   */\n  Stable = 'stable',\n\n  /**\n   * This API is an representation of an API managed elsewhere and follows\n   * the other API's versioning model.\n   */\n  External = 'external',\n}\n\n/**\n * Indicates that an entity is documentable.\n */\nexport interface Documentable {\n  /**\n   * Documentation for this entity.\n   *\n   * @default none\n   */\n  docs?: Docs;\n}\n\n/**\n * Indicates that an entity has a source location\n */\nexport interface SourceLocatable {\n  /**\n   * Where in the module this definition was found\n   *\n   * Why is this not `locationInAssembly`? Because the assembly is the JSII\n   * file combining compiled code and its manifest, whereas this is referring\n   * to the location of the source in the module the assembly was built from.\n   *\n   * @default none\n   */\n  locationInModule?: SourceLocation;\n}\n\n/**\n * Kinds of collections.\n */\nexport enum CollectionKind {\n  /**\n   * An array, or a list of some element type.\n   */\n  Array = 'array',\n  /**\n   * A map of a string to some element type.\n   */\n  Map = 'map',\n}\n\n/**\n * Kinds of primitive types.\n */\nexport enum PrimitiveType {\n  /**\n   * A JSON date (represented as it's ISO-8601 string form).\n   */\n  Date = 'date',\n\n  /**\n   * A plain string.\n   */\n  String = 'string',\n\n  /**\n   * A number (integer or float).\n   */\n  Number = 'number',\n\n  /**\n   * A boolean value.\n   */\n  Boolean = 'boolean',\n\n  /**\n   * A JSON object\n   */\n  Json = 'json',\n\n  /**\n   * Value with \"any\" or \"unknown\" type (aka Object). Values typed `any` may\n   * be `null` or `undefined`.\n   */\n  Any = 'any',\n}\n\n/**\n * A value that can possibly be optional.\n */\nexport interface OptionalValue {\n  /**\n   * Determines whether the value is, indeed, optional.\n   *\n   * @default false\n   */\n  optional?: boolean;\n\n  /**\n   * The declared type of the value, when it's present.\n   */\n  type: TypeReference;\n}\n\n/**\n * A reference to a type (primitive, collection or fqn).\n */\nexport type TypeReference =\n  | NamedTypeReference\n  | PrimitiveTypeReference\n  | CollectionTypeReference\n  | UnionTypeReference;\n\n/**\n * The standard representation of the `any` type (includes optionality marker).\n */\nexport const CANONICAL_ANY: Readonly<PrimitiveTypeReference> = {\n  primitive: PrimitiveType.Any,\n};\n\n/**\n * Reference to a named type, defined by this assembly or one of its\n * dependencies.\n */\nexport interface NamedTypeReference {\n  /**\n   * The fully-qualified-name of the type (can be located in the\n   * ``spec.types[fqn]``` of the assembly that defines the type).\n   */\n  fqn: FQN;\n}\nexport function isNamedTypeReference(\n  ref: TypeReference | undefined,\n): ref is NamedTypeReference {\n  return !!(ref as NamedTypeReference)?.fqn;\n}\n\n/**\n * Reference to a primitive type.\n */\nexport interface PrimitiveTypeReference {\n  /**\n   * If this is a reference to a primitive type, this will include the\n   * primitive type kind.\n   */\n  primitive: PrimitiveType;\n}\nexport function isPrimitiveTypeReference(\n  ref: TypeReference | undefined,\n): ref is PrimitiveTypeReference {\n  return !!(ref as PrimitiveTypeReference)?.primitive;\n}\n\n/**\n * Reference to a collection type.\n */\nexport interface CollectionTypeReference {\n  collection: {\n    /**\n     * The kind of collection.\n     */\n    kind: CollectionKind;\n\n    /**\n     * The type of an element (map keys are always strings).\n     */\n    elementtype: TypeReference;\n  };\n}\nexport function isCollectionTypeReference(\n  ref: TypeReference | undefined,\n): ref is CollectionTypeReference {\n  return !!(ref as CollectionTypeReference)?.collection;\n}\n\n/**\n * Reference to a union type.\n */\nexport interface UnionTypeReference {\n  /**\n   * Indicates that this is a union type, which means it can be one of a set\n   * of types.\n   */\n  union: {\n    /**\n     * All the possible types (including the primary type).\n     *\n     * @minItems 2\n     */\n    types: TypeReference[];\n  };\n}\nexport function isUnionTypeReference(\n  ref: TypeReference | undefined,\n): ref is UnionTypeReference {\n  return !!(ref as UnionTypeReference)?.union;\n}\n\n/**\n * Methods and properties can be overridden from parent classes or implemented\n * from interfaces.\n */\nexport interface Overridable {\n  /**\n   * The FQN of the parent type (class or interface) that this entity\n   * overrides or implements. If undefined, then this entity is the first in\n   * it's hierarchy to declare this entity.\n   *\n   * @default this member is not overriding anything\n   */\n  overrides?: FQN;\n}\n\n/**\n * A class property.\n */\nexport interface Property\n  extends Documentable,\n    OptionalValue,\n    Overridable,\n    SourceLocatable {\n  /**\n   * The name of the property.\n   *\n   * @minLength 1\n   */\n  name: string;\n\n  /**\n   * Indicates if this property only has a getter (immutable).\n   *\n   * @default false\n   */\n  immutable?: boolean;\n\n  /**\n   * Indicates if this property is protected (otherwise it is public)\n   *\n   * @default false\n   */\n  protected?: boolean;\n\n  /**\n   * Indicates if this property is abstract\n   *\n   * @default false\n   */\n  abstract?: boolean;\n\n  /**\n   * Indicates if this is a static property.\n   *\n   * @default false\n   */\n  static?: boolean;\n\n  /**\n   * A hint that indicates that this static, immutable property is initialized\n   * during startup. This allows emitting \"const\" idioms in different target\n   * languages. Implies `static` and `immutable`.\n   *\n   * @default false\n   */\n  const?: boolean;\n}\n\n/**\n * Represents a method parameter.\n */\nexport interface Parameter extends Documentable, OptionalValue {\n  /**\n   * The name of the parameter.\n   *\n   * @minLength 1\n   */\n  name: string;\n\n  /**\n   * Whether this is the last parameter of a variadic method. In such cases,\n   * the `#type` attribute is the type of each individual item of the variadic\n   * arguments list (as opposed to some array type, as for example TypeScript\n   * would model it).\n   *\n   * @default false\n   */\n  variadic?: boolean;\n}\n\n/**\n * An Initializer or a Method.\n */\nexport interface Callable extends Documentable, Overridable, SourceLocatable {\n  /**\n   * The parameters of the Initializer or Method.\n   *\n   * @default none\n   */\n  parameters?: Parameter[];\n\n  /**\n   * Indicates if this Initializer or Method is protected (otherwise it is\n   * public, since private members are not modeled).\n   *\n   * @default false\n   */\n  protected?: boolean;\n\n  /**\n   * Indicates whether this Initializer or Method is variadic or not. When\n   * ``true``, the last element of ``#parameters`` will also be flagged\n   * ``#variadic``.\n   *\n   * @default false\n   */\n  variadic?: boolean;\n}\n\n/**\n * An initializer.\n */\nexport type Initializer = Callable;\n\n/**\n * A method with a name (i.e: not an initializer).\n */\nexport interface Method extends Callable {\n  /**\n   * The name of the method. Undefined if this method is a initializer.\n   */\n  name: string;\n\n  /**\n   * The return type of the method (`undefined` if `void`)\n   *\n   * @default void\n   */\n  returns?: OptionalValue;\n\n  /**\n   * Is this method an abstract method (this means the class will also be an abstract class)\n   *\n   * @default false\n   */\n  abstract?: boolean;\n\n  /**\n   * Indicates if this is an asynchronous method (it will return a promise).\n   *\n   * @default false\n   */\n  async?: boolean;\n\n  /**\n   * Indicates if this is a static method.\n   *\n   * @default false\n   */\n  static?: boolean;\n}\n/**\n * Determines whether a Callable is a Method or not.\n *\n * @param callable the callable to be checked.\n */\nexport function isMethod(callable: Callable): callable is Method {\n  return !!(callable as Method).name;\n}\n\n/**\n * Represents a type definition (not a type reference).\n */\nexport type Type = TypeBase & (ClassType | EnumType | InterfaceType);\n\n/**\n * Common attributes of a type definition.\n */\nexport interface TypeBase extends Documentable, SourceLocatable {\n  /**\n   * The fully qualified name of the type (``<assembly>.<namespace>.<name>``)\n   *\n   * @minLength 3\n   */\n  fqn: FQN;\n\n  /**\n   * The name of the assembly the type belongs to.\n   *\n   * @minLength 1\n   */\n  assembly: string;\n\n  /**\n   * The namespace of the type (`foo.bar.baz`).\n   *\n   * When undefined, the type is located at the root of the assembly (its\n   * `fqn` would be like `<assembly>.<name>`).\n   *\n   * For types inside other types or inside submodules, the `<namespace>` corresponds to\n   * the namespace-qualified name of the container (can contain multiple segments like:\n   * `<ns1>.<ns2>.<ns3>`).\n   *\n   * In all cases:\n   *\n   *  <fqn> = <assembly>[.<namespace>].<name>\n   *\n   * @default none\n   */\n  namespace?: string;\n\n  /**\n   * The simple name of the type (MyClass).\n   *\n   * @minLength 1\n   */\n  name: string;\n\n  /**\n   * The kind of the type.\n   */\n  kind: TypeKind;\n}\n\n/**\n * Kinds of types.\n */\nexport enum TypeKind {\n  Class = 'class',\n  Enum = 'enum',\n  Interface = 'interface',\n}\n\n/**\n * Represents classes.\n */\nexport interface ClassType extends TypeBase {\n  kind: TypeKind.Class;\n\n  /**\n   * The FQN of the base class of this class, if it has one.\n   *\n   * @default no base class\n   */\n  base?: FQN;\n\n  /**\n   * Initializer (constructor) method.\n   *\n   * @default no initializer\n   */\n  initializer?: Initializer;\n\n  /**\n   * List of properties.\n   *\n   * @default none\n   */\n  properties?: Property[];\n\n  /**\n   * List of methods.\n   *\n   * @default none\n   */\n  methods?: Method[];\n\n  /**\n   * Indicates if this class is an abstract class.\n   *\n   * @default false\n   */\n  abstract?: boolean;\n\n  /**\n   * The FQNs of the interfaces this class implements, if any.\n   *\n   * @default none\n   * @uniqueItems true\n   */\n  interfaces?: FQN[];\n}\n\nexport function isClassType(type: Type | undefined): type is ClassType {\n  return type?.kind === TypeKind.Class;\n}\n\nexport interface InterfaceType extends TypeBase {\n  kind: TypeKind.Interface;\n\n  /**\n   * The FQNs of the interfaces this interface extends, if any.\n   *\n   * @default none\n   * @uniqueItems true\n   */\n  interfaces?: FQN[];\n\n  /**\n   * List of methods.\n   *\n   * @default none\n   */\n  methods?: Method[];\n\n  /**\n   * List of properties.\n   *\n   * @default none\n   */\n  properties?: Property[];\n\n  /**\n   * True if this interface only contains properties. Different backends might\n   * have idiomatic ways to allow defining concrete instances such interfaces.\n   * For example, in Java, the generator will produce a PoJo and a builder\n   * which will allow users to create a concrete object with data which\n   * adheres to this interface.\n   *\n   * @default false\n   */\n  datatype?: boolean;\n}\n\nexport function isInterfaceType(type: Type | undefined): type is InterfaceType {\n  return type?.kind === TypeKind.Interface;\n}\n\n/**\n * Represents a member of an enum.\n */\nexport interface EnumMember extends Documentable {\n  /**\n   * The name/symbol of the member.\n   */\n  name: string;\n}\n\n/**\n * Represents an enum type.\n */\nexport interface EnumType extends TypeBase {\n  kind: TypeKind.Enum;\n\n  /**\n   * Members of the enum.\n   */\n  members: EnumMember[];\n}\n\nexport function isEnumType(type: Type | undefined): type is EnumType {\n  return type?.kind === TypeKind.Enum;\n}\n\n/**\n * Return whether this type is a class or interface type\n */\nexport function isClassOrInterfaceType(\n  type: Type | undefined,\n): type is InterfaceType | ClassType {\n  return isClassType(type) || isInterfaceType(type);\n}\n\n/**\n * Return a string representation of the given type reference.\n */\nexport function describeTypeReference(type?: TypeReference): string {\n  if (type === undefined) {\n    return 'void';\n  }\n\n  if (isNamedTypeReference(type)) {\n    return type.fqn;\n  }\n\n  if (isPrimitiveTypeReference(type)) {\n    return type.primitive;\n  }\n\n  if (isCollectionTypeReference(type)) {\n    return `${type.collection.kind}<${describeTypeReference(\n      type.collection.elementtype,\n    )}>`;\n  }\n\n  if (isUnionTypeReference(type)) {\n    const unionType = type.union.types.map(describeTypeReference).join(' | ');\n    return unionType;\n  }\n\n  throw new Error('Unrecognized type reference');\n}\n\n/**\n * Determines whether an entity is deprecated.\n *\n * @param entity the entity to be checked.\n *\n * @returns true if the entity is marked as deprecated.\n */\nexport function isDeprecated(entity: Documentable): boolean {\n  return entity?.docs?.stability === Stability.Deprecated;\n}\n","export * from './assembly';\nexport * from './configuration';\nexport * from './name-tree';\nexport * from './validate-assembly';\n","import * as spec from './assembly';\n\n/**\n * A tree of all names in a module. A node represent a type (terminal)\n * and may represent another node in the namespace (at the same time).\n * Therefore, a key of '_' represents a terminal and references the fqn\n * of the type.\n *\n * For example, say we have the following types:\n *   - aws.ec2.Host\n *   - aws.ec2.Instance\n *   - aws.ec2.Instance.Subtype\n *\n * the the name tree will look like this:\n *\n * module: {\n *   children: {\n *     aws: {\n *       children {\n *         ec2: {\n *           children: {\n *             Host: {\n *               fqn: 'aws.ec2.Host',\n *               children: {}\n *             },\n *             Instance: {\n *               fqn: 'aws.ec2.Host',\n *               children: {\n *                 Subtype: {\n *                   fqn: 'aws.ec2.Host.Subtype',\n *                   children: {}\n *                 }\n *               }\n *             }\n *           }\n *         }\n *       }\n *     }\n *   }\n * }\n */\nexport class NameTree {\n  public static of(assm: spec.Assembly): NameTree {\n    const nameTree = new NameTree();\n    for (const type of Object.values(assm.types ?? {})) {\n      nameTree.register(type.fqn);\n    }\n    return nameTree;\n  }\n\n  private _children: { [name: string]: NameTree } = {};\n  private _fqn?: string;\n\n  /* NameTree.of(assembly) should be used. */\n  private constructor() {}\n\n  /** The children of this node, by name. */\n  public get children(): { readonly [name: string]: NameTree } {\n    return this._children;\n  }\n\n  /** The fully qualified name of the type at this node, if there is one. */\n  public get fqn(): string | undefined {\n    return this._fqn;\n  }\n\n  /**\n   * Adds a type to this ``NameTree``.\n   *\n   * @param type the type to be added.\n   * @param path the path at which to add the node under this tree.\n   */\n  private register(fqn: string, path: string[] = fqn.split('.')): this {\n    if (path.length === 0) {\n      this._fqn = fqn;\n    } else {\n      const [head, ...rest] = path;\n      if (!this._children[head]) {\n        this._children[head] = new NameTree();\n      }\n      this._children[head]!.register(fqn, rest);\n    }\n    return this;\n  }\n}\n","import { Schema, Validator } from 'jsonschema';\n\nimport { Assembly } from './assembly';\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nexport const schema: Schema = require('../schema/jsii-spec.schema.json');\n\nexport function validateAssembly(obj: any): Assembly {\n  const validator = new Validator();\n  validator.addSchema(schema); // For definitions\n  const result = validator.validate(obj, schema, { nestedErrors: true } as any); // nestedErrors does exist but is not in the TypeScript definitions\n  if (result.valid) {\n    return obj;\n  }\n  throw new Error(`Invalid assembly:\\n${result.toString()}`);\n}\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"constants\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"vm\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import * as process from 'process';\n\nimport * as packageInfo from '../package.json';\nimport { KernelHost } from './host';\nimport { InputOutput } from './in-out';\nimport { SyncStdio } from './sync-stdio';\n\nconst name = packageInfo.name;\nconst version = packageInfo.version;\n\nconst noStack = !!process.env.JSII_NOSTACK;\nconst debug = !!process.env.JSII_DEBUG;\n\n// This assumes FD#3 is opened for reading and writing. This is normally\n// performed by`bin/jsii-runtime.js`, and we will not be verifying this once\n// again...Meaning that failure to have set this up correctly results in\n// undefined behavior(likely a crash).\nconst stdio = new SyncStdio({\n  // \"process.stderr.fd\" is not in @types/node definitions because it can be\n  // absent in certain circumstances (for example, in `worker_threads` workers).\n  // We'll fall-back to `2` - its expected value - in this case; but this is not\n  // supposed to be happening here (we don't use `worker_threads`).\n  errorFD: (process.stderr as any).fd ?? 2,\n  readFD: 3,\n  writeFD: 3,\n});\n\nconst inout = new InputOutput(stdio);\nconst host = new KernelHost(inout, { debug, noStack });\n\nhost.once('exit', process.exit.bind(process));\n\n// say hello\ninout.write({ hello: `${name}@${version}` });\ninout.debug = debug; // we don't want \"hello\" emitted\n\nhost.run();\n"],"names":["module","exports","r","n","process","versions","node","split","map","x","parseInt","fs","path","LCHOWN","lchown","LCHOWNSYNC","lchownSync","needEISDIRHandled","version","match","uid","gid","er","code","chownSync","handleEISDIR","cb","chown","_","__","___","handleEISDirSync","nodeVersion","readdir","options","readdirSync","test","cpath","chownrKid","p","child","lstat","resolve","stats","name","isDirectory","chownr","withFileTypes","children","length","len","errState","then","forEach","chownrKidSync","lstatSync","chownrSync","sync","mkdirsSync","utimesMillisSync","stat","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","arch","console","warn","checkPathsSync","checkParentPathsSync","srcStat","handleFilterAndCopy","destStat","destParent","dirname","existsSync","startCopy","getStats","statSync","dereference","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlinkSync","errorOnExist","Error","copyFileSync","handleTimestamps","mode","setDestMode","srcMode","fileIsNotWritable","makeFileWritable","setDestTimestamps","chmodSync","updatedSrcStat","atime","mtime","mkDirAndCopy","copyDir","mkdirSync","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","cwd","symlinkSync","resolvedDest","err","isSrcSubdir","copyLink","mkdirs","pathExists","utimesMillis","copy","checkPaths","checkParentPaths","handleFilter","checkParentDir","dirExists","onInclude","Promise","include","error","unlink","handleTimestampsAndMode","setDestTimestampsAndMode","chmod","mkdir","items","copyDirItems","pop","readlink","symlink","u","remove","emptyDir","dir","callback","deleteItem","emptyDirSync","removeSync","emptydirSync","emptydir","createFile","file","makeFile","writeFile","createFileSync","writeFileSync","link","ensureFile","ensureFileSync","createLink","createLinkSync","ensureLink","ensureLinkSync","createSymlink","createSymlinkSync","ensureSymlink","ensureSymlinkSync","srcpath","dstpath","makeLink","destinationExists","message","replace","undefined","linkSync","symlinkPaths","isAbsolute","toCwd","toDst","dstdir","relativeToDst","exists","relative","symlinkPathsSync","symlinkType","type","symlinkTypeSync","_mkdirs","_symlinkPaths","_symlinkType","api","key","Object","keys","method","filename","read","fd","buffer","offset","position","reject","bytesRead","write","args","bytesWritten","writev","buffers","realpath","native","getOwnPropertyDescriptor","defineProperty","get","promises","jsonFile","outputJson","outputJsonSync","outputJSON","outputJSONSync","writeJSON","writeJson","writeJSONSync","writeJsonSync","readJSON","readJson","readJSONSync","readJsonSync","readFile","readFileSync","data","str","stringify","outputFileSync","async","outputFile","makeDir","_makeDir","makeDirSync","mkdirp","mkdirpSync","ensureDir","ensureDirSync","atLeastNode","useNativeRecursiveOption","checkPath","pth","platform","pathHasInvalidWinCharacters","parse","root","processOptions","defaults","permissionError","errno","syscall","input","recursive","make","includes","moveSync","doRename","rename","renameSync","moveAcrossDevice","move","destExists","encoding","itDoes","access","catch","pathExistsSync","rimraf","assert","isWindows","methods","m","maxBusyTries","busyTries","strictEqual","rimraf_","CB","time","setTimeout","st","fixWinEPERM","rmdir","er2","er3","fixWinEPERMSync","rmdirSync","originalEr","rmkids","files","f","rimrafSync","rmkidsSync","startTime","Date","now","ret","util","nodeSupportsBigInt","bigint","all","getStatsSync","funcName","callbackify","areIdentical","errMsg","srcParent","ino","dev","Number","MAX_SAFE_INTEGER","size","nlink","atimeMs","mtimeMs","ctimeMs","birthtimeMs","srcArr","sep","i","destArr","reduce","acc","cur","open","futimes","futimesErr","close","closeErr","openSync","futimesSync","closeSync","fn","apply","this","call","res","value","slice","MiniPass","EE","binding","FSReqWrap","FSReqCallback","iovec","pos","done","bw","req","oncomplete","writeBuffers","_autoClose","Symbol","_close","_ended","_fd","_finished","_flags","_flush","_handleChunk","_makeBuf","_mode","_needDrain","_onerror","_onopen","_onread","_onwrite","_open","_path","_pos","_queue","_read","_readSize","_reading","_remain","_size","_write","_writing","_defaultFlag","_errored","ReadStream","constructor","opt","super","readable","writable","TypeError","readSize","Infinity","autoClose","end","emit","Buffer","allocUnsafe","Math","min","buf","nextTick","br","ev","ReadStreamSync","threw","readSync","WriteStream","start","defaultFlag","flags","enc","from","push","WriteStreamSync","writeSync","clone","getPrototypeOf","obj","__proto__","create","getOwnPropertyNames","polyfills","legacy","gracefulQueue","previousSymbol","for","noop","publishQueue","context","queue","debug","debuglog","env","NODE_DEBUG","format","arguments","global","fs$close","resetQueue","fs$closeSync","on","patch","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","gracefulify","createReadStream","createWriteStream","fs$readFile","go$readFile","enqueue","fs$writeFile","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$copyFile","go$copyFile","fs$readdir","go$readdir","sort","substr","legStreams","fs$ReadStream","prototype","ReadStream$open","fs$WriteStream","WriteStream$open","set","val","enumerable","configurable","FileReadStream","FileWriteStream","that","destroy","fs$open","go$open","elem","retry","retryTimer","clearTimeout","shift","lastTime","sinceAttempt","sinceStart","max","desiredDelay","concat","Stream","self","paused","bufferSize","index","setEncoding","busy","flush","constants","origCwd","GRACEFUL_FS_PLATFORM","chdir","d","setPrototypeOf","hasOwnProperty","patchLchmod","lutimes","patchLutimes","chownFix","fchown","chmodFix","fchmod","lchmod","chownFixSync","fchownSync","chmodFixSync","fchmodSync","lchmodSync","statFix","fstat","statFixSync","fstatSync","fs$rename","to","backoff","stater","fs$read","callback_","eagCounter","fs$readSync","O_WRONLY","O_SYMLINK","err2","at","mt","lutimesSync","_a","_b","_c","orig","target","chownErOk","nonroot","getuid","_fs","universalify","_readFile","shouldThrow","throws","fromCallback","stripBom","JSON","reviver","fromPromise","content","_writeFile","jsonfile","EOF","finalEOL","EOL","replacer","spaces","isBuffer","toString","helpers","ValidatorResult","SchemaError","attribute","ignoreProperties","validators","validateType","instance","schema","ctx","result","types","Array","isArray","some","testType","bind","list","v","id","$id","addError","argument","testSchemaNoThrow","throwError","throwAll","validateSchema","valid","Function","anyOf","validateAnyOf","inner","importErrors","title","nestedErrors","allOf","validateAllOf","msg","errors","oneOf","validateOneOf","count","if","validateIf","isSchema","ifValid","makeChild","else","getEnumerableProperty","object","propertyIsEnumerable","propertyNames","validatePropertyNames","subschema","property","properties","validateProperties","preValidateProperty","prop","testAdditionalProperty","additionalProperties","patternProperties","validatePatternProperties","pattern","regexp","RegExp","_e","validateAdditionalProperties","minProperties","validateMinProperties","maxProperties","validateMaxProperties","validateItems","array","every","additionalItems","minimum","validateMinimum","number","exclusiveMinimum","maximum","validateMaximum","exclusiveMaximum","validateExclusiveMinimum","validateExclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","multiplier","pow","round","multipleOf","validateMultipleOf","divisibleBy","validateDivisibleBy","required","validateRequired","validatePattern","string","validateFormat","disableFormat","isFormat","minLength","validateMinLength","hsp","maxLength","validateMaxLength","minItems","validateMinItems","maxItems","validateMaxItems","testArrays","a","j","deepCompareStrict","uniqueItems","validateUniqueItems","dependencies","validateDependencies","dep","childContext","propertyPath","validateEnum","String","not","disallow","validateNot","notTypes","schemaId","uri","ValidationError","sum","makeSuffix","stack","throwFirst","detail","ValidatorResultError","validatorType","stringizer","captureStackTrace","SchemaContext","base","schemas","propertyName","FORMAT_REGEXPS","parseFloat","isNaN","e","regex","ipv4","validator","customFormats","b","aKeys","bKeys","deepMerger","dst","deepMerge","indexOf","copyist","copyistWithDeepMerge","objectGetPath","o","s","parts","k","decodeURIComponent","pathEncoder","encodeURIComponent","encodePath","encodePointer","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","extends","scanObject","definitions","anonymousBase","unresolvedRefs","attributes","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","shouldResolve","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","hash","document","testString","testNumber","isFinite","integer","testInteger","boolean","testBoolean","testArray","testNull","date","testDate","any","testAny","testObject","Yallist","SD","MAYBE_EMIT_END","EMITTED_END","EMITTING_END","CLOSED","READ","FLUSH","FLUSHCHUNK","ENCODING","DECODER","FLOWING","PAUSED","RESUME","BUFFERLENGTH","BUFFERPUSH","BUFFERSHIFT","OBJECTMODE","DESTROYED","doIter","_MP_NO_ITERATOR_SYMBOLS_","ASYNCITERATOR","asyncIterator","ITERATOR","iterator","isEndish","isArrayBuffer","ArrayBuffer","byteLength","isArrayBufferView","isView","Minipass","pipes","objectMode","lastNeed","chunk","om","assign","byteOffset","flowing","head","once","resume","pause","noDrain","pipe","ended","stdout","stderr","ondrain","addListener","removeAllListeners","removeListener","collect","dataLength","promise","c","next","onerr","ondata","onend","ondestroy","rej","realZlibConstants","ZLIB_VERNUM","freeze","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","BROTLI_DECODE","BROTLI_ENCODE","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","BROTLI_OPERATION_PROCESS","BROTLI_OPERATION_FLUSH","BROTLI_OPERATION_FINISH","BROTLI_OPERATION_EMIT_METADATA","BROTLI_MODE_GENERIC","BROTLI_MODE_TEXT","BROTLI_MODE_FONT","BROTLI_DEFAULT_MODE","BROTLI_MIN_QUALITY","BROTLI_MAX_QUALITY","BROTLI_DEFAULT_QUALITY","BROTLI_MIN_WINDOW_BITS","BROTLI_MAX_WINDOW_BITS","BROTLI_LARGE_MAX_WINDOW_BITS","BROTLI_DEFAULT_WINDOW","BROTLI_MIN_INPUT_BLOCK_BITS","BROTLI_MAX_INPUT_BLOCK_BITS","BROTLI_PARAM_MODE","BROTLI_PARAM_QUALITY","BROTLI_PARAM_LGWIN","BROTLI_PARAM_LGBLOCK","BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING","BROTLI_PARAM_SIZE_HINT","BROTLI_PARAM_LARGE_WINDOW","BROTLI_PARAM_NPOSTFIX","BROTLI_PARAM_NDIRECT","BROTLI_DECODER_RESULT_ERROR","BROTLI_DECODER_RESULT_SUCCESS","BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT","BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT","BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION","BROTLI_DECODER_PARAM_LARGE_WINDOW","BROTLI_DECODER_NO_ERROR","BROTLI_DECODER_SUCCESS","BROTLI_DECODER_NEEDS_MORE_INPUT","BROTLI_DECODER_NEEDS_MORE_OUTPUT","BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE","BROTLI_DECODER_ERROR_FORMAT_RESERVED","BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE","BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET","BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME","BROTLI_DECODER_ERROR_FORMAT_CL_SPACE","BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE","BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT","BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1","BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2","BROTLI_DECODER_ERROR_FORMAT_TRANSFORM","BROTLI_DECODER_ERROR_FORMAT_DICTIONARY","BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS","BROTLI_DECODER_ERROR_FORMAT_PADDING_1","BROTLI_DECODER_ERROR_FORMAT_PADDING_2","BROTLI_DECODER_ERROR_FORMAT_DISTANCE","BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET","BROTLI_DECODER_ERROR_INVALID_ARGUMENTS","BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES","BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS","BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP","BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1","BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2","BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES","BROTLI_DECODER_ERROR_UNREACHABLE","realZlib","OriginalBufferConcat","_superWrite","ZlibError","_opts","_flushFlag","_finishFlushFlag","_fullFlushFlag","_handle","_onError","_sawError","_level","_strategy","_defaultFullFlush","ZlibBase","finishFlush","reset","flushFlag","alloc","nativeHandle","originalNativeClose","originalClose","_processChunk","writeReturn","Zlib","level","strategy","params","origFlush","Deflate","Inflate","_portable","Gzip","portable","Gunzip","DeflateRaw","InflateRaw","Unzip","Brotli","BrotliCompress","BrotliDecompress","optsArg","pathArg","useNative","mkdirpNative","mkdirpManual","useNativeSync","mkdirpNativeSync","mkdirpManualSync","manual","nativeSync","manualSync","findMade","parent","statAsync","findMadeSync","made","mkdirAsync","promisify","__TESTING_MKDIRP_PLATFORM__","badWinChars","__TESTING_MKDIRP_NODE_VERSION__","versArr","hasNative","t","update","extract","Pack","Unpack","Parse","ReadEntry","WriteEntry","Header","Pax","hlo","fsm","opt_","createSync","Sync","stream","addFilesSync","addFilesAsync","charAt","noResume","onentry","entry","add","stripSlash","filesFilter","extractFileSync","extractFile","extractSync","Map","mapHas","has","maxReadSize","__FAKE_PLATFORM__","__FAKE_TESTING_FS__","fMapEnabled","UV_FS_O_FILEMAP","fMapLimit","fMapFlag","O_TRUNC","O_CREAT","pathModule","large","SLURP","TYPE","off","ex","gex","cksumValid","needPax","nullBlock","block","cksum","linkpath","uname","gname","devmaj","devmin","ctime","decode","decString","decNumber","decDate","prefix","encode","prefixSize","splitPrefix","encString","encNumber","encDate","charCodeAt","pathSize","pp","basename","numToDate","num","decSmallNumber","nanNull","trim","MAXNUM","encSmallNumber","octalString","padOctal","floor","getTime","NULLS","argmap","kv","isSafeInteger","encodeNegative","encodePositive","flipped","byte","onesComp","twosComp","pre","twos","Parser","onentryFunction","listFileSync","listFile","normPath","SymlinkError","CwdError","cGet","cache","cSet","checkCwd","umask","needChmod","doChown","processUid","processGid","preserve","created","sub","mkdir_","part","onmkdir","statEr","checkCwdSync","ok","isDir","TESTING_TAR_FAKE_PLATFORM","PackJob","absolute","pending","ignore","piped","zlib","WriteEntrySync","WriteEntryTar","Tar","ONSTAT","ENDED","QUEUE","CURRENT","PROCESS","PROCESSING","PROCESSJOB","JOBS","JOBDONE","ADDFSENTRY","ADDTARENTRY","STAT","READDIR","ONREADDIR","PIPE","ENTRY","ENTRYOPT","WRITEENTRYCLASS","WRITE","ONDRAIN","warner","preservePaths","strict","noPax","linkCache","statCache","readdirCache","onwarn","zip","gzip","noDirRecurse","follow","noMtime","jobs","job","entries","w","removeNode","source","PackSync","maxMetaEntrySize","Entry","gzipHeader","STATE","WRITEENTRY","READENTRY","NEXTENTRY","PROCESSENTRY","EX","GEX","META","EMITMETA","BUFFER","EMITTEDEND","EMIT","CONSUMECHUNK","CONSUMECHUNKSUB","CONSUMEBODY","CONSUMEMETA","CONSUMEHEADER","CONSUMING","BUFFERCONCAT","MAYBEEND","WRITING","ABORTED","DONE","SAW_VALID_ENTRY","SAW_NULL_BLOCK","SAW_EOF","ondone","header","remain","invalid","meta","go","emittedEnd","re","drainNow","blockRemain","extra","abort","recoverable","have","queues","reservations","getDirs","running","Set","getQueues","paths","dirs","check","q","run","clear","equal","delete","reserve","toLowerCase","charset","comment","body","encodeBody","bodyLen","bufLen","ceil","encodeField","field","byteLen","digits","log","g","merge","parseKV","parseKVLine","line","extended","globalExtended","startBlockSize","writeLen","replaceSync","headBuf","POSITION","bufPos","bytes","h","entryBlockSize","mtimeCache","streamSync","getPos","cb_","onread","flag","onopen","batchStrings","repeat","wc","pathReservations","stripAbsolutePath","ONENTRY","CHECKFS","CHECKFS2","ISREUSABLE","MAKEFS","FILE","DIRECTORY","LINK","SYMLINK","HARDLINK","UNSUPPORTED","CHECKPATH","MKDIR","ONERROR","PENDING","PEND","UNPEND","MAYBECLOSE","SKIP","DOCHOWN","UID","GID","CHECKED_CWD","crypto","getFlag","unlinkFile","randomBytes","unlinkFileSync","uint32","pruneCache","abs","plower","transform","dirCache","preserveOwner","setOwner","getgid","forceChown","win32","newer","keep","strip","processUmask","noChmod","dmode","fmode","linkparts","stripped","aRoot","pRoot","fullyDone","actions","utimes","tx","unsupported","afterMakeParent","lstatEr","afterChmod","callSync","UnpackSync","mkParent","oner","closeError","futimeser","utimesSync","utimeser","fchowner","chowner","mtimeFilter","Base","tarCode","raw","win","char","fromCharCode","toWin","toRaw","prefixPath","HEADER","LSTAT","ONLSTAT","ONREAD","ONREADLINK","OPENFILE","ONOPENFILE","CLOSE","MODE","AWAITDRAIN","PREFIX","HAD_ERROR","winchars","modeFix","myuid","myuser","USER","blockLen","pathWarn","getType","linkKey","writeBuf","flushed","readEntry","walker","Node","tail","l","prev","unshiftNode","pushNode","unshift","thisp","forEachReverse","getReverse","mapReverse","initial","reduceReverse","toArray","arr","toArrayReverse","sliceReverse","splice","deleteCount","nodes","insert","reverse","inserted","TOKEN_REF","TOKEN_INTERFACES","TOKEN_DATE","TOKEN_ENUM","TOKEN_MAP","TOKEN_STRUCT","isObjRef","isWireDate","isWireEnum","isWireMap","isWireStruct","isMethodOverride","isPropertyOverride","Kernel","callbackHandler","traceEnabled","assemblies","objects","ObjectTable","_typeInfoForFqn","cbs","waiting","nextid","moduleLoad","nodeRequire","sandbox","vm","createContext","setImmediate","require","load","_debug","pkgname","pkgver","packageDir","_getPackageDir","epkg","assm","assembly","metadata","originalUmask","tar","tarball","jsiiMetadataFile","spec","SPEC_FILE_NAME","assmSpec","closure","_execute","Assembly","_addAssembly","invokeBinScript","bin","scriptPath","script","cp","spawnSync","NODE_OPTIONS","execArgv","PATH","execPath","shell","status","signal","_create","del","objref","deleteObject","sget","symbol","fqn","ti","_typeInfoForProperty","static","_findSymbol","_ensureSync","_wrapSandboxCode","_fromSandbox","sset","immutable","_toSandbox","findObject","interfaces","propertyToGet","_findPropertyTarget","propInfo","propertyToSet","invoke","_findInvokeTarget","_toSandboxValues","parameters","returns","sinvoke","_typeInfoForMethod","begin","syncInProgress","prid","_makeprid","promiseid","callbacks","_req","cbid","cookie","override","complete","fail","sandoxResult","expectedReturnType","succeed","naming","assemblyName","_assemblyFor","targets","objectCount","typedef","kind","TypeKind","Interface","Class","Enum","tagJsiiConstructor","_findCtor","wire","EMPTY_OBJECT_FQN","ctor","typeinfo","classType","_validateMethodArguments","initializer","installDir","mkdtempSync","os","tmpdir","onExit","requestArgs","ctorResult","registerObject","overrides","overrideTypeErrorMessage","_applyMethodOverride","_applyPropertyOverride","_getSuperPropertyName","typeFqn","_tryTypeInfoForMethod","_tryTypeInfoForProperty","CANONICAL_ANY","_defineOverridenProperty","getPropertyDescriptor","prevEnumerable","_makecbid","direct","proto","methodInfo","variadic","_defineOverridenMethod","methodName","methodArgs","_fromSandboxValues","param","arg","optional","describeTypeReference","curr","components","moduleName","fqnInfo","addendum","classFqn","bases","typeInfo","isClassType","classTypeInfo","isInterfaceType","interfaceTypeInfo","baseFqn","expectedType","serTypes","serializationType","host","findSymbol","lookupType","recurse","SERIALIZERS","serializationClass","deserialize","typeRef","targetType","serialize","xs","_boxUnboxParameters","boxUnbox","desc","superProp","Script","runInContext","displayErrors","OBJID_SYMBOL","IFACES_SYMBOL","JSII_SYMBOL","jsiiTypeFqn","objectReference","tagObject","objid","managed","resolveType","existingRef","allIfaces","iface","removeRedundant","makeId","builtIn","InterfaceCollection","addFromClass","addFromInterface","removeSyncPaths","registerIfNeeded","registered","onExitHandler","SYMBOL_WIRE_TYPE","_type","optionalValue","nullAndOk","isDate","serializeDate","deserializeDate","primitiveType","isScalar","primitive","collection","CollectionKind","elementtype","PrimitiveType","Json","mapJsonValue","mapValues","toMap","enumType","enumMap","enumEntry","find","deserializeEnum","arrayType","mapType","namedType","props","propertiesOf","validateRequiredProps","isAssignable","jsiiType","namedTypeRef","declaredType","prevRef","isByReferenceOnly","mapOfAny","toISOString","lookup","enumLocator","lastIndexOf","typeName","valueName","enumValue","isPrimitiveTypeReference","Any","Boolean","isCollectionTypeReference","isUnionTypeReference","compoundTypes","flatMap","union","compareSerializationClasses","isEnumType","datatype","out","wireValue","isClassOrInterfaceType","actualTypeFqn","requiredType","actualType","actualProps","specProps","missingRequiredProps","order","descr","KernelHost","inout","kernel","eventEmitter","EventEmitter","exit","processRequest","event","listener","completeCallback","completeReq","apiReq","findApi","checkIfAsyncIsAllowed","writeOkay","isPromise","writeError","noStack","apiName","InputOutput","stdio","output","writeLine","writeErrorLine","reqLine","readLine","startsWith","INPUT_BUFFER_SIZE","SyncStdio","bufferedData","readBuffer","errorFD","stdin","readFD","writeFD","writeBuffer","newData","newLinePos","SchemaVersion","Stability","isNamedTypeReference","isMethod","callable","unionType","isDeprecated","entity","docs","stability","Deprecated","NameTree","_children","nameTree","values","register","_fqn","rest","validateAssembly","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","nmd","packageInfo","JSII_NOSTACK","JSII_DEBUG","hello"],"sourceRoot":""}